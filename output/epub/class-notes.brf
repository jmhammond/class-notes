        ,ma? #cba ,class ,notes
             ,john ,hammond
    ,de"p;t ( ,ma!matics & ,/ati/ics
        ,wi*ita ,/ate ,univ}s;y

                ,3t5ts 
  ,colophon
  ,ac"kl$ge;ts
  ,preface
  ,*apt} #a ,basic ,objects & ,symbols
    ,sec;n #a4a ,proposi;nal ,logic
      ,subsec;n #a4a4a ,! ,basics
      ,subsec;n #a4a4b ,tru? ,tables =
        ,logical ,3nectives
    ,sec;n #a4b ,sets
      ,subsec;n #a4b4a ,basic t}m9ology
      ,subsec;n #a4b4b ,op}a;ns on sets
      ,subsec;n #a4b4c ,v}ify+ ,set
        ,id5tities
    ,sec;n #a4c ,rela;ns & ,func;ns
      ,subsec;n #a4c4a ,rela;ns
      ,subsec;n #a4c4b ,func;ns
  ,*apt} #b ,symbolic ,logic & ,pro(s
    ,sec;n #b4a ,logical ,equival;es
    ,sec;n #b4b ,applica;n3 ,set
      ,prop}ties & ,equival;es
    ,sec;n #b4c ,pr$icates & ,logical
      ,quantifi}s
      ,subsec;n #b4c4a ,pr$icates
      ,subsec;n #b4c4b ,logical
        ,quantifi}s
    ,sec;n #b4d ,logical ,>gu;ts
    ,sec;n #b4e ,an 9troduc;n to pro(s
      ,subsec;n #b4e4a ,basic numb}
        3cepts
      ,subsec;n #b4e4b ,basic 3cepts (
        pro(
      ,subsec;n #b4e4c ,direct ,pro(
      ,subsec;n #b4e4d ,9direct ,pro(s
        ,subsubsec;n #b4e4d4a ,pro( by
          ,3traposi;n
        ,subsubsec;n #b4e4d4b ,pro( by
          ,3tradic;n
      ,subsec;n #b4e4e ,pro(s (
        equival;e
      ,subsec;n #b4e4f ,pro( by cases
      ,subsec;n #b4e4g ,exi/;e ,pro(s
      ,subsec;n #b4e4h ,unique;s pro(s
      ,subsec;n #b4e4i ,vacu|s &
        ,trivial ,pro(s
      ,subsec;n #b4e4aj ,c.t}examples
        ,revisit$
    ,sec;n #b4f ,*apt} ,review
  ,*apt} #c ,"s ,classic ,numb} ,!ory
    ,sec;n #c4a ,divisibil;y & ,3gru;es
      ,subsec;n #c4a4a ,! ,divides
        ,rela;n
      ,subsec;n #c4a4b ,! ,3gru;e
        ,rela;n
    ,sec;n #c4b ,prime ,numb}s
    ,sec;n #c4c ,,gcd,'s & ,! ,euclid1n
      ,algori?m
    ,sec;n #c4d ,multiplicative ,9v}ses
    ,sec;n #c4e ,modul> expon5tia;n
    ,sec;n #c4f ,applica;n3 ,5cryp;n
      ,subsec;n #c4f4a ,basic ,ciph}
        ,examples
      ,subsec;n #c4f4b ,numb} ,!ory ,us+
        ,sage
      ,subsec;n #c4f4c ,! ,,rsa ,activ;y
  ,*apt} #d ,sequ;es1 ,recurr;e1 &
    ,9duc;n
    ,sec;n #d4a ,sequ;es & ,s}ies
    ,sec;n #d4b ,solv+ ,recurr;e
      ,rela;ns
      ,subsec;n #d4b4a ,motiva;n1 or1 :y
        d ,i c>e8
      ,subsec;n #d4b4b ,solv+ recurr;e
        rela;ns
      ,subsec;n #d4b4c ,solv+ "picul>ly
        nice recurr;e rela;ns
    ,sec;n #d4c ,ma!matical ,9duc;n
  ,*apt} #e ,c.t+ ,te*niques
    ,sec;n #e4a ,! ,multiplicative &
      ,additive ,pr9ciples
    ,sec;n #e4b ,comb9a;ns & ,p}muta;ns
    ,sec;n #e4c ,! ,b9omial ,!orem &
      ,comb9atorial ,pro(s
      ,subsec;n #e4c4a ,! ,b9omial
        ,!orem & ,b9omial ,coe6ici5ts
      ,subsec;n #e4c4b ,comb9atorial
        ,pro(s
    ,sec;n #e4d ,a surprise 3nec;n -
      ,c.t+ ,fibona3i numb}s
  ,solu;ns to ! ex}cises
               ,colophon
  ~1,website~',class ,notes ,website
  ~c#bjah-#bjbb ,john ,hammond
  ,? "w is lic5s$ "u ! ,cr1tive ,commons
,attribu;n-,%>e,alike #d4j ,9t}na;nal
,lic5se4 ,to view a copy ( ? lic5se1
visit
http3_/_/cr1tivecommons4org_/lic5ses_/b-
y-sa_/#d4j_/

              ,ac"kl$ge;ts
  ,? book borr{s h1vily f ! ex}cises (
,osc> ,lev9's ,4crete ,ma!matics3 ,an
,op5 ,9troduc;n4
  ,! mat}ial 9 sec;n ,sec;n #e4d 0 f/
4cov}$ 9 ,>?ur ,b5jam9 & ,j5nif} ,qu9n's
.7,pro(s t ,r1lly ,c.t3 ,! ,>t (
,comb9atorial.' .1,pro(.'1 & ! ex}cises
9 t sec;n come f t book1 & 9flu;ed e
*oice ( ,fibona3i sequ;e problem 9 !
rema9d} ( ! text4
  ,special ?anks goes to ! ,wi*ita ,/ate
,op5_/,alt}native ,textbook ,9itiative =
_! g5}|s grant to help exp& ! text4
  ,i'm al grate;l = y1 r1d}1 z we g on ?
j|rney ( ma!matics tgr4 ,? is go+ to 2
fun4

                ,preface
  ,! ,,wsu ,catalog says ( ? c|rse3
  ,,ma? #cba4  ,4crete ,/ructures ,i
  ,cross-li/$ z ,,cs #cba4 ,provides a
ma!matical f.da;n ess5tial to ! 5tire
comput} sci;e curriculum4 ,9cludes
proposi;nal & pr$icate logic1 9duc;n1
recur.n & c.t+ te*niques4 ,pr}equisite3
,,ma? #bdb or equival5t ) a grade po9t (
#b4jjj or bett}4
  ,we'll 2 explor+ ~! >1s1 al;g ) 5
numb} !ory to d an 9t}e/+ applica;n to
5cryp;n4
  ,? c|rse is v di6}5t t yr pa/ ma?
c|rses4 ,keep an op5 m9d1 & pl1se ask
"qs6 ,? mi<t 2 ! 8h>de/0 ma? class y
take1 b x c al 2 "o ( ! mo/ rew>d+4

  ,*apt} #a ,basic ,objects & ,symbols

    ,sec;n #a4a ,proposi;nal ,logic

    ,subsec;n #a4a4a ,! ,basics
7777777777777777777777777777777777777777
,def9i;n  #a4a4a 4  ,logical
,proposi;ns4
  ,a ~1logical ~1proposi;n or ~1logical
~1/ate;t is a s5t;e : is ei true or
false1 b n bo?4
7777777777777777777777777777777777777777
,example  #a4a4b 4
  ,: ( ! foll{+ >e logical proposi;ns8

#a4 ,? is a c|rse 9 4crete ma!matics
#b4 ,*ocolate cupcakes >e ! be/
#c4 _% #1-3 .k #4 _:
#d4 ,wi*ita is ! capitol ( ,kansas
#e4 ,:at >e y do+8
7777777777777777777777777777777777777777
,def9i;n  #a4a4c 4  ,logical ,nega;n4
  ,let .2;p 2 a logical proposi;n4 ,!
~1nega;n ( .2;p1 d5ot$ by _% p _: has !
opposite tru? value ( .2;p4
7777777777777777777777777777777777777777
,example  #a4a4d 4
  ,:at >e ! logical nega;ns ( ea* ( !
foll{+8

#a4 ,? is a c|rse 9 4crete ma!matics
#b4 _% #1-3 .k #4 _:
#c4 ,wi*ita is ! capitol ( ,kansas
7777777777777777777777777777777777777777
,def9i;n  #a4a4e 4  ,logical ,op}a;ns4
  ,let .2;p & .2;q 2 proposi;ns4 ,!
~13junc;n ( .2;p & .2;q1 d5ot$
_% p`%q _:1 is ! proposi;n 8.2;p &
.2;q04
  ,! ~14junc;n ( .2;p & .2;q1 d5ot$
_% p`+q _:1 is ! proposi;n 8.2;p or .2;q
 "<or bo?">04
  ,! logical 4junc;n is an 89clusive
or04 ,on ! o!r h&1 we def9e ! 8exclusive
or0 ( .2;p & .2;q to 2 ! proposi;n 8.2;p
or .2;q b n bo?04 ,we won't 2 us+ x 9
,4crete #a1 s we won't give x a special
symbol4
7777777777777777777777777777777777777777
,def9i;n  #a4a4f 4  ,3di;nal ,/ate;ts4
  ,let .2;p & .2;q 2 proposi;ns4 ,!
~13di;nal ~1/ate;t is ! comp.d proposi;n
8if .2;p !n .2;q04 ,! 3di;nal is d5ot$
by _% p $o q _:4
  ,we call .2;p ! ~1hypo!sis or antec$5t
or premise1 & .2;q is ! ~13clu.n or
3sequ;e4
7777777777777777777777777777777777777777
,example  #a4a4g 4
  ,write ! foll{+ z a simple ,5gli%
expres.n1 lett+ .2;p 2 ! /ate;t 8x ra9s0
& .2;q 2 ! /ate;t 8,i compla9 ab !
w1!r04

#a4 _% p $o q _:
#b4 _% p`+q _:
#c4 _% q $o p _:
#d4 _% q $o p _:
  ,:at is ! logical nega;n ( _% p $o
q _: 9 simple ,5gli%8
7777777777777777777777777777777777777777
,note  #a4a4h 4
  ,"! >e _m ways to phrase ! 3di;nal
/ate;t _% p $o q _:4 ,"h >e j a few
common "os3

_4 ,if .2;p1 !n .2;q4
_4 .2;p implies .2;q4
_4 .2;p only if .2;q4
_4 .2;p if su6ici5t = .2;q4
_4 .2;q is nec = .2;p4
_4 .2;q if .2;p4
_4 .2;q :5"e .2;p4
_4 .2;q un.s _% p _:4
7777777777777777777777777777777777777777
,def9i;n  #a4a4i 4
,3v}se_/,9v}se_/,contrapositive4
  ,let .2;p & .2;q 2 proposi;ns4 ,= !
3di;nal _% p $o q _:1 we def9e3

_4 ,! ~13v}se is _% q $o p _:
_4 ,! ~19v}se is _% p $o q _:
_4 ,! ~13trapositive is _% q $o p _:
7777777777777777777777777777777777777777
,def9i;n  #a4a4aj 4  ,bicondi;nal
,/ate;ts4
  ,let .2;p & .2;q 2 proposi;ns4 ,!
~1bicondi;nal ( .2;p & .2;q1 is !
/ate;t 8.2;p if & only if .2;q01 d5ot$
_% p ${33o q _:4
  ,o!r ways to phrase an 8if & only if0
/ate;t3

_4 .2;p iff .2;q4
_4 .2;p is nec & su6ici5t = .2;q4
_4 ,if .2;p !n .2;q & 3v}sely4
  ,j z ) >i?metic op}a;ns "<_% +, -, `*,
`/ _:"> on numb}s1 we ne$ to def9e an
ord} ( op}a;ns s t comp.d proposi;ns c 2
"u/ood )|t gr|p+ symbols4 ,?|< = cl>;y1
we w g5}ally write gr|p+ symbols4
,op}ator ,prec$;e4
_%  _:2 hi<e/4
_% `%, `+ _:2 next1 f left to "r4
_% $o, ${33o _:2 l{e/1 left to "r4
  ,= example3
_% p`+q`%r $o p`%q _l (((p)`+q)`%r) $o
(p`%q) _:

    ,subsec;n #a4a4b ,tru? ,tables =
    ,logical ,3nectives
  ~1,tru? ~1tables all{ u to uniquely
det}m9e ! tru? value ( a comp.d
proposi;n1 bas$ on ! tru? values ( !
simple /ate;ts f : x is made4 ,2l >e !
tru? tables = 3junc;n _% `% _:1 4junc;n
_% `+ _:1 3di;nal _% $o _:1 bicondi;nal
_% ${33o _:1 exclusive or _% $c_$+} _:1
& nega;n _%  _:4
.2;p .2;q _% p`%q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;f4,'
.2;p .2;q _% p`+q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;t4,'
;,,,f2 ;t2 ;t4,'
;,,,f2 ;f2 ;f4,'
.2;p .2;q _% p $o q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;t4,'
;,,,f2 ;f2 ;t4,'
.2;p .2;q _% p ${33o q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
.2;p _% p _:4
;,t2 ;,f4
;,f2 ;,t4
4
7777777777777777777777777777777777777777
,example  #a4a4aa 4
  ,3/ruct a tru? table = ea* ( ! foll{+
/ate;ts3

#a4 _% p $o (q`+r) _:
#b4 _% p`%q _:
#c4 _% (p $o q)`%(p $o q) _:
#d4 _% (p`%r)`+(q`%r) _:
7777777777777777777777777777777777777777
,example  #a4a4ab 4
  ,imag9e yr t1*} makes ! foll{+
"<une?ical"> /ate;t1 8if y >e a cat
lov}1 !n ,i'll give y an ,a 9 ? class40

_4 ,d y n love cats8 ,if s1 x doesn't
  matt} :e!r y get an ,a or n1 :at yr
  t1*} sd 0 n a lie4
_4 ,>e y a cat lov}8 ,!n ! only way !
  t1*} li$ to y is if y didn't get an
  ,a4
7777777777777777777777777777777777777777
,comput} ,corn}4
  ,! objects t >e logical proposi;ns 9
ma!matics >e bool ,bool1n datatypes 9
comput} sci;e4 ,= example1 ! clause  #e
`<"7 #c w evaluate to ,false4 ,?
corresponds to ! proposi;n
_% p_3.k _:8#e _% "k: _: #c0_% _l ,f _:4
  ,9 ;,c-l syntax3

_4 ,logical &1 _% p`%q _:1 is 9 code ;p
  `&`& ;q
_4 ,logical or1 _% p`+q _:1 is 9 code ;p
  _|_| ;q
_4 ,logical nega;n1 _% p _:1 is ! code
  6p
_4 ,! 3di;nal is an if444!n /ate;t
  ,s a block ( code s* z3

         if "<colli.n "7"7 #a `&`& obj_&
ect"7"7s~w `&`& 6block+">_<_&
_/_/ hit by a s~w1 take damage_&
  h1l?--2         _>
corresponds to a logical /ate;t ( ! =m
_% (p`%q`%r) $o s _:
,ex}cises #a4a4c ,ex}cises #a 4
  ,3/ruct a tru? table = ! comp.d /ate;t
_% ((p $o q)`%p) $o q _:
,solu;n 43
.2;p2 .2;q2 _% ((p $o q)`%p) $o q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;t4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
#b 4
  ,3sid} ! /ate;t ab a "py1 8,if x's yr
bir?"d or "! w 2 cake1 !n "! w 2 cake40

a4 ,translate ! abv /ate;t 9to symbols4
  ,cle>ly /ate : /ate;t is .2;,p & : is
  .2;,q4
;b4 ,make a tru? table = ! /ate;t4
;c4 ,assum+ ! /ate;t is true1 :at "<if
  any?+"> c y 3clude if "! w 2 cake8
;d4 ,assum+ ! /ate;t is true1 :at "<if
  any?+"> c y 3clude if "! w n 2 cake8
;e4 ,suppose y f.d | t ! /ate;t 0 a lie4
  ,:at c y 3clude8
,solu;n 43

a4 .2;,p3 x's yr bir?"d2 .2;,q3 "! w 2
  cake4 _% (,p`+,q) $o ,q _:
;b4 ,h9t3 y %d get ?ree ;,t's & "o ;,f4
;c4 ,only t "! w 2 cake4
;d4 ,x's ,,n yr bir?"d6
;e4 ,x's yr bir?"d1 b ! cake is a lie4
#c 4
  ,make a tru? table = ! /ate;t
_% (p`+q) $o (p`%q) _:4
,solu;n 43
.2;p2 .2;q2 _% (p`+q) $o (p`%q) _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
#d 4
  ,make a tru? table = ! /ate;t _% p`%(q
$o p) _:4 ,:at c y 3clude ab .2;p & .2;q
if y "k ! /ate;t is true8
,solu;n 43
.2;p2 .2;q2 _% p`%(q $o p) _:4
;,,,t2 ;t2 ;f4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
  ,if ! /ate;t is true1 !n bo? .2;p &
.2;q >e false4
#e 4
  ,make a tru? table = ! /ate;t _% p $o
(q`%r) _:4
,h9t 43
  ,l abv1 only n{ y w ne$ #h r{s 9/1d (
j #d4
#f 4
  ,/ate ! 3v}se1 9v}se1 & 3trapositive (
ea* ( ! foll{+ 3di;nal /ate;ts3

a4 ,if x ra9s td1 !n ,i w br+ an
  umbrella4
;b4 ,:5"e ,i drive my c>1 ,i d n use my
  ph"o4
;c4 ,:5 ,i /ay up too late1 x's nec t ,i
  sleep until noon4
,solu;n 43

a4 ,3v}se3 8,if ,i br+ an umbrella !n x
  ra9s td404 ,9v}se3 8,if x doesn't ra9
  td !n ,i won't br+ an umbrella40
  ,3trapositive3 8,if ,i won't br+ an
  umbrella1 !n x isn't ra9+ td04
;b4 ,! 3di;nal 8,:5"e ,i drive my c>1 ,i
  d n use my ph"o0 is 8,if ,i drive my
  c>1 !n ,i don't use my ph"o40 ,n{ f9d
  ! o!r /ate;ts4
;c4 ,! 3di;nal 8,:5 ,i /ay up too late1
  x's nec t ,i sleep until noon0 is 8,if
  ,i /ay up too late1 !n x's nec t ,i
  sleep until noon40 ,n{ f9d ! o!r
  /ate;ts4
#g 4
  ,a classic example is t we're on !
isl& ( kni<ts & knaves4 ,kni<ts alw tell
! tru?4 ,knaves alw lie4
  ,we 5c.t} two p ,a & ;,b4

_4 ,a says3 8;,b is a kni<t40
_4 ;,b says3 8,! two ( u >e opposite
  types40
,:at is ! 3clu.n8
,solu;n 43
  ,a & ;,b >e bo? ly+ knaves4
#h 4
  ,? "t y 5c.t} two p1 ,a1 & ;,b1 & ,a
says 8,i am a knave or ;,b is a kni<t10
& ;,b says no?+4 ,:at c y 3clude8
,h9t 43
  ,:at happ5s if ,a is a kni<t & is
tell+ ! tru?8 ,:at happ5s if ,a is ly+8
,: sc5>ios >e impossible8 ,:at m/ !
answ} be8
#i 4
  ,? is a favorite ( my dau<t}4 ,y 5c.t}
a gu>d /&+ at a =k 9 ! road4 ,x is n "kn
:e!r ! gu>d is a kni<t or a knave1 t is1
t !y w "<alw"> tell ! tru? or "<alw">
lie4 ,"o ( ! pa?s l1ds to grt tr1sure1 !
o!r l1ds to a viol5t & sc>y d1?4 ,y >e
all{$ to ask "o & only "o "q to ! gu>d4
  ,:at c y ask ! gu>d 9 ord} to 5sure y
g on ! pa? t{>ds ! tr1sure8
,h9t 43
  ,! "q is complicat$1 by n .1too
complicat$4

           ,sec;n #a4b ,sets

    ,subsec;n #a4b4a ,basic t}m9ology
7777777777777777777777777777777777777777
,def9i;n  #a4b4a 4  ,sets4
  ,a ~1set is an unord}$ collec;n (
objects call$ ~1ele;ts or ~1memb}s ( !
set4
  ,if .2,a is a set & .2a is an ele;t (
.2,a1 we write _% a `e ,a _:4 ,if .2;b
isn't an ele;t ( .2,a1 we write _% b /`e
,a _:4
7777777777777777777777777777777777777777
,example  #a4b4b 4
  ,2l >e examples ( ways ( writ+ sets3

~1,ro/}
    _% ,a .k .(list, out, the, elements,
  in, a, comma, separated, list '''.) _:
   ,= example3 _% ,a .k .(2, 4, 6, 8,
  10, '''.). _:
~1,set-build}
    _% ,b .k .(variable|condition for
  variable to be in the set.) _:  ,=
  example1 _% ,b .k .(x|x .1 #0 and x is
  an even integer.) _:
7777777777777777777777777777777777777777
,def9i;n  #a4b4c 4  ,special ,sets (
,numb}s4
  ,"h >e "s special sets we w visit (t5
"?|t ! c|rse & ! re/ ( yr ma!matical
c>e}3

~1,empty ~1set
    _% _0 .k .(.) _: is ! set 3si/+ ( no
  ele;ts4
~1,natural ~1,numb}s
    _% `;,n .k .(0, 1, 2, 3, 4,
  '''.) _:1 ! set ( c.t+ numb}s & z}o4
~1,9teg}s
    _% `;,z .k .( ''', -#3, -#2, -#1,
  #0, #1, #2, #3, '''.) _: 9cludes all
  negative1 z}o1 & positive c.t+ numb}s
~1,positive ~1,9teg}s
    _% `;,z~+ .k .(1, 2, 3, '''.) _:
  3ta9s only ! positive c.t+ numb}s4
~1,ra;nal ~1,numb}s
  _%
  `;,q-
                                     .k-
   .( ;p |p `e `;,z, q `e `;,z,  and q-
  /.k #0.)
  -
  -
     ?33#-
  
  -
  -
      ;q-
  
  -
  -
  -
  
  .k .(0, 1, -#1, #2,  #1 , - #1 , -#2,-
   #3,  #1 , - #1 , -#3,  #3 , '''.)
                      ?33#   ?33#-
       ?33#   ?33#       ?33#
                       #2     #2-
        #3     #3         #2
  _:
  is ! set ( all frac;ns4
~1,r1l ~1,numb}s
    _% `;,r _: is ! set ( all r1l
  numb}s4 ,9 ,calculus1 we wrote !
  9t}val _% (-,=, ,=) _:4 ,? 9cludes all
  frac;ns & ~? irra;nal numb}s t c't 2
  writt5 z frac;ns4
7777777777777777777777777777777777777777
,note  #a4b4d 4
  ,:5 us+ set-build} nota;n1 we c ?9k ab
x ? way3 _% .(elements look like
this|qualifications for membership.) _:
  ,"h >e s"eal examples %{+ a v>iety (
ways ( writ+ sets3

#a4 _% .(x||2x+1| "k: #10`%x `e
  `;,z.) _: tells u |r ele;ts >e go+ to
  2 :at"e .2;x satisfy ! expres.n
  _% |2x+1| "k: #10 _: ": |r v>iables >e
  9teg}s4 ,? w 2 exactly _% .(-#5, -#4,
  -#3, -#2, -#1, #0, #1, #2, #3, #4.) _:
#b4
  _%
  .(a `e `;,n| ;a  .1: #4.)
              ?33#
               #2
  _:
  m1ns t ! ele;ts w 2 natural numb}s
  "<_% a `e `;,n _:">1 & ! qualifica;n
  to 2 9 ! set is t _% a_/2 .1: #4 _:4
  ,note t same lr .2a64 ,a ll algebra
  says _% a .1: #8 _: is ! qualifica;n1
  & s9ce ! ele;ts >e ~? .2z1 |r set is
  _% .(8, 9, 10, 11, 12, '''.) _:
#c4
  _%
  .( ;a  `e `;,q|a `e `;,n.)
    ?33#
     #2
  _:
  m1ns ! ele;ts w 2 ra;nal numb}s ( ! =m
  _%
   ;a
  ?33#
   #2
  _:
  "<
  _%
   ;a  `e ,q
  ?33#
   #2
  _:
  ">4 ,s9ce ! qualifica;n is j t ! .2a
  is a natural numb}1 t tells u to fe$
  all natural numb}s 9to |r set1 s we h
  _% .(0, 1_/2, 1, 3_/2, 2, 5_/2,
  '''.) _:
#d4 ,we h al se5 9t}vals ( r1l numb}s 9
  |r previ|s c|rses : >e ! sets3
    _% (a, b) .k .(x|a "k x "k b, x `e
  `;,r.) _:_% `(a, b) .k .(x|a "k: x "k
  b, x `e `;,r.) _:
    _% (a, b`) .k .(x|a "k x "k: b, x `e
  `;,r.) _:_% `(a, b`) .k .(x|a "k: x
  "k: b, x `e `;,r.) _:
7777777777777777777777777777777777777777
,def9i;n  #a4b4e 4  ,set ,rela;ns4
  ,we say t two sets1 .2,a & .2;,b >e
~1equal~'1 an write _% ,a .k ,b _: !y h
exactly ! same ele;ts4
  ,we say t .2,a is a ~1subset ( .2;,b1
& write _% ,a _"k: ,b _: if e ele;t (
.2,a is an ele;t ( .2;,b4
  ,if "! is an ele;t ( .2;,b : is n al 9
.2,a1 we say t .2,a is a ~1prop}
~1subset ( .2;,b & write _% ,a _"k
,b _:4
7777777777777777777777777777777777777777
,example  #a4b4f 4
  ,3sid} ! set _% ,s .k .(1, 2, 3, 4,
5.) _:1 !n3

_4 _% #3 `e ,s _:1 s9ce #c is an ele;t (
  .2;,s
_4 _% .(3.) _"k: ,s _:1 2c ! set 3si/+ (
  #c1 _% .(3.) _:1 is a subset ( .2;,s4
_4 ,we c al write1 _% .(3.) _"k ,s _:1
  2c al? ! set _% .(3.) _: is a subset (
  .2;,s1 !y're unequal3 _% .(3.) /.k
  ,s _:1 s x's a prop} subset4
_4 ,? is m1n+.s3 _% #3 _"k: ,s _: s9ce
  #c a numb}1 n a set1 s x c't 2 a
  subset ( .2;,s
_4 ,ord} 9 sets doesn't matt}1 s _% .(3,
  1, 5, 4, 2.) .k ,s _:4
7777777777777777777777777777777777777777
,!orem  #a4b4g 4
  ,= e set .2;,s1

_4 _% _0 _"k: ,s _: &
_4 _% ,s _"k: ,s _:4
7777777777777777777777777777777777777777
,note  #a4b4h 4
  ,s9ce a set is alw a subset ( xf we c
say t if two sets1 .2,a & .2;,b >e
equal1 !n .2,a is a subset ( .2;,b &
vice v}sa4
_% ,a .k ,b ${33o (,a _"k: ,b and ,b
_"k: ,a) _:
7777777777777777777777777777777777777777
,def9i;n  #a4b4i 4  ,p{} ,set4
  ,giv5 any set .2;,s1 ! ~1p{} ~1set (
.2;,s is ! set ( all subsets ( ! set
.2;,s4 ,we d5ote ! p{} set ( .2;,s by
_% `;,p(,s) _:
7777777777777777777777777777777777777777
,example  #a4b4aj 4
  ,f9d ! p{} set (3

#a4 _% .(a, b, c.) _:
#b4 _% .(1, 2.) _:
#c4 _% _0 _:
7777777777777777777777777777777777777777
,def9i;n  #a4b4aa 4  ,c>d9al;y4
  ,let .2;,s 2 a set4 ,if "! >e exactly
.2;n 4t9ct ele;ts 9 .2;,s ": .2;n is a
nonnegative 9teg}1 !n we say t .2;,s is
a ~1f9ite set ) ~1c>d9al;y ( .2;n1 &
write _% |,s| .k n _:4
  ,a set is sd to 2 ~19f9ite if x is n
f9ite4
7777777777777777777777777777777777777777
,example  #a4b4ab 4
  ,f9d ! c>d9al;y3

#a4 _% |.(a, b, c.)| _:
#b4 _% |`;,p(.(a, b, c.))| _:
#c4 _% |_0| _:

    ,subsec;n #a4b4b ,op}a;ns on sets
7777777777777777777777777777777777777777
,def9i;n  #a4b4ac 4
  ,we def9e an ~1ord}$ _% n- _:~1tuple
to 2 an ord}$ collec;n ( ! =m _% (a1,
a2, ''', a;n") _:4
  ,we call ! _% #2- _:tuple _% (a1,
a2) _: an ~1ord}$ ~1pair~'1 & !
_% #3- _:tuple _% (a1, a2, a3) _: an
~1ord}$ ~1triple~'4
7777777777777777777777777777777777777777
,def9i;n  #a4b4ad 4  ,c>tesian ,product4
  ,let .2,a & .2;,b 2 sets4 ,!
~1,c>tesian ~1,product ( .2,a & .2;,b1
d5ot$ by _% ,a`*,b _:1 is ! set ( all
ord}$ pairs _% (a, b) _: ": _% a `e
,a _: & _% b `e ,b _:4 ,t is1
_% ,a`*,b .k .((a, b)|a `e ,a and b `e
,b.) _:
  ,we al d5ote ! ,c>tesian product ( a
set ) xf by ! sup}script _% ,a~2 .k
,a`*,a _:4
7777777777777777777777777777777777777777
,example  #a4b4ae 4
  ,let _% ,a .k .(1, 2.) _: & _% ,b .k
.(x, y, z.) _:1 f9d3

#a4 _% |,a| _:
#b4 _% |,b| _:
#c4 ,h{ _m ele;ts d y expect 9
  _% ,a`*,b _:;8
#d4 _% ,a`*,b _:
#e4 _% ,b`*,a _:
#f4 _% ,a~2 _:
7777777777777777777777777777777777777777
,def9i;n  #a4b4af 4  ,set ,op}a;ns4
  ,if .2,a & .2;,b >e two sets1 we def9e
! ~1union ( .2,a & .2;,b1 d5ot$
_% ,a.+,b _:1 to 2 ! set ( all ele;ts t
>e 9 .2,a or .2;,b1 or bo?4
_% ,a.+,b .k .(x|x `e ,a or x `e ,b.) _:
  ,z a ,v5n diagram3
,image ,,id3 ,a-or-;,b
,descrip;n3 ,v5n diagram = set union4
,two circles label$ ,a & ;,b4 ,bo?
circles >e completely %ad$4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
  ,if .2,a & .2;,b >e two sets1 we def9e
! ~19t}sec;n ( .2,a & .2;,b1 d5ot$
_% ,a.%,b _:1 to 2 ! set ( only ele;ts t
>e 9 bo? .2,a & .2;,b4
_% ,a.%,b .k .(x|x `e ,a and x `e
,b.) _:
  ,z a ,v5n diagram3
,image ,,id3 ,a-&-;,b
,descrip;n3 ,v5n diagram = set 9t}sec;n4
,two circles label$ ,a & ;,b4 ,only ": !
two circles ov}lap is %ad$4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
  ,if .2,a & .2;,b >e two sets1 we def9e
! ~1di6};e ( .2,a & .2;,b1 d5ot$
_% ,a_*,b _:1 to 2 ! set ( only ele;ts t
>e only 9 .2,a & n 9 .2;,b4
_% ,a_*,b .k .(x|x `e ,a and x /`e
,b.) _:
  ,z a ,v5n diagram3
,image ,,id3 ,a-m9us-;,b
,descrip;n3 ,v5n diagram = set di6};e
_% ,a_*,b _:4 ,two circles >e label$ ,a
& ;,b4 ,only ! "p ( ,a t doesn't ov}lap
) ;,b is %ad$4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,note  #a4b4ag 4
  ,x's wor? not+ t "s au?ors1 ,ros5
9clud$1 use _% ,a-,b _: to d5ote !
di6};e 2t two sets .2,a & .2;,b4 ,we'll
2 us+ ! sli<tly m /&>d _% ,a_*,b _: 9 ?
class4
  ,let .2;,u 2 ! ~1univ}sal ~1set~'1 t
is ! set ( all possible objects 9
3sid}a;n4
,image ,,id3 univ}sal-set
,descrip;n3 ,v5n diagram = ! univ}sal
set4 ,"ey?+ is %ad$1 9clud+ ,a & ;,b &
"ey?+ |tside ( ~? circles4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
  ,if .2,a is a set1 ! ~1comple;t (
.2,a1 d5ot$ _% ,a: _:1 is ! set di6};e
_% ,a: .k ,u_*,a _:4
,image ,,id3 ,a-comple;t
,descrip;n3 ,v5n diagram = ! comple;t (
.2,a4 ,"h "! is "o circle label$ ,a &
"ey?+ |tside ( x is %ad$4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,example  #a4b4ah 4
  ,let _% ,a .k .(a, b, c, d, e.) _: &
_% ,b .k .(a, b, c, d, e, f, g, h.) _:1
f9d

#a4 _% |,a| _:
#b4 _% |,b| _:
#c4 _% ,a.+,b _:
#d4 _% ,a.%,b _:
#e4 _% |,a.+,b| _:
#f4 _% |,a.%,b| _:
#g4 _% ,a_*,b _:
#h4 _% ,b_*,a _:
7777777777777777777777777777777777777777
,note  #a4b4ai 4
  ,:at d y obs}ve ab "s comb9a;n ( !
c>d9alities abv8

    ,subsec;n #a4b4c ,v}ify+ ,set
    ,id5tities
  ,an ~1id5t;y is a /ate;t : is true if
we replace ! v>iables ) specific sets4
,"o way t we c %{ t an id5t;y is true by
%ad+ a ,v5n ,diagram = ea* side ( !
equal;y4
7777777777777777777777777777777777777777
,example  #a4b4bj 4
  ,v}ify ! foll{+ id5tities by us+ a
,v5n ,diagram4

#a4 _% ",a.%,b<:} .k ,a:.+,b: _:
#b4 _% ,a.+(,b.%,c) .k
  (,a.+,b).%(,a.+,c) _:
7777777777777777777777777777777777777777
,li/  #a4b4ba 4  ,funda;tal set
id5tities
  ,let _% ,a, ,b _: & .2;,c 2 ?ree sets
& let .2;,u 2 ! univ}sal set4

~1,commutative ~1,laws
    _% ,a.+,b .k ,b.+,a _:
  _% ,a.%,b .k ,b.%,a _:
~1,associative ~1,laws
    _% (,a.+,b).+,c .k ,a.+(,b.+,c) _:
  _% (,a.%,b).%,c .k ,a.%(,b.%,c) _:
~1,4tributive ~1,laws
    _% ,a.%(,b.+,c) .k
  (,a.%,b).+(,a.%,c) _:_% ,a.+(,b.%,c)
  .k (,a.+,b).%(,a.+,c) _:
~1,id5t;y ~1,laws
    _% ,a.+_0 .k ,a _:_% ,a.%,u .k ,a _:
~1,nega;n ~1,laws
    _% ,a.%,a: .k _0 _:
  _% ,a.+,a: .k ,u _:
~1,idempot5t ~1,laws
    _% ,a.+,a .k ,a _:
  _% ,a.%,a .k ,a _:
~1,dom9a;n ~1,laws
    _% ,a.%_0 .k _0 _:
  _% ,a.+,u .k ,u _:
~1,absorp;n ~1,laws
    _% ,a.%(,a.+,b) .k ,a _:
  _% ,a.+(,a.%,b) .k ,a _:
~1,de,morgan's ~1,laws
    _% "(,a.+,b)<:} .k ,a:.%,b: _:
  _% "(,a.%,b)<:} .k ,a:.+,b: _:
~7,d|ble ,nega;n ,law~'
    _% ",a:<:} .k ,a _:
7777777777777777777777777777777777777777
,note  #a4b4bb 4
  ,x wd 2 gd practice to take a mo;t &
3firm = yrf t ~! id5tities >e true by
%ad+ a ,v5n diagram = ea* side ( !
equalities4
,ex}cises #a4b4d ,ex}cises #a 4
  ,let _% ,a .k .(1, 2, 3, 4, 5, 6.) _:1
_% ,b .k .(2, 4, 6.) _:1 _% ,c .k .(1,
2, 3.) _: & _% ,d .k .(7, 8, 9.) _:4
,det}m9e : ( ! foll{+ >e true1 false1 or
m1n+.s4

a4 _% ,a _"k ,b _:4
;b4 _% ,b _"k ,a _:4
;c4 _% ,b `e ,c _:4
;d4 _% _0 `e ,a _:4
;e4 _% _0 _"k ,a _:4
;f4 _% ,a "k ,d _:4
;g4 _% #3 `e ,c _:4
;h4 _% #3 _"k ,c _:4
i4 _% .(3.) _"k ,c _:4
,solu;n 43

a4 ,false4 ,= example1 _% #1 `e ,a _: b
  _% #1 /`e ,b _:4
;b4 ,true4 ,e ele;t 9 .2;,b is an ele;t
  9 .2,a4
;c4 ,false4 ,! ele;ts 9 .2;,c >e #a1 #b1
  & #c4 ,! .1set .2;,b is n equal to #a1
  #b1 or #c4
;d4 ,false4 .2,a has exactly #f ele;ts1
  & n"o ( !m >e ! empty set4
;e4 ,true4 ,"ey?+ 9 ! empty set "<no?+">
  is al an ele;t ( .2,a4 ,notice t !
  empty set is a subset ( e set4
;f4 ,m1n+.s4 ,a set _c 2 less ?an ano!r
  set4
;g4 ,true4 _% #3 _: is "o ( ! ele;ts ( !
  set .2;,c4
;h4 ,m1n+.s4 _% #3 _: is n a set1 s x _c
  2 a subset ( ano!r set4
i4 ,true4 _% #3 _: is ! only ele;t ( !
  set _% .(3.) _:1 & is an ele;t (
  .2;,c1 s e ele;t 9 _% .(3.) _: is an
  ele;t ( .2;,c4
#b 4
  ,let _% ,a .k .(1, 2, 3, 4, 5, 6.) _:1
_% ,b .k .(2, 4, 6.) _:1 _% ,c .k .(1,
2, 3.) _: & _% ,d .k .(7, 8, 9.) _:4 ,if
! univ}se is _% ,u .k .(1, 2, ''',
10.) _:1 f9d3

a4 _% ,a.+,b _:4
;b4 _% ,a.%,b _:4
;c4 _% ,b.%,c _:4
;d4 _% ,a.%,d _:4
;e4 _% ",b.+,c<:} _:4
;f4 _% ,a_*,b _:4
;g4 _% (,d.%,c:).+",a.%,b<:} _:4
;h4 _% _0.+,c _:4
i4 _% _0.%,c _:4
,solu;n 43

a4 _% ,a.+,b .k .(1, 2, 3, 4, 5, 6.) .k
  ,a _: s9ce "ey?+ 9 .2;,b is alr 9
  .2,a4
;b4 _% ,a.%,b .k .(2, 4, 6.) .k ,b _:
  s9ce "ey?+ 9 .2;,b is 9 .2,a4
;c4 _% ,b.%,c .k .(2.) _: z ! only ele;t
  ( bo? .2;,b & .2;,c is #b4
;d4 _% ,a.%,d .k _0 _: s9ce .2,a & .2;,d
  h no common ele;ts4
;e4 _% ",b.+,c<:} .k .(5, 7, 8, 9,
  10.) _:4 ,f/ we f9d t _% ,b.+,c .k
  .(1, 2, 3, 4, 6.) _:1 !n we take "ey?+
  n 9 t set4
;f4 _% ,a_*,b .k .(1, 3, 5.) _: s9ce !
  ele;ts #a1 #c1 & #e >e 9 .2,a b n 9
  .2;,b4 ,? is ! same z _% ,a.%,b: _:4
;g4 _% (,d.%,c:).+",a.%,b<:} .k .(1, 3,
  5, 7, 8, 9, 10.). _: ,! set 3ta9s all
  ele;ts t >e ei 9 .2;,d b n 9 .2;,c
  "<i4e41 _% .(7, 8, 9.) _:">1 or n 9
  bo? .2,a & .2;,b "<i4e41 _% .(1, 3, 5,
  7, 8, 9, 10.) _:">4
;h4 _% _0.+,c .k ,c _: s9ce no?+ is add$
  by ! empty set4
i4 _% _0.%,c .k _0 _: s9ce no?+ c 2 bo?
  9 a set & 9 ! empty set4
#c 4
  ,let _% ,a .k .(1, 2, 3, 4, 5.) _:1
_% ,b .k .(3, 4, 5, 6, 7.) _:1 & _% ,c
.k .(2, 3, 5.) _:4

a4 ,f9d _% ,a.%,b _:4
;b4 ,f9d _% ,a.+,b _:4
;c4 ,f9d _% ,a_*,b _:4
;d4 ,f9d _% ,a.%"(,b.+,c)<:} _:4
;e4 ,f9d _% ,a`*,c _:4
;f4 ,is _% ,c _"k: ,a _:;8 ,expla94
;g4 ,is _% ,c _"k: ,b _:;8 ,expla94
,solu;n 43

a4 _% ,a.%,b .k .(3, 4, 5.) _:4
;b4 _% ,a.+,b .k .(1, 2, 3, 4, 5, 6,
  7.) _:4
;c4 _% ,a_*,b .k .(1, 2.) _:4
;d4 _% ,a.%"(,b.+,c)<:} .k .(1.) _:4
;e4 _% ,a`*,c .k .( (1, 2), (1, 3), (1,
  5), (2, 2), (2, 3), (2, 5), (3, 2),
  (3, 3), (3, 5), (4, 2) _:1 _% (4, 3),
  (4, 5), (5, 2), (5, 3), (5, 5).) _:
;f4 ,yes4  ,all ?ree ele;ts ( .2;,c >e
  al ele;ts ( .2,a4
;g4 ,no4 ,"! is an ele;t ( .2;,c1 "nly !
  ele;t #b1 : is n an ele;t ( .2;,b4
#d 4
  ,let _% ,a .k .(x `e `;,n|#3 "k: x "k:
#13.) _:1 _% ,b .k .(x `e `;,n|x is
even.) _:1 & _% ,c .k .(x `e `;,n|x is
odd.) _:4

a4 ,f9d _% ,a.%,b _:4
;b4 ,f9d _% ,a.+,b _:4
;c4 ,f9d _% ,b.%,c _:4
;d4 ,f9d _% ,b.+,c _:4
,solu;n 43

a4 _% ,a.%,b .k .(4, 6, 8, 10, 12.) _:
;b4 _% ,a.+,b .k .(0, 2, 3, 4, 5, '''
  12, 13, 14, 16, 18, 20, 22, 24,
  '''.) _:
;c4 _% ,b.%,c .k _0 _:
;d4 _% ,b.+,c .k `;,n _:
#e 4
  ,f9d an example ( sets .2,a & .2;,b s*
t _% ,a.%,b .k .(3, 5.) _: & _% ,a.+,b
.k .(2, 3, 5, 7, 8.) _:4
,solu;n 43
  ,"! >e _m possible examples4 ,"h is a
simple "o4 ,let _% ,a .k .(3, 5.) _: &
_% ,b .k .(2, 3, 5, 7, 8.) _:
#f 4
  ,f9d an example ( sets .2,a & .2;,b s*
t _% ,a _"k: ,b _: & _% ,a `e ,b _:4
,solu;n 43
  ,= example1 _% ,a .k .(1, 2, 3.) _: &
_% ,b .k .(1, 2, 3, 4, 5, .(1, 2,
3.).) _:
#g 4
  ,draw a ,v5n diagram to repres5t ea* (
! foll{+3

a4 _% ,a.+,b: _:
;b4 _% "(,a.+,b)<:} _:
;c4 _% ,a.%(,b.+,c) _:
;d4 _% (,a.%,b).+,c _:
;e4 _% ,a:.%,b.%,c: _:
;f4 _% (,a.+,b)_*,c _:
,solu;n 43

a4 _% ,a.+,b: _:3 ,image ,,id3
  ,a-or-n-;,b
  ,descrip;n3 ,v5n diagram (
  _% ,a.+,b: _:4 ,two circles >e label$
  ,a & ;,b4 ,"ey?+ is %ad$ except = !
  small "p ( ;,b t doesn't ov}lap ,a4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;b4 _% "(,a.+,b)<:} _:3 ,image ,,id3
  n-,a-or-;,b
  ,descrip;n3 ,v5n diagram (
  _% "(,a.+,b)<:} _:4 ,two circles >e
  label$ ,a & ;,b4 ,"ey?+ |tside ! two
  circles >e %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;c4 _% ,a.%(,b.+,c) _:3 ,image ,,id3
  ,a-&-;,b-or-;,c
  ,descrip;n3 ,v5n diagram (
  _% ,a.%(,b.+,c) _: ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,": ,a & ;,b is
  %ad$ & ": ,a & ;,c is al %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;d4 _% (,a.%,b).+,c _:3 ,image ,,id3
  ,a-&-;,b-cup-;,c
  ,descrip;n3 ,v5n diagram (
  _% (,a.%,b).+,c _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,": ,a & ;,b
  ov}lap is %ad$4 ;,c is al %ad$
  completely4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;e4 _% ,a:.%,b.%,c: _:3 ,image ,,id3
  n-,a-cap-;,b-cap-n-;,c
  ,descrip;n3 ,v5n diagram (
  _% ,a:.%,b.%,c: _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,only ! "p (
  ;,b t doesn't ov}lap ,a & doesn't
  ov}lap ;,c is %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;f4 _% (,a.+,b)_*,c _:3 ,image ,,id3
  ,a-or-;,b-less-;,c
  ,descrip;n3 ,v5n diagram (
  _% (,a.+,b)_*,c _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,only ~? "ps (
  ,a & ;,b t d n ov}lap ;,c >e %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
#h 4
  ,describe a set 9 t}ms ( .2,a & .2;,b
"<us+ set nota;n"> : has ! foll{+ ,v5n
diagram3
,image ,,id3 n-,a-&-;,b
,descrip;n3 ,v5n diagram3 ,a is mo/ly
%ad$1 ;,b is mo/ly %ad$1 b ! >ea ": ,a &
;,b ov}lap is n4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4 ,solu;n
43
  ,"o way to answ} is
_% (,a.+,b)_*(,a.%,b) _:
#i 4
  ,f9d ! foll{+ c>d9alities3

a4 _% |,a| _: :5 _% ,a .k .(4, 5, 6,
  ''', 37.) _:
;b4 _% |,a| _: :5 _% ,a .k .(x `e
  `;,z|-#2 "k: x "k: #100.) _:
;c4 _% |,a.%,b| _: :5 _% ,a .k .(x `e
  `;,n|x "k: #20.) _: & _% ,b .k .(x `e
  `;,n|x is prime.) _:2 note t #a isn't
  prime4
,solu;n 43

a4 #cd4
;b4 #ajc4
;c4 #h4
#aj 4
  ,let _% ,a .k .(a, b, c, d.) _:4 ,f9d
_% `;,p(,a) _:4
,h9t 43
  ,we >e look+ = a set 3ta9+ #af sets4
,solu;n 43
  _% `;,p(,a) .k .(_0, .(a.), .(b.),
.(c.), .(d.), .(a, b.), .(a, c.), .(a,
d.), .(b, c.), .(b, d.), .(c, d.), .(a,
b, c.), .(a, c, d.), .(a, b, d.), .(b,
c, d.), .(a, b, c, d.).) _:
#aa 4
  ,let _% ,a .k .(1, 2, 3, 4, 5, 6.) _:4
,f9d all sets _% ,b `e `;,p(,a) _: : h !
prop}ty _% .(2, 3, 5.) _"k: ,b _:4
,solu;n 43
  ,"! >e ei<t possible sets4 .2;,b c 2
any ( _% .(2, 3, 5.) _:1 _% .(1, 2, 3,
5.) _:1 _% .(2, 3, 4, 5.) _:1 _% .(2, 3,
5, 6.) _:1 _% .(1, 2, 3, 4, 5.) _:1
_% .(1, 2, 3, 5, 6.) _:1 _% .(2, 3, 4,
5, 6.) _:1 _%  and .(1, 2, 3, 4, 5,
6.) _:
#ab 4
  ,f9d an example ( sets .2,a & .2;,b s*
t _% |,a| .k #4 _:1 _% |,b| .k #5 _:1 &
_% |,a.+,b| .k #9 _:4
,solu;n 43
  ,= example1 _% ,a .k .(1, 2, 3, 4.) _:
& _% ,b .k .(5, 6, 7, 8, 9.) _: gives
_% ,a.+,b .k .(1, 2, 3, 4, 5, 6, 7, 8,
9.) _:4
#ac 4
  ,let _% ,a .k .(1, 2, ''', 10.) _:4
,h{ _m subsets ( .2,a 3ta9 exactly "o
ele;t "<i4e41 h{ _m ~1s+leton subsets >e
"!">8 ,h{ _m ~1d|bleton subsets "<3ta9+
exactly two ele;ts"> >e "!8
,solu;n 43
  ,"! >e #aj subsets t 3si/ ( a s+le
ele;t4 ,= subsets 3si/+ ( exactly two
ele;ts1 "! >e #de
#ad 4
  ,f9d an example ( sets .2,a & .2;,b s*
t _% |,a| .k #3 _:1 _% |,b| .k #4 _:1 &
_% |,a.+,b| .k #5 _:4
,solu;n 43
  ,"! >e _m examples4 ,"h's "o
possibil;y3 _% ,a .k .(a, b, c.), ,b .k
.(b, c, d, e.) _:4 ,!n ! union is
_% ,a.+,b .k .(a, b, c, d, e.) _:4
#ae 4
  ,>e "! sets .2,a & .2;,b s* t _% |,a|
.k |,b| _:1 _% |,a.+,b| .k #10 _:1 &
_% |,a.%,b| .k #5 _:;8 ,expla94
  ,note t _% |,a.+,b| .k
|,a|+|,b|-|,a.%,b| _:1 c y expla9 :y8
,solu;n 43
  ,! answ} is no4 ,c y expla9 :y8
#af 4
  ,9 a regul> deck ( play+ c>ds "! >e
#bf r$ c>ds & #ab face c>ds4 ,expla91
us+ sets & :at y h le>n$ ab c>d9alities1
:y "! >e only #cb c>ds : >e ei r$ or a
face c>d4
,solu;n 43
  ,! 9t}sec;n ( ! set ( r$ c>ds & ! set
( face c>ds is nonempty4 ,x 9cludes six
c>ds3 ,jack ( ,he>ts1 ,que5 ( ,he>ts1
,k+ ( ,he>ts1 ,jack ( ,diamonds1 ,que5 (
,diamonds1 & ,k+ ( ,diamonds4
#ag 4
  ,recall _% `;,z .k .( ''', -#2, -#1,
#0, #1, #2, '''.) _: "<! 9teg}s">4 ,let
_% `;,z~+ .k .(1, 2, 3, '''.) _: 2 !
positive 9teg}s4 ,let _% #2`;,z _: 2 !
ev5 9teg}s1 _% #3`;,z _: 2 ! multiples (
#c1 & s on4

a4 ,is _% `;,z~+ _"k: #2`;,z _:;8
  ,expla94
;b4 ,is _% #2`;,z _"k: `;,z~+ _:;8
  ,expla94
;c4 ,f9d _% #2`;,z.%3`;,z _:4 ,describe
  ! set 9 ~ws1 & us+ set nota;n4
,solu;n 43

a4 ,no4
;b4 ,no4
;c4 _% #2`;,z.%3`;,z _: is ! set ( all
  9teg}s : >e multiples ( bo? #b & #c
  "<s multiples ( #f">4 ,"!=e
  _% #2`;,z.%3`;,z .k .(6y|y `e
  `;,z).) _:4

    ,sec;n #a4c ,rela;ns & ,func;ns

    ,subsec;n #a4c4a ,rela;ns
7777777777777777777777777777777777777777
,def9i;n  #a4c4a 4  ,rela;ns4
  ,a ma!matical ~1rela;n1 _% ,r _:~21
~72t two sets~' .2,a ~1& .2;,b  is a
collec;n ( ord}$ pairs f ! two sets4
,express$ symbolically1 _% ,r _"k:
,a`*,b _:4
  ,we call set .2,a ! ~1doma9 & ! set
.2;,b ! ~1codoma9~'4
  ,if .2a is relat$ to .2;b we w write
_% a,rb _: or _% (a, b) `e ,r _:4 ,if
two ele;ts .2;c & .2;d >e n relat$1 we
write _% c{,r}d _:4
7777777777777777777777777777777777777777
,example  #a4c4b 4
  ,if we 3sid} .2,a & .2;,b to bo? 2 !
set ( p 9 yr family1 & let _% ,r _: 2 !
rela;n 8.2a is a sibl+ ( .2;b40 ,"h's an
example ( my family 9 two graphical
repres5ta;ns4 ,:at >e ! ord}$ pairs t
make up ! rela;n8
  ,image ,,id3 graph-sib
,descrip;n3 ,/&>d ,c>tesian graph %{+ my
sibl+s4 ,! horizontal & v}tical axes >e
family memb}s1 label$ ,john1 ,}ic1 &
,s>ah4 ,"! is a dot on ! graph :5 ! two
>e relat$1 s dots at "<,john1 ,}ic">1
"<,john1 ,s>ah">1 "<,}ic1 ,john">1
"<,}ic1 ,s>ah">1 "<,s>ah1 ,john">1 &
"<,s>ah1 ,}ic">4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4 ,image
,,id3 my-family-graph
,descrip;n3 ,graph ( two sets ,a & ;,b4
,ele;ts on ! left >e ,john1 ,}ic1 &
,s>ah2 ele;ts on ! "r >e ,john1 ,}ic &
,s>ah4 ,"! is a l9e f ,john to ,}ic &
,john to ,s>ah2 a l9e f ,}ic to ,john &
,}ic to ,s>ah2 & a l9e f ,s>ah to ,john
& ,s>ah to ,}ic4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
,solu;n 43
  ,look+ t ! po9ts on ! graph1 we see t
! rela;n w 2 ! set ( ord}$ pairs3
_%
_:
,notice t ~! ord}$ pairs correspond to !
l9es on ! graph diagram ) ea* ( ! f/
coord9ates 2+ 3nect$ to ! second
coord9ate4 ,e4g4 an >r{ goes f ,john to
,}ic4
7777777777777777777777777777777777777777
,example  #a4c4c 4  ,! ,divides ,rela;n4
  ,let .2,a & .2;,b bo? 2 ! set ( 9teg}s
f #a to #aj1 & def9e ! rela;n by
_% a,rb _: m1ns t .2a ev5ly divides 9to
.2;b ) no rema9d}4
  ,"h >e "s examples ( ! divides rela;n3

_4 _% #2,r"4 _: s9ce #b divides 9to #d
  ev5ly4  ,"! is no rema9d}4
_4 ,simil>ly1 _% #5,r"5 _: s9ce x
  divides 9to xf4 ,no rema9d}4
_4 _% #4{,r}3 _: s9ce #d doesn't divide
  9to #c4 ,! rema9d} is #a4
_4 _% #6{,r}3 _: s9ce #f doesn't divide
  9to #c4 ,! rema9d} is #c4
,n{1 complete ! foll{+ "qs3

#a4  ,complete ! foll{+ graph ( ! rela;n
  2l1 ": a po9t on _% (x, y) _: m1ns t
  .2;x divides ev5ly 9to .2;y4 ,image
  ,,id3 graph-rela;n-blank
  ,descrip;n3 'blank' ,c>tesian graph to
  complete4 ,horizontal axis is 9teg}s
  #a "? #aj2 v}tical axis is 9teg}s #a
  "?t #aj4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
#b4 ,n{ li/ all ord}$ pairs 9 ! rela;n4
,answ} 43
  ,! complete li/+ ( ! rela;n is3 _% ,r
.k .((1, 1), (1, 2), (1, 3), (1, 4), (1,
5), (1, 6), (1, 7), (1, 8), (1, 9), (1,
10), (2, 2), (2, 4), (2, 6), (2, 8), (2,
10), (3, 3), (3, 6), (3, 9), (4, 4), (4,
8), (5, 5), (5, 10), (6, 6), (7, 7), (8,
8), (9, 9), (10, 10).) _:
7777777777777777777777777777777777777777
,example  #a4c4d 4
  ,! doma9 & codoma9 don't h to 2 !
same4 ,= example1 let _% ,r _: 2 !
rela;n f ! set ( p 9 4crete ma? class to
! natural numb}s : maps a p}son to _!
hei<t 9 9*es4 ,9 ? example1 _% (,john,
76) `e ,r _:4 ,:at ord}$ pair repres5ts
y8
7777777777777777777777777777777777777777
,example  #a4c4e 4
  ,let _% ,r _: 2 ! rela;n f _% `;,z _:
to _% `;,z _: ": we say _% a,rb _: if
_% a~2 .k b _:4

#a4 ,li/ ! f/ few ord}$ pairs ( ! rela;n
  = _% a .k #0, #1, #2, ''' #5 _:4
#b4 ,plot po9ts = ! graph ( _% ,r _: =
  _% a .k -#3, -#2, -#1, #0, #1, #2,
  #3 _:4 ,image ,,id3
  graph-rela;n-squ>es
  ,descrip;n3 ,blank ,c>tesian graph =
  plott+ squ>es4 ,horizontal axis is
  label$ a & goes f -#c to #c4 ,v}tical
  axis is label$ ;b & goes f #j to #i
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,def9i;n  #a4c4f 4  ,9v}se ( ,rela;ns4
  ,let .2;,r 2 a rela;n 2t sets _% ,a
and ,b _:4 ,! ~19v}se ~1rela;n ( .2;,r
is ! rela;n t assigns to ea* ele;t _% b
`e ,b _: an ele;t _% a `e ,a _:4 ,we
d5ote ! 9v}se by _% ,r~-1 _:1 s t
_% a,rb ${33o b,r~-1"a _:
= _% a `e ,a and b `e ,b _:4
7777777777777777777777777777777777777777
,example  #a4c4g 4
  ,= ! purposes ( ? ex}cise1 ! univ}se (
4c|rse = num}ic sets is _% `;,r _: & !
univ}se ( 4c|rse = _% ,r4 _: & _% ,r5 _:
>e ! set ( p4 ,= example1 ! rela;n _% ,r
.k .((x, y)|y .k #2x+1.) _: has ! 9v}se
_% ,r~-1 .k .((x, y)|y .k (x-1)_/2.) _:4
,use ? =m to give 9v}ses ( ! foll{+
rela;ns3

#a4 _% ,r1 .k .((x, y)|y .k -#3x+2.) _:
#b4 _% ,r2 .k .((x, y)|y .k x~2"+2.) _:
#c4 _% ,r3 .k .((x, y)|y .1 #3x-4.) _:
#d4 _% ,r4 .k .((x, y)|y is the parent
  of x.) _:
#e4 _% ,r5 .k .((x, y)|x is a sibling of
  y.) _:

    ,subsec;n #a4c4b ,func;ns
7777777777777777777777777777777777777777
,def9i;n  #a4c4h 4  ,func;ns4
  ,a ~7func;n f ! set~' .2,a ~7to !
set~' .2;,b  is a rela;n ) ! prop}ty t
exactly "o ele;t f .2;,b is mapp$ to ea*
ele;t ( ! set .2,a4

_4 ,we d5ote ? rela;n by _% f_3 ,a $o
  ,b _:
_4 ,if _% b `e ,b _: is ! unique ele;t
  assign$ to _% a `e ,a _:1 we write
  _% f(a) .k b _:
  ,if _% f(a) .k b _:1 we call

_4 .2;b is ! ~1image ( .2a "u ! mapp+
_4 .2a is ! ~1preimage ( .2;b "u ! mapp+
& we def9e ! ~1range ( ! func;n .2;f to
2 ! set ( images ( e ele;t 9 ! doma91
.2,a1 & (t5 write ! range by
_% f(,a) _:4 ,note t ! range is a subset
( ! codoma91 _% f(,a) _"k: ,b _:4
7777777777777777777777777777777777777777
,note  #a4c4i 4
  ,a func;n has two pieces ( 9=ma;n3

#a4 ,specifica;n ( two sets1 ! doma9 &
  codoma9
#b4 ,a mapp+ 2t ~? two sets
  ,9 ? class1 we w 2 us+ a v>iety ( ways
( describ+ ! doma9 & codoma9 ( a func;n1
f writ+ _% f_3 ,a $o ,b _: to describ+
!m 9 ~ws4
7777777777777777777777777777777777777777
,example  #a4c4aj 4
  ,f9d ! doma91 codoma91 & range ( !
foll{+ func;ns3

#a4 ,let _% f_3 `;,z $o `;,z _: 2 def9$
  by _% f(x) .k x~2 _:
#b4 ,let _% g_3 `;,r $o `;,r _: 2 def9$
  by _% g(x) .k x~2 _:
7777777777777777777777777777777777777777
,def9i;n  #a4c4aa 4  ,9jective ,func;ns4
  ,a func;n .2;f is sd to 2  ~19jective
or ~1"o-to-"o if & only if _% f(a) .k
f(b) _: m1ns t _% a .k b _: = all _% a
and b _: 9 ! doma9 ( .2;f4
7777777777777777777777777777777777777777
,note  #a4c4ab 4
  ,to det}m9e if a func;n _% f_3 ,a $o
,b _: is 9jective1 we %{ t if _% f(x) .k
f(y) _: = >bitr>y values _% x, y `e
,a _: ) _% x /.k y _:1 we 3clude _% x .k
y _:4 "<,a direct pro(">4
  ,to det}m9e if a func;n _% f_3 ,a $o
,b _: is n 9jective1 we f9d "picul>
ele;ts _% x, y `e ,a _: s* t _% x /.k
y _: b _% f(x) .k f(y) _: "<a
c.t}example6">
7777777777777777777777777777777777777777
,example  #a4c4ac 4
  ,det}m9e if ! foll{+ func;ns >e
9jective4 ,if s1 prove x4 ,if n1 provide
a specific c.t}example %{+ t x is n4

#a4 ,let _% f_3 `;,r $o `;,r _: 2 def9$
  by _% f(x) .k #2x-1 _:4
#b4 ,let _% g(x) .k x~2 _: 2 ! mapp+ f
  _% `;,r $o `;,r _:4
7777777777777777777777777777777777777777
,def9i;n  #a4c4ad 4  ,surjective
,func;ns4
  ,a func;n .2;f f .2,a to .2;,b is sd
to 2 ~1surjective or ~1onto if & only if
= e ele;t _% b `e ,b _:1 "! is an ele;t
_% a `e ,a _: s* t _% f(a) .k b _:4
7777777777777777777777777777777777777777
,example  #a4c4ae 4
  ,det}m9e if ! foll{+ func;ns >e
surjective4 ,if s1 prove x4 ,if n1
provide a specific c.t}example %{+ t x
is n4

#a4 ,let _% f_3 `;,r $o `;,r _: 2 def9$
  by _% f(x) .k #2x-1 _:4
#b4 ,let _% g(x) .k x~2 _: 2 ! mapp+ f
  _% `;,r $o `;,r _:4
#c4 ,let _% g(x) .k x~2 _: 2 ! mapp+ f
  _% `;,z $o `;,z _:4
#d4 ,let _% g(x) .k x~3 _: 2 ! mapp+ f
  _% `;,z $o `;,z _:4
7777777777777777777777777777777777777777
,note  #a4c4af 4
  ,if a func;n is onto1 ! range is
exactly ! codoma91 t is _% f(,a) .k
,b _:
  ,to det}m9e if a func;n _% f_3 ,a $o
,b _: is surjective1 we %{ t giv5 an
>bitr>y ele;t _% y `e ,b _: we c f9d an
ele;t _% x `e ,a _: s* t _% f(x) .k
y _:4 "<,a direct pro(">4
  ,to det}m9e if a func;n _% f_3 ,a $o
,b _: is n surjective1 we f9d a "picul>
ele;t _% y `e ,b _: s* t _% f(x) /.k
y _: = all _% x `e ,a _: "<a
c.t}example6">
7777777777777777777777777777777777777777
,def9i;n  #a4c4ag 4  ,bijective
,func;ns4
  ,a func;n .2;f f .2,a to .2;,b is sd
to 2 a ~1"o-to-"o ~1correspond.e or
~1bijective if x is bo? 9jective &
surjective4
7777777777777777777777777777777777777777
,example  #a4c4ah 4
  ,det}m9e if ! foll{+ >e bijec;ns f
_% `;,r $o `;,r _:3

#a4 _% f(x) .k -#3x~2"+7 _:
#b4 _% f(x) .k x~5"+1 _:
#c4 _% f(x) .k #5~x _:
#d4
  _%
  f(x) .k  ;x+1
          ?3333#
           ;x+2
  _:
#e4 ,: ( ! func;ns we've 3sid}$ s f> h
  be5 bijec;ns8
7777777777777777777777777777777777777777
,def9i;n  #a4c4ai 4  ,! ,modulus
,op}ator4
  ,def9e ! ~1modulus ~1op}ator~'1 _% a`0
m _: on ! set ( 9teg}s to return !
rema9d} :5 divid+ .2a by .2;m4
  ,= example1

;$= _% #25`0 #4 .k #1 _: s9ce ! rema9d}
  :5 divid+ #be by #d is #a4
;$= _% #25`0 #5 .k #0 _: s9ce #e divides
  ev5ly 9to #be4
;$= _% #14`0 #5 .k #4 _:
;$= _% -#1`0 #5 .k #4 _: "<rema9d}s >e
  alw positive">
,we'll use ? to explore 9jective &
surjective prop}ties ( func;ns6
7777777777777777777777777777777777777777
,def9i;n  #a4c4bj 4  ,set ( ,9teg}s
,modulo ;n4
  ,we al def9e ! set _% `;,z;n _:1
pron|nc$ 89teg}s mod ;n0 or 8mod ;n0 to
2 ! set ( all possible rema9d}s :5
divid+ by .2;n3
_%
0.)1.)2.)3.)4.)n.)2.)n
_:
  ,= example3

;$= _% `;,z5 .k .(0, 1, 2, 3, 4.) _:
;$= _% `;,z7 .k .(0, 1, 2, 3, 4, 5,
  6.) _:
;$= _% `;,z10 .k .(0, 1, 2, 3, 4, 5, 6,
  7, 8, 9.) _:
7777777777777777777777777777777777777777
,example  #a4c4ba 4
  ,complete ! foll{+ tables ( values =
ea* func;n3

#a4 ,let _% f_3 `;,z5 $o `;,z5 _: 2
  def9$ by _% f(n) .k (n+2)`0 5 _:
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 2 2 2 2 4
  ,is .2;f 9jective8 surjective8
#b4 ,let _% g_3 `;,z6 $o `;,z6 _: 2
  def9$ by _% g(n) .k (n~2"+2)`0 6 _:
.2;x2 #j2 #a2 #b2 #c2 #d2 #e4
_% g(x) _:2 2 2 2 2 2 4
  ,is .2;g 9jective8 surjective8
,solu;n 43

#a4
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 #b2 #c2 #d2 #j2 #a4
  .2;f is bo? 9jective & surjective -
  ea* |tput o3urs only "o "t
  "<9jective"> & ea* |tput o3urs
  "<surjective">4
    ,note t ! range ( ! func;n .2;f is
  _% .(0, 1, 2, 3, 4.) _: : is equal to
  ! :ole co-doma9 "<surjective">4
#b4
.2;x2 #j2 #a2 #b2 #c2 #d2 #e4
_% g(x) _:2 #b2 #c2 #j2 #e2 #j2 #c4
  .2;g is n 9jective s9ce _% g(1) .k
  g(5) _:4 ,! same |tput o3urs twice - x
  fails ! 8horizontal l9e te/40 .2;g is
  al n surjective s9ce "! is no solu;n
  to _% #1 .k g(n) _: 9 ! doma94 ,!
  numb} #a is 9 ! codoma91 b x's n"e
  |tput4
    ,note t ! range ( ! func;n .2;g is
  _% .(0, 2, 3, 5.) _: : is n equal to !
  :ole co-doma9 "<n surjective">4
7777777777777777777777777777777777777777
,def9i;n  #a4c4bb 4  ,9v}se ,func;ns4
  ,let _% f_3 ,a $o ,b _: 2 a bijec;n4
,! ~19v}se ~1func;n ( .2;f is ! unique
func;n t assigns to ea* ele;t _% b `e
,b _: a unique ele;t _% a `e ,a _: s* t
_% f(a) .k b _:4 ,we d5ote ! 9v}se by
_% f~-1 _: s t
_% f~-1_3,b $o ,a where f~-1"(b) .k a
${33o f(a) .k b _:
7777777777777777777777777777777777777777
,note  #a4c4bc 4
  ,rela;ns alw h an 9v}se - we 9t}*ange
! doma9 & codoma9 sets4
  ,z we've se51 ! 9v}se ( a rela;n is
alw a rela;n1 b n alw a func;n4 ,9 ord}
= a func;n1 .2;f to h an 9v}se
.1func;n.'1 .2;f m/ 2 bijective4
7777777777777777777777777777777777777777
,example  #a4c4bd 4
  ,= ! bijec;n"<s"> f.d 9
,example #a4c4ah1 f9d ! 9v}se func;n4
7777777777777777777777777777777777777777
,example  #a4c4be 4
  ,re/rict ! doma9 &_/or codoma9 s t
_% f(x) .k x~2"+1 _: is 9v}tible4 ,v}ify
yr answ} is correct4
,solu;n 43
  ,9 ord} = .2;f to 2 9jective1 we c
re/rict ! doma9 to j ! non-negative r1l
numb}s3 _% `(0, ,=) _:4 ,9 ord} = .2;f
to 2 surjective1 us+ ! codoma9 to 2 !
9t}val _% `(1, ,=) _: "ws = ! *os5
doma94
  ,alt}natively1 if we *oose ! doma9 to
2 _% `;,n _:1 !n ! range is only squ>e
numb}s1 s ! codoma9 wd ne$ to 2 _% .(1,
4, 9, 16, '''.) _:4
7777777777777777777777777777777777777777
,def9i;n  #a4c4bf 4  ,func;n ,composi;n4
  ,let _% g_3 ,a $o ,b _: & let _% f_3
,b $o ,c _:4 ,! ~1composi;n ~1( .2;f ~1&
.2;g 1 d5ot$ by _% f.*g_3 ,a $o ,c _: is
def9$1 = all _% a `e ,a _:1 by
_% (f.*g)(a) .k f(g(a)) _:4 ,image ,,id3
composi;n-(-func;ns
,descrip;n3 ,composi;n ( func;ns4 ,?ree
circles >e drawn sep>at$ by >r{s4 ,!y >e
label$ ,a1 ;,b1 & ;,c4 ,"! is an >r{ f
,a to ;,b label$ ;,s4 ,"! is an >r{ f
;,b to ;,c label$ ;,r1 & "! is a big >c+
>r{ f ,a to ;,c label$ _% ,r.*,s _:
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,example  #a4c4bg 4
  ,let _% f(x) .k #5x-3 _: & _% g(x) .k
#3x~2"-5 _:4 ,f9d _% f.*g _: &
_% g.*f _:
,solu;n 43
  ,? is basic algebra4 _% (f.*g)(x) .k
#15x~2"-28 and (g.*f)(x) .k
#75x~2"-90x+22 _:
7777777777777777777777777777777777777777
,example  #a4c4bh 4
  ,suppose .2;f & _% f.*g _: >e
9jective4 ,does x foll{ t .2;g is al
9jective8
7777777777777777777777777777777777777777
,note  #a4c4bi 4
  ,s9ce giv5 a func;n _% f_3 ,a $o ,b _:
we def9e _% f~-1_3 ,b $o ,a _: by
_% f(a) .k b ${33o f~-1"(b) .k a _: =
_% a `e ,a _:1 _% b `e ,b _:1 we h3

_4 = _% b `e ,b _:1 we h
  _% (f.*f~-1")(b) .k f(f~-1"(b)) .k
  f(a) .k b `e ,b _:
_4 & = _% a `e ,a _:1 we h
  _% (f~-1".*f)(a) .k f~-1"(f(a)) .k
  f~-1"(b) .k a `e ,a _:
,t is1 ! 9v}se 8undoes0 a func;n4
7777777777777777777777777777777777777777
,comput} ,corn}4
  ,c"6"6 def9es func;ns by specify+ bo?
! 9put p>amet}s "<.1doma9.'"> & return
type "<.1co-doma9.'">4  ,"h >e "s func;n
examples3
9t squ>e"<9t num"> _<     return
num"9num2 _>
  ,"h ! func;n is _% square_3 `;,z $o
`;,z _:4
  ,"h's ano!r sample t *anges ! def9i;n
( ! /&>d squ>e root func;n3
_?9clude `<ma?4h`>  9t my,sqrt"<9t num">
_<     return sqrt"<num"> _>  _/_/ ? w
return ?+s l _/_/ my,sqrt"<#d"> "7 #b1 :
y'd expect4 _/_/ b444 _/_/ my,sqrt"<#e">
"7 #b1 al4 _/_/ ,? m1ns my,sqrt is n
9jective4
  ,? func;n is _% my,sqrt_3 `;,z $o
`;,z _:4 ,we .1c 9put negative numb}s1 b
sqrt"<"> ?r{s an }ror 9 t case4
  ,to get ! correct frac;nal value ( !
squ>e root ( an 9teg}1 ?|<1 we'd ne$ ?3
_?9clude `<ma?4h`>  d|ble my,sqrt"<9t
num"> _<     return sqrt"<num"> _>  _/_/
,hooray6 _/_/ my,sqrt"<#e"> "7 #b4bcfjg
_/_/ & ? "t my,sqrt is 9jective
  ,? "t ! func;n is _% my,sqrt_3 `;,z $o
`;,q _:4 ,! specifica;n ( ! codoma9 is
ess5tial to make sure we c compute !
correct value6
,ex}cises #a4c4c ,ex}cises #a 4
  ,3sid} ! rela;n _% ,r .k .((x, y)|y .k
x~2,  for x .k -#3, -#2, -#1, ''' #2,
#3.) _:4

a4 ,is .2;,r a func;n8
;b4 ,f9d _% ,r~-1 _:4
;c4 ,is _% ,r~-1 _: a func;n8 ,:y or :y
  n8
,solu;n 43

a4 ,yes
;b4 ,r`5_<-#a_> "7 _*_<"<x1 ;y"> _*mid
  y`5#b "7 ;x1 _*text_< = _> ;y "7 -#c1
  -#b1 -#a1 _*dots #b1 #c_*_>
;c4 ,no
#b 4

a4 ,is ! sibl+ rela;n def9$ 9
  ,example #a4c4b a func;n8 ,:y or :y n8
;b4 ,is ! divides rela;n def9$ 9
  ,example #a4c4c on ! set _% .(1, 2, 3,
  ''', 10.) _: to xf a func;n8 ,:y or :y
  n8
;c4 ,is ! hei<t rela;n 2t ! set ( p & !
  set ( natural numb}s a func;n8 ,:y or
  :y n8
,solu;n 43

a4 ,no4
;b4 ,no4 ,= example _% (2, 2) _: &
  _% (2, 4) _: >e ! ! rela;n4
;c4 ,yes1 ea* p}son has a unique hei<t
  "<at any giv5 "t">4
#c 4
  ,let _% ,r _: 2 ! rela;n 2t ! set .2,a
& xf def9$ by _% a,rb _: :5"e _% a and
b _: >e exactly ! same object4

a4 ,:at is ! famili> way we normally
  write ? rela;n8
;b4 ,is ? rela;n a func;n8 ,if s1 :at is
  ! algebraic def9i;n8
,solu;n 43

a4 ,we'd normally write _% a .k b _: if
  _% a,rb _: :5 .2a & .2;b >e ! same
  object4
;b4 ,yes6 ,giv5 a set .2,a1 we def9e !
  func;n by _% f_3 ,a $o ,a _: by
  _% f(x) .k x _:4
#d 4
  ,re=mulate ,def9i;n #a4c4bf 9 ord} to
def9e composi;n ( two rela;ns4
,solu;n 43
  ,v ll ne$s *ang$ - ,i'm simply relabl+
! v>iables4 ,we'll explore rela;ns "<&
_! composi;n"> 9 grt} dep? 9 ,4crete #b4
  ,let _% ,g_3 ,a $o ,b _: & let _% ,r_3
,b $o ,c _:4 ,! ~1composi;n ~1( .2;,r
~1& .2;,s 1 d5ot$ by _% ,r.*,s _: is
def9$1 = all _% a `e ,a _:1 by
_% (,r.*,s)(a) .k ,r(,s(a)) _:4
,image ,,id3 composi;n-(-rela;ns
,descrip;n3 ,composi;n ( rela;ns
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4 #e 4
  ,us+ ! rela;ns def9$ 9
,example #a4c4g1 f9d ! foll{+
composi;ns3

a4 _% ,r1.*,r2 _:
;b4 _% ,r2.*,r1 _:
;c4 _% ,r4.*,r4 _:
;d4 _% ,r5.*,r4 _:
;e4 _% ,r4.*,r5 _:
,solu;n 43

a4 _% ,r1.*,r2 .k .((x, y)|y .k
  -#3(x~2"+2)+2.) .k .((x, y)|y .k
  -#3x~2"-4.) _:
;b4 _% ,r2.*,r1 .k .((x, y)|y .k
  (-3x+2)~2"+2.) .k .((x,
  y)|9x~2"-6x+6.) _:
;c4 _% ,r4.*,r4 .k .((x, y)|y is a
  grandparent of x.) _:
;d4 _% ,r5.*,r4 .k .((x, y)|y is a
  sibling of a parent of x.) .k .((x,
  y)|y is an aunt_/uncle of x.) _:
;e4 _% ,r4.*,r5 .k .((x, y)|y is the
  parent of the sibling of x.) .k ,r4 _:
#f 4
  ,3sid} ! func;n _% f_3 .(1, 2, 3, 4,
5.) $o .(1, 2, 3, 4.) _: giv5 by ! table
2l3
.2;x2 #a2 #b2 #c2 #d2 #e4
_% f(x) _:2 #c2 #b2 #d2 #a2 #b4

a4 ,is .2;f 9jective8 ,expla94
;b4 ,is .2;f surjective8 ,expla94
;c4 ,is _% f~-1 _: a func;n8 ,expla94
,solu;n 43

a4 ,no1 ! func;n is no 9jective4 _% #2
  .k f(2) .k f(5) .k #2 _: b cle>ly
  _% #2 /.k #5 _:
;b4 ,yes1 ! func;n is surjective4 ,!
  codoma9 is _% .(1, 2, 3, 4.) _: & ea*
  ele;t ( ! codoma9 is mapp$ "<! range
  equals ! codoma9">
#g 4
  ,3sid} ! func;n _% f_3 .(1, 2, 3, 4.)
$o .(1, 2, 3, 4.) _: giv5 by ! graph 2l4
,image ,,id3 graph-func;n-ques
,descrip;n3 ,graph ( ! func;n ;f
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4

a4 ,is .2;f 9jective8 ,expla94
;b4 ,is .2;f surjective8 ,expla94
,solu;n 43

a4 ,no6 _% f(1) .k f(4) _: & _% #1 /.k
  #4 _:
;b4 ,al no1 s9ce "! is no .2;x = :
  _% f(x) .k #2 _:4
#h 4
  ,= ea* func;n giv5 2l1 det}m9e :e!r or
n ! func;n is 9jective & :e!r or n !
func;n is surjective4

a4 _% f_3 `;,n $o `;,n _: giv5 by
  _% f(n) .k n+4 _:4
;b4 _% f_3 `;,z $o `;,z _: giv5 by
  _% f(n) .k n+4 _:4
;c4 _% f_3 `;,z $o `;,z _: giv5 by
  _% f(n) .k #5n-8 _:4
;d4 _% f_3 `;,z $o `;,z _: giv5 by
  _%
  f(n) .k .,(n_/2      if n is even
          .,((n+1)_/2  if n is odd."
  _:
,solu;n 43

a4 .2;f is 9jective1 b n surjective
  "<s9ce #j1 = example1 is n"e an
  |tput">4
;b4 .2;f is 9jective & surjective4
  ,unlike 9 ! previ|s "q1 e 9teg}s is an
  |tput "<( ! 9teg} #d less ?an x">4
;c4 .2;f is 9jective1 b n surjective
  "<#aj is n #h less ?an a multiple (
  #e1 = example">4
;d4 .2;f is n 9jective1 b is surjective4
  ,e 9teg} is an |tput "<( twice xf1 =
  example"> b "s 9teg}s >e |tputs ( m
  ?an "o 9put3 _% f(5) .k #3 .k f(6) _:4
#i 4
  ,det}m9e :e!r _% f_3 `;,z`*`;,z $o
`;,z _: is surjective if

a4 _% f(m, n) .k m+n _:
;b4 _% f(m, n) .k m~2"+n~2 _:
;c4 _% f(m, n) .k m _:
;d4 _% f(m, n) .k m-n _:
,solu;n 43

a4 ,yes1 s9ce giv5 any 9teg} _% c `e
  `;,z _: we c f9d two o!r 9teg}s _% m,
  n _: = : _% f(m, n) .k c _: = example1
  _% f(c, 0) .k c+0 .k c _:4
;b4 ,no1 s9ce _% -#1 `e `;,z _: & "! is
  no 9teg}s _% m, n _: = : _% m~2"+n~2
  .k -#1 _:4
;c4 ,yes1 s9ce e 9teg} .2;m 9 ! codoma9
  is mapps$ to via _% f(m, 0) .k m _:
;d4 ,yes ag1 ? w map to e possible
  9teg}4 ,= example1 _% f(m, 0) .k m _:
  = any 9teg} .2;m 9 ! codoma94
,x's wor? not+ :ile ~! >5't 9jective1 !y
c 2 surjective4
#aj 4
  ,3sid} ! func;n _% f_3 `;,z $o `;,z _:
giv5 by
_%
f(n) .k .,(n+1  if n is even
        .,(n-3  if n is odd."
_:

a4 ,is .2;f 9jective8 ,prove yr answ}4
;b4 ,is .2;f surjective8 ,prove yr
  answ}4
,solu;n 43

a4 .2;f is 9jective4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;x & .2;y 2 ele;ts ( ! doma9
  _% `;,z _:4 ,assume _% f(x) .k
  f(y) _:4 ,if .2;x & .2;y >e bo? ev51
  !n _% f(x) .k x+1 _: & _% f(y) .k
  y+1 _:4 ,s9ce _% f(x) .k f(y) _:1 we h
  _% x+1 .k y+1 _: : implies t _% x .k
  y _:4 ,simil>ly1 if .2;x & .2;y >e bo?
  odd1 !n _% x-3 .k y-3 _: s ag _% x .k
  y _:4 ,! only o!r possibil;y is t .2;x
  is ev5 an .2;y is odd "<or
  visa-v}sa">4 ,b !n _% x+1 _: wd 2 odd
  & _% y-3 _: wd 2 ev51 s x _c 2 t
  _% f(x) .k f(y) _:4 ,"!=e if _% f(x)
  .k f(y) _: we !n h _% x .k y _:1 :
  proves t .2;f is 9jective4
;b4 .2;f is surjective4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;y 2 an ele;t ( ! codoma9
  _% `;,z _:4 ,we w %{ "! is an ele;t
  .2;n ( ! doma9 "<_% `;,z _:"> s* t
  _% f(n) .k y _:4 ,"! >e two cases3
  ,f/1 if .2;y is ev51 !n let _% n .k
  y+3 _:4 ,s9ce .2;y is ev51 .2;n is
  odd1 s _% f(n) .k n-3 .k y+3-3 .k y _:
  z desir$4 ,second1 if .2;y is odd1 !n
  let _% n .k y-1 _:4 ,s9ce .2;y is odd1
  .2;n is ev51 s _% f(n) .k n+1 .k y-1+1
  .k y _: z ne$$4 ,"!=e .2;f is
  surjective4
#aa 4
  ,give an explicit =mula = a func;n f !
set ( 9teg}s to ! set ( positive 9teg}s
t is

a4 9jective b n surjective
;b4 surjective b n 9jective
;c4 9jective & surjective
;d4 nei 9jective nor surjective
,h9t 43
  ,mo/ likely1 yr solu;n w 2
piecewise-def9$4
,solu;n 43

a4
  _%
  f(n) .k .,(-#2n   if n "k #0
          .,(#2n+3  if n .1: #0
  _:
;b4
  _%
  f(n) .k .,(-n   if n "k #0
          .,(n+1  if n .1: #0
  _:
;c4
  _%
  f(n) .k .,(-#2n   if n "k #0
          .,(#2n+1  if n .1: #0
  _:
;d4 _% f(n) .k n~2"+1 _:
#ab 4
  ,let _% ,a .k .(1, 2, 3, ''', 10.) _:4
,3sid} ! func;n _% f_3 `;,p(,a) $o
`;,n _: giv5 by _% f(,b) .k |,b| _:4 ,t
is1 .2;f takes a subset ( .2,a z an 9put
& |tputs ! c>d9al;y ( t set4

a4 ,is .2;f 9jective8 ,prove yr answ}4
;b4 ,is .2;f surjective8 ,prove yr
  answ}4
;c4 ,f9d _% f~-1"(1) _:4
;d4 ,f9d _% f~-1"(0) _:4
;e4 ,f9d _% f~-1"(12) _:4
,solu;n 43

a4 .2;f is n 9jective4 ,to prove ?1 we
  m/ simply f9d two di6}5t ele;ts ( !
  doma9 : map to ! same ele;t ( !
  codoma94 ,s9ce _% f(.(1.)) .k #1 _: &
  _% f(.(2.)) .k #1 _:1 we see t .2;f is
  n 9jective4
;b4 .2;f is n surjective4 ,! l>ge/
  subset ( .2,a is .2,a xf1 & _% |,a| .k
  #10 _:4 ,s no natural numb} grt} ?an
  #aj w "e 2 an |tput4
;c4 _% f~-1"(1) .k .(.(1.), .(2.),
  .(3.), ''' .(10.).) _: "<! set ( all !
  s+leton subsets ( .2,a">4
;d4 _% f~-1"(0) .k .(_0.) _:4 ,note1 x
  wd 2 wr;g to write _% f~-1"(0) .k
  _0 _: - t wd claim t "! is no 9put :
  has #j z an |tput4
;e4 _% f~-1"(12) .k _0 _:1 s9ce "! >e no
  subsets ( .2,a ) c>d9al;y #ab4
#ac 4
  ,let _% ,a .k .(n `e `;,n|#0 "k: n "k:
#999.) _: 2 ! set ( all numb}s ) ?ree or
few} digits4 ,def9e ! func;n _% f_3 ,a
$o `;,n _: by _% f(abc) .k a+b+c _:1 ":
.2a1 .2;b1 & .2;c >e ! digits ( ! numb}
9 .2,a4 ,= example1 _% f(253) .k #2+5+3
.k #10 _:4

a4 ,f9d _% f~-1"(3) _:4
;b4 ,f9d _% f~-1"(28) _:4
;c4 ,is .2;f 9jective4 ,expla94
;d4 ,is .2;f surjective4 ,expla94
,solu;n 43

a4 _% f~-1"(3) .k .(003, 030, 300, 012,
  021, 102, 201, 120, 210, 111.) _:
;b4 _% f~-1"(28) .k _0 _: "<s9ce ! l>ge/
  sum ( ?ree digits is _% #9+9+9 .k
  #27 _:">
;c4 ,"p "<a"> proves t .2;f is n
  9jective4 ,! |tput #c is assign$ to
  #aj di6}5t 9puts4
;d4 ,"p "<;b"> proves t .2;f is n
  surjective4 ,"! is an ele;t ( !
  codoma9 "<#bh"> : is n assign$ to any
  9puts4
#ad 4
  ,:at c y d$uce ab ! sets .2;,x & .2;,y
if y "k 444

a4 "! is an 9jective func;n _% f_3 ,x $o
  ,y _:;8 ,expla94
;b4 "! is a surjective func;n _% f_3 ,x
  $o ,y _:;8 ,expla94
;c4 "! is a bijective func;n _% f_3 ,x
  $o ,y _:;8 ,expla94
,solu;n 43

a4 _% |,x| "k: |,y| _:
;b4 _% |,y| "k: |,x| _:
;c4 _% |,x| .k |,y| _:
#ae 4
  ,suppose _% f_3 ,x $o ,y _: is a
func;n4 ,: ( ! foll{+ >e possible8
,expla94

a4 .2;f is 9jective b n surjective4
;b4 .2;f is surjective b n 9jective4
;c4 _% |,x| .k |,y| _: & .2;f is
  9jective b n surjective4
;d4 _% |,x| .k |,y| _: & .2;f is
  surjective b n 9jective4
;e4 _% |,x| .k |,y| _:1 .2;,x & .2;,y >e
  f9ite1 & .2;f is 9jective b n
  surjective4
;f4 _% |,x| .k |,y| _:1 .2;,x & .2;,y >e
  f9ite1 & .2;f is surjective b n
  9jective4
,solu;n 43

a4 ,yes
;b4 ,yes
;c4 ,yes
;d4 ,yes
;e4 ,f9ally a no6
;f4 ,al a no
#af 4
  ,h{ does composi;n relate to func;n
prop}ties8

a4 ,if .2;f & .2;g >e bo? 9jective1 m/
  _% g.*f _: 2 9jective8  ,expla94
;b4 ,if .2;f & .2;g >e bo? surjective1
  m/ _% g.*f _: 2 surjective8  ,expla94
;c4 ,suppose _% g.*f _: is surjective4
  ,:at1 if any?+1 c y say ab .2;f &
  .2;g8  ,expla94
,h9t 43
  ,"w ) "s examples4
7777777777777777777777777777777777777777
,def9i;n  #a4c4cj 4  ,floor & ,ceil+
,func;ns4
  ,! ~1floor func;n assigns to e r1l
numb} .2;x ! l>ge/ 9teg} t is less ?an
or equal to .2;x4 ,we d5ote by ?
_% `;(x`;) _:
_% `;(*`;)_3`;,r $o `;,z with (`;(x`;)
.k n) ${33o (n "k: x "k n+1) _:
  ,! ~1ceil+ func;n assigns to e r1l
numb} .2;x ! smalle/ 9teg} t is grt} ?an
or equal to .2;x4 ,we d5ote by ?
_% `~(x`~) _:
_% `~(*`~)_3`;,r $o `;,z with (`~(x`~)
.k n) ${33o (n-1 "k x "k: n) _:
#ag 4
  ,f9d ! floor & ceil+ ( ea* ( ! foll{+
r1l numb}s3

a4 #h4fgecji
;b4 _% .p _:
;c4 _% -#2.1 _:
;d4 _% #7 _:
,solu;n 43

a4 _% `;(8.675309`;) .k #8 _: &
  _% `~(8.675309`~) .k #9 _:
;b4 _% `;(.p`;) .k #3 _: & _% `~(.p`~)
  .k #4 _:
;c4 _% `;(-#2.1`;) .k -#3 _: &
  _% `~(-#2.1`~) .k -#2 _:
;d4 _% `;(7`;) .k `~(7`~) .k #7 _:
#ah 4
  ,let _% f_3 ,z5 $o ,z5 _: 2 def9$ by
_%
f(n) .k `;( ;n `;)
           ?33#
            #2
_:
4 ,complete ! table ( values3
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 2 2 2 2 4
  ,is .2;f 9jective8 surjective8
,solu;n 43
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 #j2 #j2 #a2 #a2 #b4
  .2;f is n 9jective s9ce _% f(0) .k
f(1) _:1 & x is n surjective s9ce "! is
no solu;n to _% #3 .k f(n) _: 9 ! doma94
#ai 4
  ,>e ! floor or ceil+ func;ns 9jective8
,surjective8 ,if s1 prove x4 ,if n1
provide specific c.t}examples to %{ :y
n4
,solu;n 43
  ,i'm provid+ a solu;n = ! floor
func;n4 ,! ceil+ func;n solu;n c 2 d"o v
simil>ly4 ,! floor func;n is n 9jective4
,3sid} ! two r1l numb}s #b4a & #b4e3
_% `;(2.1`;) .k `;(2.5`;) .k #2 _:4
  ,! floor func;n is surjective1 h{"e4
,let _% c `e `;,z _: 2 an 9teg} 9 !
codoma94 ,!n 3sid} _% a .k c+0.1 `e
`;,r _:1 ! doma94 _% `;(a`;) .k
`;(c+0.1`;) .k c." _:
#bj 4
  ,complete ! foll{+ tables ( values =
ea* func;n3

a4 ,let _% f_3 ,z5 $o ,z5 _: 2 def9$ by
  _% f(n) .k (n+3)`0 5 _:
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 2 2 2 2 4
  ,is .2;f 9jective8 surjective8
;b4 ,let _% g_3 ,z5 $o ,z5 _: 2 def9$ by
  _% g(n) .k (n~2"+1)`0 5 _:
.2;x2 #j2 #a2 #b2 #c2 #d4
_% g(x) _:2 2 2 2 2 4
    ,is .2;g 9jective8 surjective8
,solu;n 43

a4
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 #c2 #d2 #j2 #a2 #b4
    .2;f is bo? 9jective & surjective4
    ,note t ! range ( ! func;n .2;f is
  _% .(0, 1, 2, 3, 4.) _: : is equal to
  ! :ole co-doma91 : tells u x's
  surjective4
;b4
.2;x2 #j2 #a2 #b2 #c2 #d4
_% g(x) _:2 #a2 #j2 #j2 #b2 #b4
    .2;g is n 9jective s9ce _% g(1) .k
  g(2) _: = example4 .2;g is al n
  surjective s9ce "! is no solu;n to
  _% #3 .k g(n) _: 9 ! doma94
    ,note t ! range ( ! func;n .2;g is
  _% .(0, 1, 2.) _: : is n equal
  co-doma91 : tells u x's n surjective4

  ,*apt} #b ,symbolic ,logic & ,pro(s

    ,sec;n #b4a ,logical ,equival;es
7777777777777777777777777777777777777777
,def9i;n  #b4a4a 4  ,tautology4
  ,an expres.n 9volv+ logical v>iables t
is true = all values is call$ a
~1tautology~'4
7777777777777777777777777777777777777777
,def9i;n  #b4a4b 4  ,3tradic;n4
  ,an expres.n 9volv+ logical v>iables t
is false = all values is call$ a
~13tradic;n~'4
  ,/ate;ts t >e n tautologies or
3tradic;ns >e call$ ~13t+5cies~'4
7777777777777777777777777777777777777777
,def9i;n  #b4a4c 4  ,logical ,equival;e4
  ,we say two proposi;ns .2;p & .2;q >e
~1logically ~1equival5t if _% p ${33o
q _: is a tautology4 ,we d5ote ? by _% p
_l q _:4
7777777777777777777777777777777777777777
,example  #b4a4d 4
  ,prove ! foll{+ >e equival5t us+ a
tru? table4

#a4 _% (p $o (q`%q)) _l p _:
#b4 _% p`+(p`%q) _l p _:
#c4 _% p`+(q`%r) _l (p`+q)`%(p`+r) _:
#d4 _% (p $o q) _l p`%q _:
#e4 _% p $o q _l p`+q _:
  ,note6 ,we use _% p $o q _l p`+q _:
(t5 5 t ? has a "n4 ,we'll call x
~1implica;n
,solu;n 43
  ,"h's ! solu;n = _% (p $o (q`%q)) _l
p _:3
7777777777777777777777777777777777777777
,table  #b4a4e 4  ,%{+ _% (p $o (q`%q))
${33o p _: is a tautology
.2;p .2;q _% p _: _% q`%q _: _% p $o
  (q`%q) _: _% (p $o (q`%q)) ${33o p _:4
;,,,t2 ;t2 ;f2 ;f2 ;t2 ;t4,'
;,,,t2 ;f2 ;f2 ;f2 ;t2 ;t4,'
;,,,f2 ;t2 ;t2 ;f2 ;f2 ;t4,'
;,,,f2 ;f2 ;t2 ;f2 ;f2 ;t4,'
7777777777777777777777777777777777777777
,note  #b4a4f 4
  ,! foll{+ is a collec;n ( v use;l
tautologies4 ,d y ne$ to memorize !m8
,absolutely6
  ,y'll t = ~? laws : h two di6}5t =ms
!y look v simil>1 j ) di6}5t op}a;ns &
tru? & false swapp$4 ,n only does ? m1n
y actually h half z m* to memorize1 "!'s
a r1son = ? t we'll get 9to :5 we 4cuss
,bool1n ,algebras 9 ,4crete #b6
7777777777777777777777777777777777777777
,li/  #b4a4g 4  ,funda;tal logical
equival;es
  ,let _% p, q _: & .2;r 2 logical
proposi;ns4

~1,commutative ~1,laws
    _% p`+q _l q`+p _:
  _% p`%q _l q`%p _:
~1,associative ~1,laws
    _% (p`+q)`+r _l p`+(q`+r) _:
  _% (p`%q)`%r _l p`%(q`%r) _:
~1,4tributive ~1,laws
    _% p`%(q`+r) _l (p`%q)`+(p`%r) _:
  _% p`+(q`%r) _l (p`+q)`%(p`+r) _:
~1,id5t;y ~1,laws
    _% p`+,f _l p _:
  _% p`%,t _l p _:
~1,nega;n ~1,laws
    _% p`%p _l ,f _:
  _% p`+p _l ,t _:
~1,idempot5t ~1,laws
    _% p`+p _l p _:
  _% p`%p _l p _:
~1,dom9a;n ~1,laws
    _% p`%,f _l ,f _:
  _% p`+,t _l ,t _:
~1,absorp;n ~1,laws
    _% p`%(p`+q) _l p _:
  _% p`+(p`%q) _l p _:
~1,de,morgan's ~1,laws
    _% (p`+q) _l (p)`%(q) _:
  _% (p`%q) _l (p)`+(q) _:
~7,d|ble ,nega;n ,law~'
    _% (p) _l p _:
~1,implica;n
    _% p $o q _l p`+q _:
7777777777777777777777777777777777777777
,example  #b4a4h 4
  ,use exi/+ logical equival;es f
,li/ #b4a4g to %{ ! foll{+ >e equival5t4

#a4 _% p`%q _l (p $o q) _:
#b4 _% (p $o r)`+(q $o r) _l (p`%q) $o
  r _:
#c4 _% q $o p _l p $o q _:
#d4 _% (p $o (q`%q)) _l p _:
  ,? is yr f/ exp}i;e ) logical pro(6 ,x
won't 2 yr la/4 ,m* ( ? class is ab
le>n+ to "u/& & >gue rigor|sly4
,ex}cises ,ex}cises #a 4
  ,det}m9e :e!r ! foll{+ two /ate;ts >e
logically equival5t3  _% (p $o q) _: &
_% p`%q _:4 ,expla9 h{ y "k y >e
correct4
,solu;n 43
  ,make a tru? table = ea* & comp>e4 ,!
/ate;ts >e logically equival5t4
#b 4
  ,>e ! /ate;ts _% p $o (q`+r) _: &
_% (p $o q)`+(p $o r) _: logically
equival5t8
,solu;n 43
  ,let's />t ) ! left-h& side & "w t{>ds
! "r to f9d |4
_%
p $o (q`+r)           _l p`+(q`%r)
_l (p`%q)`+(p`%r)
_l (p $o q)`+(p $o r)
_:
: 0 :at we want$ to %{4
#c 4
  ,use a tru? table to %{ t _% (p $o
q)`%(p $o r) _: & _% p $o (q`%r) _: >e
logically equival5t4
,solu;n 43
  ,"h's an alt}native solu;n us+ previ|s
equival;es "<n a tru? table">3
_%
(p $o q)`%(p $o r) _l (p`+q)`%(p`+r)
_l p`+(q`%r)
_l p $o (q`%r)
_:
#d 4
  ,simplify ! foll{+ /ate;ts "<s t
nega;n only appe>s "r 2f v>iables">4

a4 _% (p $o q) _:4
;b4 _% (p`+q) $o (q`%r) _:4
;c4 _% ((p $o q)`+(r`%r)) _:4
,answ} 43

a4 _% p`%q _:4
;b4 _% (p`+r) $o (q`+r) _: or1 replac+ !
  implica;n ) a 4junc;n f/3
  _% (p`%q)`+(q`+r) _:4
;c4 _% (p`%q)`%(r`%r) _:4 ,? is
  necess>ily false1 s x is al equival5t
  to _% p`%p _:4
;d4 ,ei ,sam is n a man & ,*ris is n a
  woman1 or ,*ris is a woman4
#e 4
  ,use ,de ,morgan's ,laws1 & any o!r
logical equival;e facts y "k to simplify
! foll{+ /ate;ts4 ,%{ all yr /eps4 ,yr
f9al /ate;ts %d h nega;ns only appe>
directly next to ! s5t;e v>iables or
pr$icates "<.2;p1 .2;q1 etc4">1 & no
d|ble nega;ns4 ,x wd 2 a gd idea to use
only 3junc;ns1 4junc;ns1 & nega;ns4

a4 _% ((p`%q)`+(r`+s)) _:4
;b4 _% ((p $o q)`%(q $o k)) _: "<c>e;l )
  ! implica;ns">4
;c4 _% (p`%q) $o (p`+q) _:
,solu;n 43

a4
  _%
  ((p`%q)`+(r`+s))  _l (p`%q)`%(r`+s)
  _l (p`%q)`%(r`+s)
  _l (p`+q)`%(r`+s)
  _l (p`+q)`%(r`+s)
  _:
;b4
  _%
  ((p $o q)`%(q $o k)) _l ((p`+q)`%(q`+-
  k))
  _l ((p`+q)`%(q`+k))
  _l (p`+q)`+(q`+k)
  _l (p`%q)`+(q`%k)
  _l (p`%q)`+(q`%k)
  _:
;c4
  _%
  (p`%q) $o (p`+q)  _l (p`%q)`+(p`+q)
  _l (p`+q)`+(p`+q)
  _l p`+q`+p`+q
  _l p`+p`+q`+q
  _l (p`+p)`+(q`+q)
  _l (,t)`+(,t)
  _l ,t
  _:
  444 x's a tautology6

,sec;n #b4b ,applica;n3 ,set ,prop}ties
             & ,equival;es
  ,? sec;n explores h{ we c apply !
equival;es ( logical /ate;ts to ! set
prop}ties we explor$ 9 ,sec;n #a4b4 ,x
is no co9cid;e t ~? set prop}ties look
ne>ly id5tical to ! logical equival;es6
7777777777777777777777777777777777777777
,def9i;n  #b4b4a 4  ,set op}a;ns def9$
via logic4
  ,let _% ,a and ,b _: 2 sets4

#a4 _% ,a _"k: ,b ${33o (x `e ,a) $o (x
  `e ,b) _:
#b4 _% x `e ,a.+,b ${33o x `e ,a`+x `e
  ,b _:
#c4 _% x `e ,a.%,b ${33o x `e ,a`%x `e
  ,b _:
#d4 _% x `e ,a_*,b ${33o x `e ,a`%x /`e
  ,b _:
#e4 _% ,a .k ,b _: if & only if _% ,a
  _"k: ,b _: & _% ,b _"k: ,a _:4
7777777777777777777777777777777777777777
,example  #b4b4b 4
  ,prove t if .2;,s is any set3

#a4 _% _0 _"k: ,s _:
#b4 _% ,s _"k: ,s _:
,solu;n 43

#a4 ,! logical /ate;t we're try+ to
  prove is _% (x `e _0) $o (x `e ,s) _:
    ,assume t _% x `e _0 _:4 ,? is
  false1 s9ce no?+ is 9 ! empty set4 ,t
  m1ns t ! 3di;nal /ate;t _% (x `e _0)
  $o (x `e ,s) _: is vacu|sly true1 s9ce
  ! 3di;nal _% ,f $o p _: is alw true4
  ,?us _% _0 _"k: ,s _:4
#b4 ,! logical /ate;t we're try+ to
  prove is _% (x `e ,s) $o (x `e ,s) _:
    ,assume t _% x `e ,s _:4 ,!n _% x `e
  ,s _: is trivially true4 ,?us _% ,s
  _"k: ,s _:4
7777777777777777777777777777777777777777
,example  #b4b4c 4
  ,prove ! foll{+ id5tities3

#a4 _% ,a.+_0 .k ,a _:
#b4 _% ,a _"k: (,a.+,b) _:
#c4 _% ,a.%(,a.+,b) .k ,a _:
#d4 _% ",a.+,b<:} .k ,a:.%,b: _:
,solu;n 43
  ,we'll prove ! f/ via an 8iff0 >gu;t3
_%
x `e ,a.+_0       ${33o x `e ,a`+x `e _0
${33o x `e ,a`+,f
${33o x `e ,a
_:
?us _% ,a.+_0 .k ,a _:4
,ex}cises ,ex}cises
  ,let _% ,a, ,b,  and ,c _: 2 sets4
,prove ! foll{+ id5tities3
#a 4
  ,prove _% ,a.+(,b.+,c) .k
(,a.+,b).+,c _:
,solu;n 43
  ,assume _% x `e ,a.+(,b.+,c) _:1 !n3
_%
x `e ,a.+(,b.+,c)                    _l-
 (x `e ,a)`+(x `e ,b.+,c)
_l (x `e ,a)`+((x `e ,b)`+(x `e ,c))
_l x `e ,a`+x `e ,b`+x `e ,c
_l (x `e ,a`+x `e ,b)`+x `e ,c
_l (x `e ,a.+,b)`+x `e ,c
_l x `e (`e,a.+,b).+,c
_:
& s _% ,a.+(,b.+,c) .k (,a.+,b).+,c _:4
#b 4
  ,prove _% ",a:<:} .k ,a _:
,solu;n 43
  ,assume _% x `e ",a:<:} _: !n we h
_%
x `e ",a:<:}   _l (x `e ,a:)
_l ((x `e ,a))
_l x `e ,a
_:
& s _% ",a:<:} .k ,a _:4
#c 4
  ,prove _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:
,solu;n 43
  .7,"h we 3v}t ! expres.n ( sets 9to a
logical /ate;t & apply ! 4tributive law
= logical /ate;ts4.'
  ,assume t _% x `e ,a.+(,b.%,c) _:1 !n3
_%
x `e ,a.+(,b.%,c)-
_l x `e ,a`+(x `e ,b.%,c)
_l x `e ,a`+(x `e ,b`%x `e ,c)
_l (x `e ,a`+x `e ,b)`%(x `e ,a`+`e,c)
_l (x `e ,a.+,b)`%(x `e ,a.+,c)
_l x `e (,a.+,b).%(,a.+,c)
_:
& "!=e _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:4
#d 4
  ,prove _% ",a.%,b<:} .k ,a:.+,b: _:
,solu;n 43
  .7,|r /rategy is to f/ 3v}t ! /ate;t
9to a logical /ate;t & !n apply
,de,morgan's law = logical /ate;ts4.'
  ,assume _% x `e ",a.%,b<:} _:4 ,!n3
_%
(x `e ,a.%,b)           _l (x `e ,a`%x-
`e ,b)
_l (x `e ,a)`+(x `e ,b)
_l x `e ,a:`+x `e ,b:
_:
& s _% ",a.%,b<:} .k ,a:.+,b: _:4
#e 4
  ,prove _% ,a _"k: ,b _: if & only if
_% ,b: _"k: ,a: _:
,solu;n 43
  .7,"h |r 8trick0 is to use ! fact ! !
3trapositive is equival5t to !
3di;nal4.'
  ,assume _% ,a _"k: ,b _:4 ,? m1ns t
_% x `e ,a $o x `e ,b _:4
_%
x `e ,a $o x `e ,b      _l (x `e ,b) $o-
 (x `e ,a)
_l x `e ,b: $o x `e ,a:
_:
& ?us _% ,b: _"k: ,a: _:4

   ,sec;n #b4c ,pr$icates & ,logical
              ,quantifi}s

    ,subsec;n #b4c4a ,pr$icates
  ,3sid} ? ma!matical s5t;e3 8_% x "k
#5 _:04

;$= .2;x is a v>iable1 ! subject ( !
  s5t;e4
;$= 8is less ?an five0 is ! ~1pr$icate
;$= ,a pr$icate is a prop}ty t a subject
  c h4
;$= ,we c write _% ,p(x)_3.k _: 8_% x "k
  #5 _:10 ":

;$= ! value ( _% ,p(x) _: is ! value ( !
  ~1proposi;nal ~1func;n .2;,p at .2;x4
;$= ,assign+ a value to .2;x makes .2;,p
  a proposi;n "<x !n has a tru? value">
7777777777777777777777777777777777777777
,def9i;n  #b4c4a 4  ,doma9 ( ,4c|rse4
  ,! ~7doma9 ( 4c|rse~' "<or ~1univ}se
~1( ~14c|rse~'"> is ! collec;n f :
v>iables c take values4
  ,= example1 if my pr$icate func;n is
8.2;x is %>p01 ! func;n has a di6}5t
m1n+ if my univ}se ( 4c|rse is 8all
college /ud5ts0 v}sus 8all tools40
7777777777777777777777777777777777777777
,example  #b4c4b 4
  ,det}m9e ! tru? values ( ! foll{+3

#a4 ,if _% ,p(x)_3.k _: 8,! ~w .2;x
  3ta9s ! lr a04

a4 .2,p"<elephant">
;b4 .2,p"<purple">
;c4 .2,p"<true">
;d4 .2,p"<false">
#b4 ,if _% ,q(x, y)_3.k _: 8_% x~2"+y~2
  .k #25 _:04

a4 _% ,q(4, 5) _:
;b4 _% ,q(3, 4) _:

    ,subsec;n #b4c4b ,logical
    ,quantifi}s
7777777777777777777777777777777777777777
,def9i;n  #b4c4c 4  ,univ}sal
,quantifi}4
  ,! ~1univ}sal ~1quantifica;n (
_% ,p(x) _: is ! /ate;t t _% ,p(x) _: is
true = all values ( .2;x 9 ! doma9 (
4c|rse4 ,we write _% `&x,p(x) _:
  ,a ~1c.t}example is an .2;x value = :
_% ,p(x) _: is false4
7777777777777777777777777777777777777777
,def9i;n  #b4c4d 4  ,exi/5tial
,quantifi}4
  ,! ~1exi/5tial ~1quantifica;n (
_% ,p(x) _: is ! /ate;t t "! is "s value
.2;x 9 ! univ}se ( 4c|rse = :
_% ,p(x) _: is true4 ,we write
_% `=x,p(x) _:
7777777777777777777777777777777777777777
,example  #b4c4e 4
  ,let _% ,p(x) _: 2 8_% x~2 .1: #0 _:04
,:at is ! tru? value ( _% `&x,p(x) _: if
! doma9 is3

#a4 ,all r1l numb}s
#b4 ,all complex numb}s
7777777777777777777777777777777777777777
,example  #b4c4f 4
  ,let ! doma9 2 all r1l numb}s4 ,f9d a
c.t}example to ! foll{+ /ate;ts3

#a4 _% `&x(x~2 /.k x) _:
#b4 _% `&x(|x| .1 #0) _:
#c4 _% `&x(x .1 #3`+x "k #2) _:
7777777777777777777777777777777777777777
,example  #b4c4g 4
  ,we c comb9e quantif}s1 ": ea* v>iable
mi<t come f a di6}5t doma94 ,prec$;e (
quantifi}s is left to "r4
  ,:at is ! tru? value ( ! foll{+
expres.ns ": ! doma9 is all r1l numb}s3

#a4 _% `&x`=y(xy .k #5) _:
#b4 _% `=x`&y(xy .k #5) _:
7777777777777777777777777777777777777777
,rem>k  #b4c4h 4  ,negat+ ,quantifi}s4
  ,! nega;n ( quantifi}s is f.d z
foll{s3
_%
`&x,p(x) _l `=x,p(x)
`=x,p(x) _l `&x,p(x)
_:
  ,x mi<t help to ?9k 8n all4440 is
equival5t to 8"s444 d n04 ,:ile 8"!
isn't "o :o4440 is ! same z 8no "o
does44404
7777777777777777777777777777777777777777
,note  #b4c4i 4
  ,c.t}examples to univ}sal /ate;ts "w
2c if _% `=x,p(x) _: is true1 !n
_% `&x,p(x) _: is al true1 t is1
_% `&x,p(x) _: is false6
7777777777777777777777777777777777777777
,example  #b4c4aj 4
  ,= ea* nega;n 2l1 write ! /ate;t us+
quantifi}s to 3firm ea* is correct4

#a4 ,! nega;n ( 8,"! exi/s a gre5 horse0
  is 8,no horse is gre540
#b4 ,! nega;n ( 8,all p we> hats0 is !
  /ate;t 8,"s p}son doesn't we> hats04
#c4 ,! nega;n ( 8,nobody loves ma?0 is
  8,"s"o does love ma?04
#d4 ,f9d ! nega;n ( 8"s driv}s don't
  obey ! spe$ limit404
7777777777777777777777777777777777777777
,example  #b4c4aa 4
  ,if ! univ}se ( 4c|rse is all p at !
univ}s;y1 & _% ,p(x) _: is ! /ate;t
8.2;x loves to dr9k c(fee10 express ea*
/ate;t 9 pla9 ,5gli%3

#a4 _% `&x,p(x) _:
#b4 _% `=x,p(x) _:
#c4 _% `&x,p(x) _:
7777777777777777777777777777777777777777
,example  #b4c4ab 4
  ,translate ! /ate;t 9to logical
expres.ns us+ pr$icates1 quantifi}s1 &
logical 3nectives4

#a4 ,all ( yr frs >e p}fect4
#b4 ,n "eybody is yr fr or "s"o is n
  p}fect4
,ex}cises #b4c4c ,ex}cises #a 4
  ,det}m9e ! tru? value ( ! ea* ( ~!
/ate;ts if ! doma9 3si/s ( all 9teg}s

a4 _% `&n(n+1 .1 n) _:
;b4 _% `=n(n~3 .k -#1) _:
;c4 _% `=n(#2n .k #5n) _:
;d4 _% `&n(#3n "k: #4n) _:
;e4 _% `&x`&y((x~2 .k y~2") $o (x .k
  y)) _:
,solu;n 43

a4 ,true
;b4 ,true
;c4 ,true
;d4 ,false
;e4 ,false
#b 4
  ,det}m9e ! tru? value ( ea* ( ! foll{+
/ate;ts if ! doma9 3si/s ( all r1l
numb}s4

a4 _% `=x(x~2 .k #2) _:
;b4 _% `=x(x~2 .k -#1) _:
;c4 _% `&x(x~2"+2 .1: #1) _:
;d4 _% `&x(#2x .1 #2) _:
;e4 _% `&x(x+4)~2 .k x~2"+16 _:
,solu;n 43

a4 ,true
;b4 ,false
;c4 ,true
;d4 ,false
;e4 ,false
#c 4
  ,translate ~! /ate;ts 9to ,5gli% ":
_% ,f(x) _: is 8.2;x is fa/0 &
_% ,a(x) _: is 8.2;x is an a?lete01 "h !
doma9 is ! set ( p4

a4 _% `&x(,a(x) $o ,f(x)) _:
;b4 _% `&x(,f(x)`%,a(x)) _:
;c4 _% `=x(,f(x) $o ,a(x)) _:
;d4 _% `=x(,a(x)`%,f(x)) _:
,solu;n 43
  ,yr answ} %dn't h .2;x 9 x any":6
,regul> p don't say 8,= all ;x if ;x is
fa/1 !n4440 ,"h "s "s id1s "<yr answ}
may v">

a4 ,all a?letes >e fa/4
;b4 ,"ey"o is a fa/ a?lete4
;c4 ,"s fa/ p}son is an a?lete4
;d4 ,"! is a sl{ a?lete4
#d 4
  ,let _% ,c(x) _: d5ote ! pr$icate
8.2;x is 9 ! correct place01 let
_% ,e(x) _: d5ote 8.2;x is 9 excell5t
3di;n01 & let _% ,t(x) _: d5ote 8.2;x is
a tool0 ": ! doma9 ( ea* pr$icate is !
set ( objects 9 a g>age4 ,translate ea*
9to pla9 ,5gli%3

a4 _% `=x,c(x) _:
;b4 _% `=x(,t(x)`%,c(x)) _:
;c4 _% `&x(,t(x) $o (,c(x)`%,e(x))) _:
,solu;n 43

a4 ,"s?+ 9 ! g>age is | ( place4
;b4 ,"s tool is misplac$4
;c4 ,all tools >e 9 excell5t 3di;n & 9 !
  correct place4
#e 4
  ,simplify ! /ate;ts 2l s t nega;ns >e
only directly next to ! pr$icates4

a4 _% `=x`&y(,o(x)`+,e(y)) _:4
;b4 _% `&x`&y(x "k y`%`=z(x "k z`+y "k
  z)) _:4
;c4 ,"! is a numb} .2;n = : no o!r numb}
  is ei less ?an or equal to .2;n4
;d4 ,x is false t = e numb} .2;n "! >e
  two o!r numb}s : .2;n is 2t4
,solu;n 43

a4
  _%
  `=x`&y(,o(x)`+,e(y))    _l `&x`&y(,o(-
  x)`+,e(y))
  _l `&x`=y(,o(x)`+,e(y))
  _l `&x`=y,o(x)`%,e(y)
  _l `&x`=y,o(x)`%,e(y)
  _:
;b4 .7,apply+ ,de ,morgan's laws _m1 _m
  "ts & not+ t ! opposite (.' _% x "k
  a _: .1is _% x .1: a _:.23
  _%
  `&x`&y(x "k y`%`=z(x "k z`+y "k z))-
            _l `&x`&y(x "k y`%`=z(x "k-
  z`+y "k z))
  _l `=x`&y(x "k y`%`=z(x "k z`+y "k z)-
  )
  _l `=x`&y(x "k y`%`=z(x "k z`+y "k z)-
  )
  _l `=x`&y(x "k y)`+(`=z(x "k z`+y "k-
  z)))
  _l `=x`&y(x "k y)`+`&z(x "k z`+y "k z-
  )) )
  _l `=x`&y(x "k y)`+`&z(x "k z)`%(y "k-
   z)) )
  _l `=x`&y(x .1: y)`+`&z(x .1: z)`%(y-
  .1: z)) )
  _:
;c4 ,? /ate;t c 2 writt5 _% `=n`=x(x "k
  n) _:4 ,x c 2 simplifi$ z _% `=n`&x(x
  "k n) _:
;d4 ,? /ate;t c 2 writt5 _% `&n`=x`=y(x
  "k n "k y) _:
  _%
  `&n`=x`=y(x "k n "k y)    _l `=n`=x`=-
  y(x "k n "k y)
  _l `=n`&x`=y(x "k n "k y)
  _l `=n`&x`&y(x "k n "k y)
  _:
#f 4
  ,3sid} ! /ate;t1 8,"! is a build+ on !
campus ( "s college 9 ! ,unit$ ,/ates 9
: e room is pa9t$ :ite40

a4 ,express ! /ate;t us+ quantifi}s4 ,2
  sure to def9e yr pr$icate func;n &
  specify ! doma9 ( ea* ( ! ?ree
  v>iables4
;b4 ,express ! nega;n ( ! abv logical
  quantifi$ /ate;t s t no nega;n is to !
  left ( a quantifi}4
;c4 ,write ! nega;n ( ! /ate;t 9 pla9
  ,5gli%4
,solu;n 43
  ,let .2;c come f ! univ}se ( colleges
9 ! ,,u1 .2;b 2 f ! univ}se ( build+s on
a *os5 campus & .2;r 2 ! rooms 9 a *os5
build+4

a4 ,we h to f/ select a college1 !n f9d
  ! build+ on t campus3
    _% `=c`=b`&r(b on the campus of c in
  which r is painted white) _:
;b4 .7,/>t ) ! nega;n on ! left & apply
  ,de ,morgan's laws.'
  _%
  `=c`=b`&r(b on the campus of c in whi-
  ch r is painted white)
  _l `&c`&b`=r(b on the campus of c in-
  which r is painted white)
  _:
;c4 ,on e campus 9 ! ,,u1 e build+ has
  at l1/ "o room t isn't pa9t$ :ite4

      ,sec;n #b4d ,logical ,>gu;ts
7777777777777777777777777777777777777777
,def9i;n  #b4d4a 4  ,logical ,>gu;ts4
  ,an ~1>gu;t is a sequ;e ( /ate;ts
"<~1premises~'"> t 5ds ) a 3clu.n4
  ,a ~1valid ~1>gu;t is "o ": ! 3clu.n
foll{s f ! tru? ( ! premises4
  ,= ! sequ;e ( premises _% p1, p2, ''',
p;n _: & 3clu.n .2;q1 an >gu;t is valid
if3
_% p1`%p2`%''' `%p;n $o q _:
is a tautology4
  ,a ~1fallacy is a =m ( 9correct r1son+
t l1ds to an 9valid >gu;t4
7777777777777777777777777777777777777777
,example  #b4d4b 4
  ,3sid} ! foll{+ >gu;t3

_4 ,if y give a m|se a cookie1 !n he'll
  ask = a glass ( milk4
_4 ,y gave a m|se a cookie4
_4 ,"!=e he ask$ = a glass ( milk4
  ,? >gu;t is ( ! =m3
_% p $o q _:4
.2;p4
_% ,*q _:4
  & is valid s9ce _% ((p $o q)`%p) $o
q _: is a tautology4
  ,2l is a table ( common >gu;t =ms1 al
"kn z rules ( 9f};e4 ,obs}ve t we're us+
_% $33oo _: to %{ 8if1 !n04 ,? symbolic
*oice is to hi<li<t ! di6};e 2t !
hypo!ses & 3clu.n ( ! >gu;t1 & c>ries no
addi;nal m1n+ = ! purposes ( ? c|rse4
7777777777777777777777777777777777777777
,li/  #b4d4c 4  ,basic >gu;t =ms - rule
( 9f};e
  ,let _% p, q and r _: 2 logical
proposi;ns4 ,! foll{+ >e tautologies3

~7,modus ,pon5s_/,direct r1son+~'
    _% (p $o q)`%p $33oo q _:
~7,modus ,toll5s _/ ,9direct ,r1son+~'
    _% (p $o q)`%q $33oo p _:
~1,4junctive ~1,addi;n
    _% p $33oo (p`+q) _:
~1,3junctive ~1,simplifica;n
    _% (p`%q) $33oo p _:
  _% (p`%q) $33oo q _:
~1,4junctive ~1,simplifica;n
    _% (p`+q)`%p $33oo q _:_% (p`+q)`%q
  $33oo p _:
~7,*a9 ,>gu;t _/ ,syllogism~'
    _% (p $o q)`%(q $o r) $33oo (p $o
  r) _:
~1,3junc;n
    _% (p)`%(q) $33oo (p`%q) _:
~1,resolu;n
    _% (p`+q)`%(p`+r) $33oo (q`+r) _:
7777777777777777777777777777777777777777
,note  #b4d4d 4
  ,x wd 2 gd practice to v}ify t ea* ( !
>gu;ts 9 table ,li/ #b4d4c is a
tautology us+ ei true tables or logical
equival;es4
7777777777777777777777777777777777777777
,example  #b4d4e 4
  ,:at rules ( 9f};e >e 2+ us$ "h8

_4 ,kang>oos live 9 ,au/ralia & >e
  m>supials4 ,"!=e1 kang>oos >e
  m>supials4
_4 ,if ,i g swimm+1 !n ,i w /ay 9 ! sun
  too l;g4 ,if ,i /ay 9 ! sun too l;g1
  !n ,i w sunburn4 ,"!=e1 if ,i g
  swimm+1 !n ,i w sunburn4
_4 ,i r1d a horror /ory4 ,:5 ,i r1d
  horror /ories1 ,i h weird dr1ms4 ,"!=e
  ,i _h weird dr1ms4
7777777777777777777777777777777777777777
,def9i;n  #b4d4f 4  ,quantifi$ ,>gu;ts4
  ~1,exi/5tial ~19/antia;n describes !
>gu;t3
_% `=x,p(x)  ,p(c) _:
= "s .2;c 9 ! doma94
  ~1,exi/5tial ~1g5}aliza;n describes !
>gu;t3
_% ,p(c)  `=x,p(x) _:
4
  ~7,univ}sal modus pon5s~' describes !
>gu;t3
_% `&x(,p(x) $o ,q(x))`%,p(a)  ,q(a) _:
": .2a is a "picul> ele;t 9 ! doma94
  ~7,univ}sal modus toll5s~' describes !
>gu;t3
_% `&x(,p(x) $o ,q(x))`%,q(a)  ,p(a) _:
": .2a is a "picul> ele;t 9 ! doma94
7777777777777777777777777777777777777777
,example  #b4d4g 4
  ,%{ t ! premises1 8,a /ud5t 9 ? class
has n r1d ! book10 & 8,"ey"o 9 ? class
pass$ ! f/ exam0 imply ! 3clu.n 8,"s"o
:o pass$ ! f/ exam has n r1d ! book40
,let _% ,c(x) _: 2 8.2;x is 9 ? class10
_% ,b(x) _: 8;x has r1d ! book01 &
_% ,p(x) _: 8.2;x pass$ ! f/ exam40
,solu;n 43
  ,! /ate;t1 8"s"o :o pass$ ! f/ exam
has n r1d ! book0 m1ns "! is "s"o 9
class did ~? ?+s4
_% `=x(,p(x)`%,b(x)) _:
7777777777777777777777777777777777777777
,table  #b4d4h 4  ,>gu;t /ep-by-/ep
,/ep ,r1son4
#a4 _% `=x(,c(x)`%,b(x)) _: 2 ,premise4
#b4 _% ,c(a)`%,b(a) _: 2 ,exi/5tial
  9/antia;n4
#c4 _% ,c(a) _: 2 ,simplifica;n ( #b4
#d4 _% `&x(,c(x) $o ,p(x)) _: 2
  ,premise4
#e4 _% ,c(a) $o ,p(a) _: 2 ,univ}sal
  9/antia;n4
#f4 _% ,p(a) _: 2 ,modus pon5s ( #c &
  #e4
#g4 _% ,b(a) _: 2 simplifica;n ( #b a
  di6}5t way4
#h4 _% ,p(a)`%,b(a) _: 2 ,3junc;n ( #f &
  #g4
#i 4 _% `=x(,p(x)`%,b(x)) _: 2
  ,exi/5tial g5}aliza;n f #h44
7777777777777777777777777777777777777777
,example  #b4d4i 4
  ,= ! foll{+ >gu;t1 expla9 ! rules (
9f};e = ea* /ep l1d+ ! ! 3clu.n3
  ,l9da1 a /ud5t 9 ? class {ns a r$
3v}tible4 ,"ey"o :o {ns a r$ 3v}tible
has gott5 at l1/ "o spe$+ ticket4 ,"!=e1
"s"o 9 ? class has gott5 at l1/ "o spe$+
ticket4
  ,"h >e "s common fallacies4 ,!y're n
typeset 9 a table 2c al? y %d 2 aw>e (
:at !y >e1 !y >e n valid >gu;ts6

_4 ,fallacy ( a6irm+ ! 3clu.n3

;$= 8,if y get an ,a1 y pass ? class4 ,y
  pass$ ! class1 "!=e y got an ,a40
  "<n valid6">
;$= 8,if an animal is a type ( cat1 x
  has hair4 ,i h hair4 ,"!=e1 ,i m/ 2 "s
  k9d ( cat40 "<n valid6">
;$= _% ((p $o q)`%q $o p) _: is n a
  tautology6
_4 ,fallacy ( d5y+ ! hypo!sis

;$= 8,if y get an ,a1 y pass ? class4 ,y
  didn't get an ,a4 ,oh no6 ,y m/ n h
  pass$ ? class60 "</ n valid6">
;$= 8,if an animal is a type ( cat1 x
  has hair4 ,my dog ,ruby isn't a cat4
  ,"!=e %e m/ n h hair40 "<nope">
;$= _% ((p $o q)`%p $o q) _: is n a
  tautology6
,ex}cises ,ex}cises #a 4
  ,det}m9e if ! foll{+ d$uc;n rule is
valid3
_% p`+q _:4
_% p _:4
_% ,*q _:4
,solu;n 43
  ,! d$uc;n rule is valid4 ,to see ?1
make a tru? table : 3ta9s _% p`+q _: &
_% p _: "<& .2;p & .2;q ( c|rse">4 ,look
at ! tru? value ( .2;q 9 ea* ( ! r{s t h
_% p`+q _: & _% p _: true4
#b 4
  ,det}m9e if ! foll{+ is a valid d$uc;n
rule3
_% p $o (q`+r) _:4
_% (p $o q) _:4
_% ,*r _:4
,solu;n 43
  ,? is valid4 ,make a tru? table4
#c 4
  ,det}m9e if ! foll{+ is a valid d$uc;n
rule3
_% (p`%q) $o r _:4
_% p`+q _:4
_% ,*r _:4
,solu;n 43
  ,x isn't2 make a tru? table & see
_% (((p`%q) $o r)`%(p`+q)) $o r _: isn't
a tautology4
#d 4
  ,%{ t ! foll{+ is a valid d$uc;n rule
by build+ a tru? table4
_% p $o q _:4
_% q $o r _:4
_% ,*(p $o r) _:4
#e 4
  ,come up ) all valid 3clu.ns = ? set (
premises3 8,if y get | ! l1%1 ! dog
wants to g = a walk10 8! dog wants to g
= a  walk if y put on %oes10 8! dog
want+ to g = a walk is su6ici5t = me to
want a cat40 8,! dog doesn't want to g =
a walk40 ,expla9 yr answ} not+ ea* /ep (
! >gu;t4
#f 4
  ,3sid} ! /ate;t 8,sup}man saves ! "d
or ,lois ,lane dies4 ,sup}man sav$ ! "d1
"!=e ,lois didn't die40 ,is ! >gu;t
valid8 ,expla9 yr answ}4
,solu;n 43
  ,? is an >gu;t ( ! =m3
_% ,superman saves`+,lois dies _:4
_% ,superman saved _:4
_% ,*,lois didn't die _:4
  ,? is a fallacy4 ,9 fact1 x's !
fallacy ( d5y+ ! hypo!sis 9 4guise4
,rewrite ! 4junc;n z an implica;n to see
?3
_% ,superman saves$o,lois dies _:4
_% ,superman saved _:4
_% ,*,lois didn't die _:4
#g 4
  ,prove t ! fol{+ is a valid >gu;t1
expla9+ ea* rule ( 9f};e us$ to >rive at
! 3clu.n4

a4 8,i take ! bus or ,i walk4 ,if ,i
  walk ,i get tir$4 ,i d n get tir$4
  ,"!=e ,i take ! bus40
;b4 8,all lions >e fi}ce4 ,"s lions d n
  dr9k c(fee4 ,"!=e1 "s fi}ce cr1tures d
  n dr9k c(fee40
,h9t 43

a4 ,write ea* 9 t}ms ( logical symbols4
;b4 ,let ! univ}se ( 4c|rse 2 all
  cr1tures1 _% ,l(x) _: 2 ! /ate;t 8.2;x
  is a lion10 _% ,c(x) _: 2 8.2;x dr9ks
  c(fee10 & _% ,f(x) _: is 8.2;x is
  fi}ce40
#h 4
  ,%{ t ! foll{+ >gu;t is 9valid4
  ,if wages 9cr1se1 !n "! w 2 9fla;n4 ,!
co/ ( liv+ w n 9cr1se if "! is no
9fla;n4 ,wages w 9cr1se4 ,"!=e1 ! co/ (
liv+ w 9cr1se4
,h9t 43
  ,make a tru? table4
,solu;n 43
  ,! >gu;t has ?ree proposi;nal v>iables
& is ( ! =m3
_% wages increase$oinflation _:4
_% inflation $o cost of living
  increase _:4
_% wages increase _:4
_% ,*cost of living increases _:4
  444 n{ make a tru? table4

   ,sec;n #b4e ,an 9troduc;n to pro(s

    ,subsec;n #b4e4a ,basic numb} 3cepts
  ,2f we />t1 we ne$ to =mally def9e "s
basic 3cepts ( numb}s4
7777777777777777777777777777777777777777
,def9i;n  #b4e4a 4  ,ev5 ,9teg}4
  ,a numb} .2;n is sd to 2 ~1ev5 if x is
a multiple ( #b4 ,t is1 if "! exi/s an
9teg} .2;k s* t _% n .k #2k _:1 !n .2;n
is ev54
7777777777777777777777777777777777777777
,example  #b4e4b 4

#a4 #f is ev5 s9ce _% #6 .k #2*3 _:
#b4 #j is ev51 s9ce _% #0 .k #2*0 _:
#c4 -#h is ev51 s9ce _% -#8 .k
  #2*(-#4) _:
#d4 #i is n ev51 s9ce "! is no 9teg}
  .2;k s* t _% #9 .k #2k _:
7777777777777777777777777777777777777777
,def9i;n  #b4e4c 4  ,odd ,9teg}4
  ,a numb} .2;n is sd to 2 ~1odd if x is
n a multiple ( #b4 ,t is1 if "! exi/s an
9teg} .2;k s* t _% n .k #2k+1 _:1 !n
.2;n is odd4
7777777777777777777777777777777777777777
,example  #b4e4d 4

#a4 #g is odd s9ce _% #7 .k #2*3+1 _:
#b4 -#a is odd1 s9ce _% -#1 .k
  #2*(-#1)+1 _:
#c4 #h is n odd1 s9ce "! is no 9teg}
  .2;k s* t _% #8 .k #2k+1 _:
7777777777777777777777777777777777777777
,def9i;n  #b4e4e 4  ,ra;nal ,numb}4
  ,a numb} .2;n is sd to 2 ~1ra;nal if
"! exi/ 9teg}s _% a, b _: ) _% b /.k
#0 _: s* t
_%
n .k  ;a
     ?33#
      ;b
_:
4 ,if a numb} is n ra;nal1 we say t x is
is ~1irra;nal~'4
7777777777777777777777777777777777777777
,example  #b4e4f 4

#a4 #g is ra;nal s9ce
  _%
  #7 .k  #7
        ?33#
         #1
  _:
#b4
  _%
   #1
  ?33#
   #2
  _:
  is ra;nal1 s9ce bo? #a & #b >e 9teg}s

    ,subsec;n #b4e4b ,basic 3cepts (
    pro(
7777777777777777777777777777777777777777
,def9i;n  #b4e4g 4  ,/ate;t ,t}m9ology4

_4 ,a ~1!orem is a /ate;t c 2 %{n to 2
  true4 ,we g5}ally res}ve ! ~w !orem =
  an important /ate;t4
_4 ,a ~1proposi;n is a 8less important0
  !orem4
_4 ,! tools we use to prove a !orem >e
  ~1axioms "<or ~1po/ulates~'"> : >e
  basic assump;ns we make1 z well z o!r
  !orems we've alr prov54
_4 ,a less important !orem t w 2 help;l
  9 prov+ o!rs is call$ a ~1lemma~'4
_4 ,a ~1coroll>y is a !orem t foll{s
  directly f a !orem j prov$4
_4 ,a ~13jecture is a /ate;t t we ?9k
  may 2 true "<|r 9tui;n su7e/s x">
7777777777777777777777777777777777777777
,example  #b4e4h 4
  ,"h's a proposi;n3 8,if .2;n is an odd
9teg}1 !n _% n~2 _: is odd40
  ,? /ate;t m1ns = ! univ}se ( 4c|rse (
all 9teg}s3
_% `&n((n is odd ) $o (n~2" is odd )) _:
7777777777777777777777777777777777777777
,note  #b4e4i 4
  ,! univ}se ( 4c|rse 0 impli$ 9 ! g5}al
/ate;t abv4 ,ma!matical proposi;ns w alm
alw omit ! ~ws 8= all40

    ,subsec;n #b4e4c ,direct ,pro(
  ,a direct pro( is us$ :5 prov+ a
proposi;n ( ! =m _% p $o q _:4 ,! goal
is to %{ .2;q is true :5 we assume .2;p
is true4 ,"h's ! model3
7777777777777777777777777777777777777777
,pro( 4
  ,assume .2;p is true4
  444 use logical equival;es "<&_/or
ma!matics"> 444
  ,"!=e .2;q is true4
7777777777777777777777777777777777777777
,example  #b4e4aj 4
  ,prove t ! sum ( two odd numb}s is
ev54
7777777777777777777777777777777777777777
,example  #b4e4aa 4
  ,prove t if .2;n is ev51 !n _% n~2 _:
is ev54
7777777777777777777777777777777777777777
,example  #b4e4ab 4
  ,prove t if _% m+n _: & _% n+p _: >e
ev5 9teg}s1 !n _% m+p _: is ev54

    ,subsec;n #b4e4d ,9direct ,pro(s
  ,we / want to %{ a /ate;t is true1 b
p}h t's di6icult to approa* directly4
,"! >e s"eal di6}5t 9direct pro(s4 ,!
mo/ frequ5t 9direct approa*es >e pro(s
by 3traposi;n & pro(s by 3tradica;n4

      ,subsubsec;n #b4e4d4a ,pro( by
      ,3traposi;n
  4 ,a pro( by 3traposi;n is a direct
pro( ( _% q $o p _:4 ,"h's ! model3
7777777777777777777777777777777777777777
,pro( 4
  ,assume _% q _: is true4
  444 use logical equival;es "<&_/or
ma!matics"> 444
  ,%{ _% p _: is true4 ,"!=e1 _% p $o
q _: is true by 3traposi;n4
  ,rememb} t _% q $o p _l p $o q _:1 s ?
is a valid >gu;t4
7777777777777777777777777777777777777777
,example  #b4e4ac 4
  ,%{ t if .2;n is an 9teg} &
_% n~3"+5 _: is odd1 !n .2;n is ev54
7777777777777777777777777777777777777777
,example  #b4e4ad 4
  ,prove t if _% n~2 _: is ev51 !n .2;n
is ev54

      ,subsubsec;n #b4e4d4b ,pro( by
      ,3tradic;n
  ,a pro( by 3tradic;n all{s u to prove
a /ate;t .2;p : is n necess>ily 3di;nal4
,we a3ompli% ? by assum+ _% p _: is
true1 & f9d+ a 3tradic;n4 ,? "ws 2c
_% p $o (q`%q) _l p _:
z we %{$ 9 example #b4a4h4 ,"h's !
model3
7777777777777777777777777777777777777777
,pro( 4
  ,assume1 to ! 3tr>y1 t .2;p is false1
t is _% p _: is true4
  444 use logical equival;es "<&_/or
ma!matics"> 444
  ,>rive at a logical 3tradic;n4 ,"s
impossibil;y4 ,"!=e1 .2;p is true by
3tradic;n4
7777777777777777777777777777777777777777
,example  #b4e4ae 4
  ,prove t _% >2} _: is irra;nal

    ,subsec;n #b4e4e ,pro(s ( equival;e
  ,= /ate;ts : >e 8if an only if30 _% p
${33o q _: we ne$ to prove bo? _% p $o
q _: & xs 3v}se _% q $o p _:4
7777777777777777777777777777777777777777
,example  #b4e4af 4
  ,prove t .2;n is ev5 if & only if
_% n~2 _: is ev54
,solu;n 43
  ,we actually did ? 9 ! two previ|s
subsec;ns4 ,! =w>d direc;n #b4e4aa & !
3v}se #b4e4ad4
7777777777777777777777777777777777777777
,example  #b4e4ag 4
  ,prove t .2;n is ev5 if & only if
_% #7n+4 _: is ev54
7777777777777777777777777777777777777777
,example  #b4e4ah 4
  ,prove ! foll{+ >e equival5t3

#a4 _% a "k b _:
#b4 ,! av}age ( .2a & .2;b is grt} ?an
  .2a
#c4 ,! av}age ( .2a & .2;b is less ?an
  .2;b

    ,subsec;n #b4e4f ,pro( by cases
  ,split an >gu;t 9to completely sep>ate
pieces4 ,9 ! example 2l we h two cases4
,ei _% x .1: y _: or _% x "k y _:3
7777777777777777777777777777777777777777
  ,example  #b4e4ai 4
  ,%{ t if .2;x & .2;y >e r1l numb}s1
!n3

_4 max"<_% x, y _:"> "7
  _%
   ;x+y+|x-y|
  ?3333333333#
       #2
  _:
_4 m9"<_% x, y _:"> "7
  _%
   ;x+y-|x-y|
  ?3333333333#
       #2
  _:
7777777777777777777777777777777777777777
  ,note  #b4e4bj 4
  ,we ne$ to prove ea* claim sep>ately =
ea* case6
7777777777777777777777777777777777777777
  ,example  #b4e4ba 4
  ,prove t _% #5x+5y _: is an odd 9teg}
:5 .2;x & .2;y >e 9teg}s ( opposite p>;y
"<n bo? ev51 n bo? odd">4

    ,subsec;n #b4e4g ,exi/;e ,pro(s
  ,! claim ( an exi/;e !orem is t "! is
"s object t has a prop}ty4 ,a
~13/ructive ~1pro( is "o :1 dur+ !
>gu;ta;n1 tells ! r1d} specifically h{
to come up ) ! object 9 "q4 ,a
~1noncon/ructive ~1pro( m}ely 3firms !
exi/;e ( an object1 b doesn't give any
detail z to h{ to f9d x4
7777777777777777777777777777777777777777
,example  #b4e4bb 4
  ,prove t ei _% #2*10~500"+15 _: or
_% #2*10~500"+16 _: is n a p}fect squ>e4
,h9t 43
  ,let me get y />t$ on x1 & we c 4cuss
2l4 ,notice t ! two numb}s >e "o a"p f
ea*o!r4 ,!y're massive1 s we don't
necess>ily "k :e!r !y're squ>e1 b we ne$
only %{ t n m ?an "o ( !m is squ>e4
  ,let's imag9e t ,i h a squ>e numb}1
"nly _% n~2 _:4 ,is x possible t
_% n~2"-1 _: or _% n~2"+1 _: is al a
squ>e numb}8 ,:at 3di;n on .2;n is
requir$8
7777777777777777777777777777777777777777
,example  #b4e4bc 4
  ,%{ t 2t any two ra;nal numb}s is
ano!r ra;nal numb}4
,h9t 43
  ,if we h two ra;nal numb}s _% a_/b _:
& _% c_/d _: ) _% a, b, c, d `e `;,z _:
& _% b, d /.k #0 _:1 !n we c 3/ruct
_%
 ;a+c
?3333#
 ;b+d
_:
4 ,%{ t ? is a ra;nal numb} : is 3ta9$
2t ! two orig9al numb}s4

    ,subsec;n #b4e4h ,unique;s pro(s
  ,! claim ( a unique;s !orem is t "!
exi/s an ele;t t has a desir$ prop}ty1 &
t no o!r ele;t has ? prop}ty4 ,! |tl9e (
|r pro( is (t53

_4 ,prove ! exi/;e ( .2;x1 "s ele;t t
  has ! prop}ty we want4
_4 ,assume t a second ele;t1 .2;y al has
  t prop}ty4
_4 ,3clude t _% x .k y _:
7777777777777777777777777777777777777777
,example  #b4e4bd 4
  ,%{ t if _% a, b, c _: >e r1l numb}s )
_% a /.k #0 _:1 !n "! is a unique solu;n
to ! algebraic equa;n _% ax+b .k c _:4
,h9t 43
  ,y "k h{ to solve an algebraic equa;n4
,n{ assume "!'s a second solu;n4 ,%{ t !
two solu;ns >e equal4
7777777777777777777777777777777777777777
,example  #b4e4be 4
  ,%{ t if .2;n is an odd 9teg}1 !n "!
exi/s a unique 9teg} .2;k s* t _% n .k
(k-2)+(k+3) _:
,h9t 43
  ,simil> to abv1 %{ t .2;k satifies ?
equa;n1 & !n %{ t if y h ano!r numb}1
say .2;l t al does1 x m/ 2 ! case t _% k
.k l _:4

    ,subsec;n #b4e4i ,vacu|s & ,trivial
    ,pro(s
7777777777777777777777777777777777777777
,def9i;n  #b4e4bf 4  ,vacu|s ,/ate;ts4
  ,a ~1vacu|s ~1/ate;t is "o t is true
2c ! hypo!sis is false4 ,y c 8prove0 a
/ate;t is true immly4
7777777777777777777777777777777777777777
  ,example  #b4e4bg 4
  ,if ,i play 9 ! ,sup} ,b{l1 ,i w ?r{ !
game w9n+ t|*d{n4
,solu;n 43
  ,s9ce ,i won't "e play 9 ! ,sup} ,b{l1
x doesn't matt} :at ! tru? value ( !
t|*d{n /ate;t is4 _% ,f $o ,t _l ,t _: &
_% ,f $o ,f _l ,t _: j ! same4
7777777777777777777777777777777777777777
,def9i;n  #b4e4bh 4  ,trivial ,/ate;ts4
  ,if we "k t ! 3clu.n ( a /ate;t is
true1 !n ! /ate;t has a ~1trivial pro(4
7777777777777777777777777777777777777777
  ,example  #b4e4bi 4
  ,let _% ,p(x) _: 2 ! /ate;t 8,if _% x
`e `;,r _: & _% x .1 #0 _: 1 !n
_% x~2"+1 .1: #0 _:04
,solu;n 43
  ,s9ce we "k t _% x~2 .1: #0 _: = any
r1l numb}1 _% x~2"+1 .1: x~2 .1: #0 _:4
,we didn't ne$ ! hypo!sis _% x .1 #0 _:4
,? is a trivial pro(4

    ,subsec;n #b4e4aj ,c.t}examples
    ,revisit$
  ,recall 9 ma? proposi;ns1 ! univ}sal
quantifi} is impli$ & is usually omitt$4
 ,to %{ a /ate;t is false1 we ne$ only
f9d a s+le c.t}example4
7777777777777777777777777777777777777777
,example  #b4e4cj 4
  ,ea* ( ! foll{+ /ate;ts is false4 ,f9d
a specific c.t}example & expla9 :y !
/ate;t is false4

#a4 ,if .2;n is a r1l numb}1 !n
  _% (n+4)~2 .k n~2"+16 _:4
#b4 ,e 9teg} is ! sum ( ! squ>es ( two
  9teg}s4
#c4 _% `&x`&y(x~2 .k y~2 $o x .k y) _:
  ": ! doma9 ( all v>iables is ! set (
  all 9teg}s4
#d4 ,! product ( two irra;nal numb}s is
  irra;nal4
#e4 ,! sum ( two irra;nal numb}s is
  irra;nal4
,solu;n 43

#a4 ,= example1 _% n .k #1 _: "ws1 s9ce
  _% (1+4)~2 .k #25 /.k #17 .k #1+16 _:4
#b4 ,! numb} #g isn't ! sum ( two
  squ>es4 ,! only squ>es small} ?an #g
  >e #a & #d4 ,!y don't add to #g4
#c4 ,*oos+ _% x .k -#1 and y.k.k1 _: we
  h _% (-1)~2 .k (1)~2 _: b c}ta9ly
  _% -#1 /.k #1 _:4
#d4 ,we "k "<f abv"> t _% >2} _: is
  irra;nal4 ,multiply x by xf4 ,y get
  _% #2 _: : is ra;nal4
#e4 ,3sid} _% a .k >2} _: & _% b .k
  ->2} _:4 ,!n _! sum1 _% a+b .k #0 _:1
  : is ra;nal4
,ex}cises #b4e4aa ,ex}cises #a 4
  ,3sid} ! /ate;t 8= all 9teg}s .2a &
.2;b1 if _% a+b _: is ev51 !n .2a & .2;b
>e ev50

a4 ,write ! 3trapositive ( ! /ate;t4
;b4 ,write ! 3v}se ( ! /ate;t4
;c4 ,write ! nega;n ( ! /ate;t4
;d4 ,is ! orig9al /ate;t true or false8
  ,prove yr answ}4
;e4 ,is ! 3trapositive ( ! orig9al
  /ate;t true or false8 ,prove yr answ}4
;f4 ,is ! 3v}se ( ! orig9al /ate;t true
  or false8 ,prove yr answ}4
;g4 ,is ! nega;n ( ! orig9al /ate;t true
  or false8 ,prove yr answ}4
,solu;n 43

a4 ,= all 9teg}s .2a & .2;b1 if .2a or
  .2;b is n ev51 !n _% a+b _: is n ev54
;b4 ,= all 9teg}s .2a & .2;b1 if .2a &
  .2;b >e ev51 !n _% a+b _: is ev54
;c4 ,"! >e numb}s .2a & .2;b s* t
  _% a+b _: is ev5 b .2a & .2;b >e n bo?
  ev54
;d4 ,false4 ,= example1 _% a .k #3 _: &
  _% b .k #5 _:4 _% a+b .k #8 _:1 b nei
  .2a nor .2;b >e ev54
;e4 ,false1 s9ce x is equival5t to !
  orig9al /ate;t4
;f4 ,true4 ,let .2a & .2;b 2 9teg}s4
  ,assume bo? >e ev54 ,!n _% a .k #2k _:
  & _% b .k #2j _: = "s 9teg}s .2;k &
  .2;j4 ,b !n _% a+b .k #2k+2j .k
  #2(k+j) _: : is ev54
;g4 ,true1 s9ce ! /ate;t is false4
#b 4
  ,3sid} ! /ate;t3 = all 9teg}s .2;n1 if
.2;n is ev5 !n _% #8n _: is ev54

a4 ,prove ! /ate;t4 ,:at sort ( pro( >e
  y us+8
;b4 ,is ! 3v}se true8 ,prove or 4prove4
,solu;n 43

a4 ,direct pro(4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is ev54 ,!n _% n .k #2k _: = "s 9teg}
  .2;k4 ,?us _% #8n .k #16k .k
  #2(8k) _:4 ,"!=e _% #8n _: is ev54
;b4 ,! 3v}se is false4 ,t is1 "! is an
  9teg} .2;n s* t _% #8n _: is ev5 b
  .2;n is odd4 ,= example1 3sid} _% n .k
  #3 _:4 ,!n _% #8n .k #24 _: : is ev5 b
  _% n .k #3 _: is odd4
#c 4
  ,yr 8fr0 has %{n y a 8pro(0 he wrote
to %{ t _% #1 .k #3 _:4 ,"h is ! pro(3
7777777777777777777777777777777777777777
,pro( 4
  ,i claim t _% #1 .k #3 _:4 ,( c|rse we
c d any?+ to "o side ( an equa;n z l;g z
we al d x to ! o!r side4 ,s subtract #b
f bo? sides4 ,? gives _% -#1 .k #1 _:4
,n{ squ>e bo? sides1 to get _% #1 .k
#1 _:4 ,& we all agree ? is true4
  ,:at is go+ on "h8 ,is yr fr's >gu;t
valid8 ,is ! >gu;t a pro( ( ! claim
_% #1 .k #3 _:;8 ,c>e;lly expla9 us+ :at
we "k ab logic4
,h9t 43
  ,h9t3 ,:at implica;n foll{s f ! giv5
pro(8
#d 4
  ,suppose t y wd l to prove ! foll{+
implica;n3
  ,= all numb}s .2;n1 if .2;n is prime
!n .2;n is solit>y4
  ,write | ! 2g9n+ & 5d ( ! >gu;t if y 7
to prove ! /ate;t1

a4 ,directly
;b4 ,by 3trapositive
;c4 ,by 3tradic;n
  ,y d n ne$ to provide details = !
pro(s "<s9ce y d n "k :at solit>y
m1ns">4 ,h{"e1 make sure t y provide !
f/ few & la/ few l9es ( ! pro(s s t we c
see t logical /ructure y wd foll{4
,solu;n 43

a4 ,assume t .2;n is a prime numb}4 _%
  ''' _: ,"!=e .2;n is solit>y4
;b4 ,assume t .2;n is n solit>y4 _%
  ''' _: ,"!=e .2;n is a prime numb} by
  3traposi;n4
;c4 ,assume t .2;n is a prime numb} & is
  n solit>y4 _%  ''' _: ,? 3tradicts |r
  assump;n4 ,?us if .2;n is a prime
  numb}1 .2;n is solit>y4
#e 4
  ,= ea* ( ! /ate;ts 2l1 say :at me?od (
pro( y %d use to prove !m4 ,!n say h{ !
pro( />ts & h{ x 5ds4 ,pret5d bonus
po9ts = fill+ 9 ! middle4

a4 ,"! >e no 9teg}s .2;x & .2;y s* t
  .2;x is a prime grt} ?an #e & _% x .k
  #6y+3 _:4
;b4 ,= all 9teg}s .2;n1 if .2;n is a
  multiple ( #c1 !n .2;n c 2 writt5 z !
  sum ( 3secutive 9teg}s4
;c4 ,= all 9teg}s .2a & .2;b1 if
  _% a~2"+b~2 _: is odd1 !n .2a or .2;b
  is odd4
,solu;n 43

a4 ,pro( by 3tradic;n4 ,/>t ( pro(3
  ,assume1 = ! sake ( 3tradic;n1 t "! >e
  9teg}s .2;x & .2;y s* t .2;x is a
  prime grt} ?an #e & _% x .k #6y+3 _:4
  ,5d ( pro(3 444 ? is a 3tradic;n1 s "!
  >e no s* 9teg}s4
;b4 ,direct pro(4 ,/>t ( pro(3 ,let .2;n
  2 an 9teg}4 ,assume .2;n is a multiple
  ( #c4 ,5d ( pro(3 ,"!=e .2;n c 2
  writt5 z ! sum ( 3secutive 9teg}s4
;c4 ,pro( by 3trapositive4 ,/>t ( pro(3
  ,let .2a & .2;b 2 9teg}s4 ,assume t
  .2a & .2;b >e ev54 ,5d ( pro(3 ,"!=e
  _% a~2"+b~2 _: is ev54
#f 4
  ,prove t if _% n~2 _: is multiple (
?ree1 !n .2;n is a multiple ( ?ree ":
.2;n is an 9teg}4
,h9t 43
  ,if a numb} isn't a multiple ( ?ree1
!n x's ei #a m ?an a multiple ( ?ree or
#b m ?an a multiple ( ?ree1 t is1 y'll h
two cases1 ei _% n .k #3k+1 _: or
_% #3k+2 _:4
,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  ,pro( by 3traposi;n3 ,assume t .2;n is
n a multiple ( ?ree4 ,!n3
  ,case #a3 ,"! exi/s an 9teg} .2;k s* t
_% n .k #3k+1 _:4 ,3sid}3
_%
n~2"              .k (3k+1)~2"
.k #9k~2"+6k+1
.k #3(3k~2"+2k)+1
_:
,h;e _% n~2 _: is n a mulitple ( ?ree4
  ,case #a3 ,"! exi/s an 9teg} .2;l s* t
_% n .k #3l+2 _:4 ,3sid}3
_%
n~2"                .k (3l+2)~2"
.k #9l~2"+12l+4
.k #9l~2"+12l+3+1
.k #3(3l~2"+4l+1)+1
_:
,h;e _% n~2 _: is n a mulitple ( ?ree4
  ,?us1 we h prov5 t if _% n~2 _: is a
multiple ( ?ree1 !n .2;n is a multiple (
?ree by 3traposi;n4
#g 4
  ,prove t _% >3} _: is irra;nal4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,suppose _% >3} _: 7 ra;nal4 ,!n
_%
>3} .k  ;a
       ?33#
        ;b
_:
= "s 9teg}s .2a & _% b /.k #0 _:4 ,)|t
loss ( g5}al;y1 assume
_%
 ;a
?33#
 ;b
_:
is r$uc$4 ,n{
_%
#3 .k  ;a~2"
      ?33333#
       ;b~2"
_:
_% #3b~2 .k a~2 _:
  ,s _% a~2 _: is a multiple ( #c4 ,? c
only happ5 if .2a is a multiple ( #c1 s
_% a .k #3k _: = "s 9teg} .2;k4 ,!n we h
_% #3b~2 .k #9k~2 _:
_% b~2 .k #3k~2 _:
  ,s _% b~2 _: is a multiple ( #c1 mak+
.2;b a multiple ( #c z well4 ,b ?
3tradicts |r assump;n t
_%
 ;a
?33#
 ;b
_:
is 9 l{e/ t}ms4
  ,"!=e1 _% >3} _: is irra;nal4
#h 4
  ,3sid} ! /ate;t3 = all 9teg}s .2a &
.2;b1 if .2a is ev5 & .2;b is a multiple
( #c1 !n _% ab _: is a multiple ( #f4

a4 ,prove ! /ate;t4 ,:at sort ( pro( >e
  y us+8
;b4 ,/ate ! 3v}se4 ,is x true8 ,prove or
  4prove4
,solu;n 43

a4
7777777777777777777777777777777777777777
,pro( 4
    "<? is a direct pro(">3 ,assume t
  .2a is ev5 .2;b is a multiple ( ?ree4
  ,!n "! exi/ 9teg}s .2;k & .2;l s* t
  _% a .k #2k _: & _% b .k #3l _:4 ,!n
  _% ab .k (2k)(3l) .k #6kl _:4 ,?us
  _% ab _: is a multiple ( six4
;b4 ,! 3v}se is 8,if _% ab _: is a
  multiple ( six1 !n .2a is ev5 & .2;b
  is a multiple ( ?ree40
    ,? is false4 ,= example1 _% ab .k
  #6 _: ": _% a .k #6 _: & _% b .k
  #1 _:4
#i 4
  ,prove ! /ate;t3 ,= all 9teg}s .2;n1
if _% #5n _: is odd1 !n .2;n is odd4
,cle>ly /ate ! /yle ( pro( y >e us+4
,solu;n 43
  ,we w prove ! 3trapositive3 if .2;n is
ev51 !n _% #5n _: is ev54
7777777777777777777777777777777777777777
,pro( 4
  ,let .2;n 2 an >bitr>y 9teg}1 &
suppose .2;n is ev54 ,!n _% n .k #2k _:
= "s 9teg} .2;k4 ,?us _% #5n .k #5*2k .k
#10k .k #2(5k) _:4 ,s9ce _% #5k _: is an
9teg}1 we see t _% #5n _: m/ 2 ev54 ,?
completes ! pro(4
#aj 4
  ,prove3 _% x .k y _: if & only if
_%
xy .k  (x+y)~2"
      ?33333333#
          #4
_:
4 ,note1 y w ne$ to prove two 8direc;ns0
"h3 ! 8if0 & ! 8only if0 "p4
,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  8_% $o _:0 ,assume t _% x .k y _:1 &
3sid}3
_%
 (x+y)~2"    .k  (x+x)~2"
?33333333#      ?33333333#
    #4              #4

.k  (2x)~2"
   ?3333333#
      #4

.k x~2"

.k xy
_:
,? %{s t if _% x .k y _: !n
_%
xy .k  (x+y)~2"
      ?33333333#
          #4
_:
4
  8_% ${33 _:0 ,assume t
_%
 (x+y)~2"  .k xy
?33333333#
    #4
_:
,!n3
_%
 (x+y)~2"     .k xy
?33333333#
    #4

(x+y)~2"      .k #4xy

x~2"+2xy+y~2" .k #4xy

x~2"-2xy+y~2" .k #0

(x-y)~2"      .k #0

x             .k y
_:
,? %{s t if
_%
xy .k  (x+y)~2"
      ?33333333#
          #4
_:
1 !n _% x .k y _:4
#aa 4
  ,prove t _% log (7) _: is irra;nal4
,solu;n 43
  ,we give a pro( by 3tradic;n4
7777777777777777777777777777777777777777
,pro( 4
  ,suppose1 3tr>y to /ipula;n t _% log
(7) _: is ra;nal4 ,!n
_%
log (7) .k  ;a
           ?33#
            ;b
_:
) .2a & _% b /.k #0 _: 9teg}s4 ,by
prop}ties ( log>i?ms1 ? implies
_%
#7 .k #10~ ;a
          ?33#
           ;b
_:
  ,equival5tly1
_% #7~b .k #10~a _:
  ,b ? is impossible z any p{} ( #g w 2
odd :ile any p{} ( #aj w 2 ev54  ,"!=e1
_% log (7) _: is irra;nal4
#ab 4
  ,let's say y >e pres5t$ ) a 3di;nal
/ate;t _% p $o q _: t y want to prove by
3tradic;n4 ,? ex}cise has y /ructure a
model = 3tradic;n ( 3di;nal /ate;ts l we
saw 9 ! model #b4e4d4b4a4

a4 ,:at is yr assump;n8
;b4 ,:at is yr 3clu.n8
,solu;n 43

a4 ,assume1 to ! 3tr>y t _% p $o q _: is
  false1 t is1 we assume t _% p $o q _:
  or _% p`%q _:4
;b4 ,"!=e1 _% p $o q _: is true by
  3tradic;n4
#ac 4
  ,prove t = all 9teg}s .2a1 .2;b1 &
.2;c1 if _% a~2"+b~2 .k c~2 _:1 !n .2a
or .2;b is ev54
,h9t 43
  ,try a pro( by 3tradic;n4
,solu;n 43
  ,! nega;n ( ! /ate;t is _% a~2"+b~2 .k
c~2 _: & bo? .2a & .2;b >e odd4
7777777777777777777777777777777777777777
,pro( 4
  ,assume t .2a & .2;b >e bo? odd & t
_% a~2"+b~2 .k c~2 _:4 ,!n "! exi/
9teg}s .2;k & .2;l s* t _% a .k #2k+1 _:
& _% b .k #2k+1 _:4
  ,f/1 we obs}ve t
_%
a~2"+b~2"                 .k (2k+1)~2"+-
(2l+1)~2"
.k #4k~2"+4k+1+4l~2"+4l+1
.k #4k~2"+4k+4l~2"+4l+2
_:
s t _% c~2 _: & h;e .2;c is ev54  ,let
_% c .k #2m _: ": .2;m is "s 9teg}4 ,!n3
_%
c~2"    .k a~2"+b~2"
(2k)~2" .k #4k~2"+4k+4l~2"+4l+2
#4k~2"  .k #4(k~2"+k+l~2"+l)+2
_:
,? is a 3tradic;n z we h a multiple (
f|r 2+ equal to "s?+ : is n a multiple (
f|r4  ,?us1 |r orig9al assump;n 0
9correct & "!=e if _% a~2"+b~2 .k
c~2 _:1 we 3clude t "o ( .2a or .2;b is
ev54
#ad 4
  ,prove t "! >e no 9teg} solu;ns to !
equa;n _% x~2 .k #4y+3 _:4
,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  ,assume1 to ! 3tr>y1 t "! is an 9teg}
solu;n1 _% (a, b) _:1 to ! equa;n _% x~2
.k #4y+3 _: ,we'll split ? 9to f|r
cases3
  ,case #a3 .2;x is odd & .2;y is ev54
,!n "! exi/ 9teg}s .2;k & .2;l s* t _% x
.k #2k+1 _: & _% y .k #2l _:4 ,plu7+ ?
9to ! equa;n1 we h3
_%
x~2"          .k #4y+3
(2k+1)~2"     .k #4(2l)+3
#4k~2"+4k+1   .k #8l+3
#4k~2"+4k-8l  .k #2
#4(k~2"+k-2l) .k #2
_:
,? is n possible1 z #b is n a multiple (
#d4
  ,case #b3 .2;x is ev5 & .2;y is odd4
,!n "! exi/ 9teg}s .2;k & .2;l s* t _% x
.k #2k _: & _% y .k #2l+1 _:4 ,plu7+ ?
9to ! equa;n1 we h3
_%
x~2"        .k #4y+3
(2k)~2"     .k #4(2l+1)+3
#4k~2"      .k #8l+4+3
#4k~2"-8l   .k #7
#4(k~2"-2l) .k #7
_:
,? is n possible1 z #g is n a multiple (
#d4
  ,case #c3 .2;x & .2;y >e bo? ev54 ,!n
"! exi/ 9teg}s .2;k & .2;l s* t _% x .k
#2k _: & _% y .k #2l _:4 ,plu7+ ? 9to !
equa;n1 we h3
_%
x~2"        .k #4y+3
(2k)~2"     .k #4(2l)+3
#4k~2"      .k #8l+3
#4k~2"-8l   .k #3
#4(k~2"-2l) .k #3
_:
,? is n possible1 z #c is n a multiple (
#d4
  ,case #d3 .2;x & .2;y >e bo? odd4 ,!n
"! exi/ 9teg}s .2;k & .2;l s* t _% x .k
#2k _: & _% y .k #2l _:4 ,plu7+ ? 9to !
equa;n1 we h3
_%
x~2"          .k #4y+3
(2k+1)~2"     .k #4(2l+1)+3
#4k~2"+4k+1   .k #8l+4+3
#4k~2"+4k-8l  .k #6
#4(k~2"+k-2l) .k #6
_:
,? is al n possible1 z #f is n a
multiple ( #d4
,s9ce we've exhau/$ e possible comb9a;n
( 9teg} solu;ns1 we 3clude t "! is no
9teg} solu;n to ! equa;n _% x~2 .k
#4y+3 _:4

       ,sec;n #b4f ,*apt} ,review
  ,? sec;n 9cludes addi;nal practice
problems = ! *apt} on proposi;nal logic4
,ex}cises ,ex}cises #a 4
  ,complete a tru? table = ! /ate;t _% p
$o (q`%r) _:4
,solu;n 43
.2;p2 .2;q2 .2;r2 _% p $o (q`%r) _:4
;,,,t2 ;t2 ;t2 ;t4,'
;,,,t2 ;t2 ;f2 ;t4,'
;,,,t2 ;f2 ;t2 ;t4,'
;,,,t2 ;f2 ;f2 ;t4,'
;,,,f2 ;t2 ;t2 ;t4,'
;,,,f2 ;t2 ;f2 ;f4,'
;,,,f2 ;f2 ;t2 ;f4,'
;,,,f2 ;f2 ;f2 ;f4,'
#b 4
  ,suppose y "k t ! /ate;t 8if ,pet} is
n tall1 !n ,qu9cy is fat & ,rob}t is
sk9ny0 is false4 ,:at1 if any?+1 c y
3clude ab ,pet} & ,rob}t if y "k t
,qu9cy is 9de$ fat8 ,expla9 "<y may
ref};e problem #b4f4a">4
,solu;n 43
  ,pet} is n tall & ,rob}t is n sk9ny4
,y m/ 2 9 r{ #f 9 ! tru? table abv4
#c 4
  ,>e ! /ate;ts _% p $o (q`+r) _: &
_% (p $o q)`+(p $o r) _: logically
equival5t8 ,expla9 yr answ}4
,solu;n 43
  ,yes4 ,to see ?1 make a tru? table =
ea* /ate;t & comp>e4
#d 4
  ,is ! foll{+ a valid d$uc;n rule8
,expla94
2 _% p $o q _:4
2 _% p $o r _:4
_% ,* _:2 _% p $o (q`%r) _:44
,solu;n 43
  ,make a tru? table t 9cludes all ?ree
/ate;ts 9 ! >gu;t3
.2;p2 .2;q2 .2;r2 _% p $o q _:2 _% p $o
  r _:2 _% p $o (q`%r) _:4
;,,,t2 ;t2 ;t2 ;t2 ;t2 ;t4,'
;,,,t2 ;t2 ;f2 ;t2 ;f2 ;f4,'
;,,,t2 ;f2 ;t2 ;f2 ;t2 ;f4,'
;,,,t2 ;f2 ;f2 ;f2 ;f2 ;f4,'
;,,,f2 ;t2 ;t2 ;t2 ;t2 ;t4,'
;,,,f2 ;t2 ;f2 ;t2 ;t2 ;t4,'
;,,,f2 ;f2 ;t2 ;t2 ;t2 ;t4,'
;,,,f2 ;f2 ;f2 ;t2 ;t2 ;t4,'
  ,notice t 9 e r{ = : bo? _% p $o q _:
& _% p $o r _: is true1 s is _% p $o
(q`%r) _:4 ,"!=e1 :5"e ! premises ( !
>gu;t >e true1 s is ! 3clu.n4 ,9 o!r
~ws1 ! d$uc;n rule is valid4
#e 4
  ,write ! nega;n1 3v}se & 3trapositive
= ea* ( ! /ate;ts 2l4

a4 ,if ! p{} goes (f1 !n ! food w spoil4
;b4 ,if ! door is clos$1 !n ! li<t is
  (f4
;c4 _% `&x(x "k #1 $o x~2 "k #1) _:4
;d4 ,= all natural numb}s .2;n1 if .2;n
  is prime1 !n .2;n is solit>y4
;e4 ,= all func;ns .2;f1 if .2;f is
  di6}5tiable1 !n .2;f is 3t9u|s4
;f4 ,= all 9teg}s .2a & .2;b1 if
  _% a*b _: is ev51 !n .2a & .2;b >e
  ev54
;g4 ,= e 9teg} .2;x & e 9teg} .2;y "! is
  an 9teg} .2;n s* t if _% x .1 #0 _: !n
  _% nx .1 y _:4
;h4 ,= all r1l numb}s .2;x & .2;y1 if
  _% xy .k #0 _: !n _% x .k #0 _: or
  _% y .k #0 _:4
i4 ,= e /ud5t 9 ,ma? #cba1 if !y d n
  "u/& implica;ns1 !n !y w fail ! exam4
,solu;n 43

a4 ,nega;n3 ,! p{} goes (f & ! food does
  n spoil4
    ,3v}se3 ,if ! food spoils1 !n ! p{}
  w5t (f4
    ,3trapositive3 ,if ! food does n
  spoil1 !n ! p{} did n g (f4
;b4 ,nega;n3 ,! door is clos$ & ! li<t
  is on4
    ,3v}se3 ,if ! li<t is (f !n ! door
  is clos$4
    ,3trapositive3 ,if ! li<t is on !n !
  door is op54
;c4 ,nega;n3 _% `=x(x "k #1`%x~2" .1:
  #1) _:
    ,3v}se3 _% `&x(x~2 "k #1 $o x "k
  #1) _:
    ,3trapositive3 _% `&x(x~2 .1: #1 $o
  x .1: #1) _:4
;d4 ,nega;n3 ,"! is a natural numb} .2;n
  : is prime b n solit>y4
    ,3v}se3 ,= all natural numb}s .2;n1
  if .2;n is solit>y1 !n .2;n is prime4
    ,3trapositive3 ,= all natural numb}s
  .2;n1 if .2;n is n solit>y !n .2;n is
  n prime4
;e4 ,nega;n3 ,"! is a func;n : is
  di6}5tiable & n 3t9u|s4
    ,3v}se3 ,= all func;ns .2;f1 if .2;f
  is 3t9u|s !n .2;f is di6}5tiable4
    ,3trapositive3 ,= all func;ns .2;f1
  if .2;f is n 3t9u|s !n .2;f is n
  di6}5tiable4
;f4 ,nega;n3 ,"! >e 9teg}s .2a & .2;b =
  : _% a*b _: is ev5 b .2a or .2;b is
  odd4
    ,3v}se3 ,= all 9teg}s .2a & .2;b1 if
  .2a & .2;b >e ev5 !n _% ab _: is ev54
    ,3trapositive3 ,= all 9teg}s .2a &
  .2;b1 if .2a or .2;b is odd1 !n
  _% ab _: is odd4
;g4 ,nega;n3 ,"! >e 9teg}s .2;x & .2;y
  s* t = e 9teg} .2;n1 _% x .1 #0 _: &
  _% nx "k: y _:4
    ,3v}se3 ,= e 9teg} .2;x & e 9teg}
  .2;y "! is an 9teg} .2;n s* t if _% nx
  .1 y _: !n _% x .1 #0 _:4
    ,3trapositive3 ,= e 9teg} .2;x & e
  9teg} .2;y "! is an 9teg} .2;n s* t if
  _% nx "k: y _: !n _% x "k: #0 _:4
;h4 ,nega;n3 ,"! >e r1l numb}s .2;x &
  .2;y s* t _% xy .k #0 _: b _% x /.k
  #0 _: & _% y /.k #0 _:4
    ,3v}se3 ,= all r1l numb}s .2;x &
  .2;y1 if _% x .k #0 _: or _% y .k
  #0 _: !n _% xy .k #0 _:
    ,3trapositive3 ,= all r1l numb}s
  .2;x & .2;y1 if _% x /.k #0 _: & _% y
  /.k #0 _: !n _% xy /.k #0 _:4
i4 ,nega;n3 ,"! is at l1/ "o /ud5t 9
  ,ma? #bbh :o does n "u/& implica;ns b
  w / pass ! exam4
    ,3v}se3 ,= e /ud5t 9 ,ma? #bbh1 if
  !y fail ! exam1 !n !y did n "u/&
  implica;ns4
    ,3trapositive3 ,= e /ud5t 9 ,ma?
  #bbh1 if !y pass ! exam1 !n !y "u/ood
  implica;ns4
#f 4
  ,3sid} ! /ate;t3 = all 9teg}s .2;n1 if
.2;n is ev5 & _% n "k: #7 _: !n .2;n is
negative or _% n `e .(0, 2, 4, 6.) _:4

a4 ,is ! /ate;t true8 ,expla9 :y4
;b4 ,write ! nega;n ( ! /ate;t4 ,is x
  true8 ,expla94
;c4 ,/ate ! 3trapositive ( ! /ate;t4 ,is
  x true8 ,expla94
;d4 ,/ate ! 3v}se ( ! /ate;t4 ,is x
  true8 ,expla94
,solu;n 43

a4 ,! /ate;t is true4 ,if .2;n is an ev5
  9teg} less ?an or equal to #g1 !n !
  only way x cd n 2 negative is if .2;n
  0 equal to #j1 #b1 #d1 or #f4
;b4 ,"! is an 9teg} .2;n s* t .2;n is
  ev5 & _% n "k: #7 _: b .2;n is n
  negative & _% n /`e .(0, 2, 4, 6.) _:4
  ,? is false1 s9ce ! orig9al /ate;t is
  true4
;c4 ,= all 9teg}s .2;n1 if .2;n is n
  negative & _% n /`e .(0, 2, 4, 6.) _:
  !n .2;n is odd or _% n .1 #7 _:4 ,? is
  true1 s9ce ! 3trapositive is equival5t
  to ! orig9al /ate;t "<: is true">4
;d4 ,= all 9teg}s .2;n1 if .2;n is
  negative or _% n `e .(0, 2, 4, 6.) _:
  !n .2;n is ev5 & _% n "k: #7 _:4 ,? is
  false4 _% n .k -#3 _: is a
  c.t}example4
#g 4
  ,3sid} ! /ate;t3 _% `&x(`&y(x+y .k y)
$o `&z(x*z .k #0)) _:4

a4 ,expla9 :at ! /ate;t says 9 ~ws4 ,is
  ? /ate;t true8 ,2 sure to /ate :at y
  >e tak+ ! univ}se ( 4c|rse to be4
;b4 ,write ! 3v}se ( ! /ate;t1 bo? 9 ~ws
  & 9 symbols4 ,is ! 3v}se true8
;c4 ,write ! 3trapositive ( ! /ate;t1
  bo? 9 ~ws & 9 symbols4 ,is !
  3trapositive true8
;d4 ,write ! nega;n ( ! /ate;t1 bo? 9
  ~ws & 9 symbols4 ,is ! nega;n true8
,solu;n 43

a4 ,= any numb} .2;x1 if x is ! case t
  add+ any numb} to .2;x gives t numb}
  back1 !n multiply+ any numb} by .2;x w
  give #j4 ,? is true "<( ! 9teg}s or !
  r1ls">4 ,! 8if0 "p only holds if _% x
  .k #0 _:1 & 9 t case1 any?+ "ts .2;x w
  2 #j4
;b4 ,! 3v}se 9 ~ws is ?3 = any numb}
  .2;x1 if "ey?+ "ts .2;x is z}o1 !n
  "ey?+ add$ to .2;x gives xf4 ,or 9
  symbols3 _% `&x(`&z(x*z .k #0) $o
  `&y(x+y .k y)) _:4 ,! 3v}se is true3 !
  only numb} : :5 multipli$ by any o!r
  numb} gives #j is _% x .k #0 _:4 ,& if
  _% x .k #0 _:1 !n _% x+y .k y _:4
;c4 ,! 3trapositive 9 ~ws is3 = any
  numb} .2;x1 if "! is "s numb} : :5
  multipli$ by .2;x does n give z}o1 !n
  "! is "s numb} : :5 add$ to .2;x does
  n give t numb}4 ,9 symbols3
  _% `&x(`=z(x*z /.k #0) $o `=y(x+y /.k
  y)) _:4 ,we "k ! 3trapositive m/ 2
  true 2c ! orig9al implica;n is true4
;d4 ,! nega;n3 "! is a numb} .2;x s* t
  any numb} add$ to .2;x gives ! numb}
  back ag1 b "! is a numb} y c multiply
  .2;x by & n get #j4 ,9 symbols3
  _% `=x(`&y(x+y .k y)`%`=z(x*z /.k
  #0)) _:4 ,( c|rse s9ce ! orig9al
  implica;n is true1 ! nega;n is false4
#h 4
  ,write ea* ( ! foll{+ /ate;ts 9 ! =m1
8if 4441 !n 44440 ,c>e;l1 "s ( ! /ate;ts
mi<t 2 false "<: is al"r = ! purposes (
? "q">4

a4 ,to lose wei<t1 y m/ ex}cise4
;b4 ,to lose wei<t1 all y ne$ to d is
  ex}cise4
;c4 ,e ,am}ican is patriotic4
;d4 ,y >e patriotic only if y >e
  ,am}ican4
;e4 ,! set ( ra;nal numb}s is a subset (
  ! r1l numb}s4
;f4 ,a numb} is prime if x is n ev54
;g4 ,ei ! ,broncos w w9 ! ,sup} ,b{l1 or
  !y won't play 9 ! ,sup} ,b{l4
,solu;n 43

a4 ,if y h lo/ wei<t1 !n y ex}cis$4
;b4 ,if y ex}cise1 !n y w lose wei<t4
;c4 ,if y >e ,am}ican1 !n y >e
  patriotic4
;d4 ,if y >e patriotic1 !n y >e
  ,am}ican4
;e4 ,if a numb} is ra;nal1 !n x is r1l4
;f4 ,if a numb} is n ev51 !n x is prime4
  "<,or ! 3trapositive3 if a numb} is n
  prime1 !n x is ev54">
;g4 ,if ! ,broncos don't w9 ! ,sup}
  ,b{l1 !n !y didn't play 9 ! ,sup}
  ,b{l4 ,alt}natively1 if ! ,broncos
  play 9 ! ,sup} ,b{l1 !n !y w w9 !
  ,sup} ,b{l4
#i 4
  ,simplify ! foll{+4

a4 _% ((p`%q) $o (r`+(p $o r))) _:4
;b4 _% `=x`&y`=z(z .k x+y $o `=w(x-y .k
  w)) _:4
,solu;n 43

a4 _% (p`+q)`%(r`+(p`%r)) _:4
;b4 _% `&x`&y`&z(z .k x+y`%`&w(x-y /.k
  w)) _:4
#aj 4
  ,3sid} ! /ate;t3 = all 9teg}s .2;n1 if
.2;n is odd1 !n _% #7n _: is odd4

a4 ,prove ! /ate;t4 ,:at sort ( pro( >e
  y us+8
;b4 ,prove ! 3v}se4 ,:at sort ( pro( >e
  y us+8
,solu;n 43

a4 ,direct pro(4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is odd4 ,s _% n .k #2k+1 _: = "s 9teg}
  .2;k4 ,!n
  _% #7n .k #7(2k+1) .k #14k+7 .k
  #2(7k+3)+1. _:
    ,s9ce _% #7k+3 _: is an 9teg}1 we
  see t _% #7n _: is odd4
;b4 ,! 3v}se is3 = all 9teg}s .2;n1 if
  _% #7n _: is odd1 !n .2;n is odd4 ,we
  w prove ? by 3trapositive4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is n odd4 ,!n _% n .k #2k _: = "s
  9teg} .2;k4 ,s _% #7n .k #14k .k
  #2(7k) _: : is to say _% #7n _: is
  ev54 ,"!=e _% #7n _: is n odd4
#aa 4
  ,y come acr f|r trolls play+ bridge4
,!y dcl3
  ,troll #a3 ,all trolls "h see at l1/
"o knave4
  ,troll #b3 ,i see at l1/ "o troll t
sees only knaves4
  ,troll #c3 ,"s trolls >e sc>$ ( goats4
  ,troll #d3 ,all trolls >e sc>$ (
goats4
  ,>e "! any trolls t >e n sc>$ ( goats8
 ,recall1 ( c|rse1 t all trolls >e ei
kni<ts "<:o alw tell ! tru?"> or knaves
"<:o alw lie">4

  ,*apt} #c ,"s ,classic ,numb} ,!ory

  ,sec;n #c4a ,divisibil;y & ,3gru;es
7777777777777777777777777777777777777777
,note  #c4a4a 4
  ,any "t we say 8numb}0 9 ! 3text (
divides1 3gru;e1 or numb} !ory we m1n
9teg}4

    ,subsec;n #c4a4a ,! ,divides ,rela;n
  ,9 ,example #a4c4c1 we saw ! divides
rela;n4 ,2c we're go+ to use ? rela;n
frequ5tly1 we w 9troduce xs {n nota;n4
7777777777777777777777777777777777777777
,def9i;n  #c4a4b 4  ,! ,divides ,rela;n4
  ,let _% a and b _: 2 two 9teg}s ) _% a
/.k #0 _:4 ,we say .2a ~1divides .2;b  &
write _% a|b _: if "! exi/s an 9teg}
.2;m s* t _% b .k am _:4
  ,we say t .2a is a ~1factor ( .2;b1 &
.2;b is a ~1multiple ( .2a4
7777777777777777777777777777777777777777
,example  #c4a4c 4
  ,! foll{+ >e examples ( ! divides
rela;n3

#a4 _% #3|#6 _: s9ce _% #6 .k #3*2 _:
#b4 _% #4|#100 _: s9ce _% #100 .k
  #4*25 _:
  ,"h >e "s non-examples3

#a4 _% #4/|10 _: s9ce "! is no 9teg}
  .2;m = : _% #10 .k #4m _:4
#b4 _% #6/|3 _:4 ,ord} matt}s4
7777777777777777777777777777777777777777
,proposi;n  #c4a4d 4  ,prop}ties (
divisibil;y4
  ,let _% a, b, c `e `;,z _: ) _% a /.k
#0 _:4 ,!n3

#a4 ,if _% a|b _: & _% a|c _: !n
  _% a|(b+c) _:4
#b4 ,if _% a|b _: !n _% a|bc _: = all
  _% c `e `;,z _:4
#c4 ,if _% a|b _: & _% b|c _: !n
  _% a|c _:4
7777777777777777777777777777777777777777
,coroll>y  #c4a4e 4
  ,if _% a, b, c `e `;,z _: ) _% a /.k
#0 _: s* t _% a|b _: & _% a|c _:1 !n
_% a|(bm+cn) _: ": _% m and n _: >e "s
9teg}s4
7777777777777777777777777777777777777777
,!orem  #c4a4f 4  ,! ,divi.n ,algori?m4
  ,let .2;n 2 an 9teg} & .2;d 2 a
positive 9teg}4  ,!n "! exi/ unique
9teg}s _% q and r _: s* t
_% n .k dq+rwith#0 "k: r "k d _:
7777777777777777777777777777777777777777
,example  #c4a4g 4
  ,use ! ,divi.n ,algori?m to write ea*
divi.n z _% n .k dq+r _: ) _% #0 "k: r
"k d _:1 ) ! v>iables def9$ 9 ! /ate;t
abv4

#a4 _% #543`/7 _:
#b4 _% -#42`/13 _:

    ,subsec;n #c4a4b ,! ,3gru;e ,rela;n
7777777777777777777777777777777777777777
,def9i;n  #c4a4h 4  ,! ,3gru;e ,rela;n4
  ,let _% a and b _: 2 two 9teg}s & .2;m
2 a positive 9teg}4 ,we say t .2a ~7is
3gru5t to~' .2;b ~1modulo .2;m  if
_% m|(b-a) _:
  ,we write _% a _l b(mod m) _:
  ,we call .2;m ! ~1modulus~'4
7777777777777777777777777777777777777777
,example  #c4a4i 4
  ,ea* ( ~! /ate;ts is true3

#a4 _% #13 _l #6(mod #7) _:
#b4 _% -#8 _l #6(mod #7) _:
#c4 _% #7 _l #0(mod #7) _:
7777777777777777777777777777777777777777
,note  #c4a4aj 4
  ,let's comp>e ! ! 3gru;e rela;n ) !
modulus op}ator #a4c4ai3

_4 _% a _l b(mod m) _: is a .1logical
  .1/ate;t.'4 ,x tells u t .2a & .2;b >e
  relat$1 t is1 ! /ate;t _% m|(b-a) _:
  is true4
_4 _% a`0 b _: is a .1ma!matical
  .1op}a;n.'4 ,! result is a numb} n a
  true_/false4
,! di6};e is subtle b important4
7777777777777777777777777777777777777777
,def9i;n  #c4a4aa 4  ,3gru;e ,classes4
  ,if .2a is an 9teg} & .2;m is a
positive 9teg}1 we def9e ! ~73gru;e
class (~' .2a ~1modulo .2;m  to 2 ! set
( all 9teg}s 3gru5t to .2a modulo .2;m4
_% `(a`);m .k .(b|b _l a(mod m).) _:
7777777777777777777777777777777777777777
,example  #c4a4ab 4
  ,:at 3gru;e class is 9dicat$ by ! set3

#a4 _% .( ''', -#6, -#1, #4, #9, #14,
  '''.) _:
#b4 _% .( ''', -#13, #20, #53, #86,
  '''.) _:
7777777777777777777777777777777777777777
,example  #c4a4ac 4
  ,f9d all 3gru;e classes modulo #e4
,h9t 43
  ,to :at numb}s is #j 3gru5t modulo #e8
,is #a8 #b8 #c8 #d8 #e8 #f8 #g8444 ,h we
cov}$ "ey?+8
,solu;n 43
  ,"! >e a total ( five 3gru;e classes
modulo #e3

#a4 _% `(0`);5 .k .( ''', -5, 0, 5, 10,
  '''.) _:
#b4 _% `(1`);5 .k .( ''', -4, 1, 6, 11,
  '''.) _:
#c4 _% `(2`);5 .k .( ''', -3, 2, 7, 12,
  '''.) _:
#d4 _% `(3`);5 .k .( ''', -2, 3, 8, 13,
  '''.) _:
#e4 _% `(4`);5 .k .( ''', -1, 4, 9, 14,
  '''.) _:
,9 g5}al1 "! w alw 2 .2;m 4t9ct 3gru;e
classes modulo .2;m4
7777777777777777777777777777777777777777
,proposi;n  #c4a4ad 4
  ,let .2;m 2 a positive 9teg}4 ,!n
9teg}s _% a and b _: >e 3gru5t modulo
.2;m if & only if "! exi/s & 9teg} .2;k
s* t _% a .k b+km _:4
7777777777777777777777777777777777777777
,proposi;n  #c4a4ae 4
  ,let .2;m 2 a positive 9teg}4 ,if _% a
_l b(mod m) _: & _% c _l d(mod m) _: !n
_% a+c _l b+d(mod m) and ac _l bd(mod
m) _:
7777777777777777777777777777777777777777
,note  #c4a4af 4
  ,= modul> >i?metic1 we h addi;n &
multiplica;n4 ,subtrac;n is d"o via
additive 9v}ses1 b divi.n is n a ?+6
,we'll 4cuss multiplicative 9v}ses 9
sec;n #c4d4
,ex}cises #c4a4c ,ex}cises #a 4
  ,%{ t if _% a _l b(mod m) _:1 !n _% b
_l a(mod m) _:
,h9t 43
  ,if _% m|(b-a) _:1 h{ c we write t
_% m|(a-b) _:;8
#b 4
  ,%{ t if _% a, b,  and c _: >e 9teg}s
) _% a /.k #0 and c /.k #0 _: s* t
_% ac|bc _: !n _% a|b _:4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,assume t _% a, b, c _: >e 9teg}s )
_% a /.k #0 _: & _% c /.k #0 _: s* t
_% ac|bc _:4 ,!n "! exi/s an 9teg} .2;m
s* _% bc .k acm _:
  ,s9ce _% c /.k #0 _:1 we c divide bo?
sides ( ! equa;n by .2;c1 yiel$+ !
equal;y _% b .k am _:4 ,?us _% a|b _:4
#c 4
  ,use ! divi.n algori?m to write !
foll{+ divi.ns z _% n .k dq+r _: ) !
v>iables def9$ 9 ! !orem3

a4 #ag is divid$ by #i
;b4 #abcd is divid$ by #bc
;c4 #j is divid$ by #ac
;d4 #h is divid$ by #a
,solu;n 43

a4 _% #17 .k #9*1+8 _:
;b4 _% #1234 .k #23*53+15 _:
;c4 _% #0 .k #13*0+0 _:
;d4 _% #8 .k #1*8+0 _:
#d 4
  ,det}m9e :e!r ! foll{+ 9teg}s >e
3gru5t to #c modulo #g3

a4 #cg
;b4 #ff
;c4 -#ag
;d4 -#fg
;e4 #hj
,solu;n 43

a4 ,s9ce _% #37-3 .k #34 _: is n
  divisible by #g1 we 3clude _% #37 /_l
  #3(mod #7) _:
;b4 ,s9ce _% #66-3 .k #63 _: is
  divisible by #g1 we 3clude _% #66 _l
  #3(mod #7) _:
;c4 ,s9ce _% -#17-3 .k -#20 _: is n
  divisible by #g1 we 3clude _% -#17 /_l
  #3(mod #7) _:
;d4 ,s9ce _% -#67-3 .k -#70 _: is
  divisible by #g1 we 3clude _% -#67 _l
  #3(mod #7) _:
;e4 ,s9ce _% #80-3 .k #77 _: is
  divisible by #g1 we 3clude _% #80 _l
  #3(mod #7) _:
#e 4
  ,li/ all 9teg}s 2t -#ajj & #ajj t >e
3gru5t to -#a modulo #be
,solu;n 43
  ,~! numb}s >e _% -#1, -#26, -#51,
-#76, #24, #49, #74, #99, _: all numb}s
t >e ( ! =m _% -#1+25*k _: = 9teg}s
.2;k4
#f 4
  ,suppose t _% a and b _: >e 9teg}s1
_% a _l #4(mod #13) _: & _% b _l #9(mod
#13) _:4 ,f9d ! 9teg} .2;c ) _% #0 "k: c
"k: #12 _: s* t3

a4 _% c _l #9a(mod #13) _:
;b4 _% c _l #11b(mod #13) _:
;c4 _% c _l a+b(mod #13) _:
;d4 _% c _l a~2"+b~2"(mod #13) _:
;e4 _% c _l a~2"-b~2"(mod #13) _:
,solu;n 43

a4 #aj
;b4 #h
;c4 #j
;d4 #f
;e4 #j
#g 4
  ,f9d c.t}examples to ! foll{+ /ate;ts3

a4 ,if _% ac _l bc(mod m) _: ": _% a, b,
  c, m `e `;,z _: ) _% m .1: #2 _:1 !n
  _% a _l b(mod m) _:4
;b4 ,if _% a _l b(mod m) _: & _% c _l
  d(mod m) _: ": _% a, b, c, m `e
  `;,z _: ) _% m .1: #2 _:1 !n _% a~c _l
  b~d"(mod m) _:4
  ,! f/ "p ( ? ex}cise %d 3v9ce y3 y _c
8divide0 bo? sides by .2;c 9 modul>
>i?metic6
,solu;n 43

a4 ,"o possible c.t}example is _% a .k
  #2, b .k #4, c .k #4, andm .k #6 _:4
  ,c}ta9ly _% #2*3 _l #4*3(mod #6) _: b
  _% #2 /_l #4(mod #6) _:4
;b4 ,"o possible c.t}example "h is _% a
  .k #2, b .k #7, c .k #7, b .k #2, m .k
  #5 _:4 ,!n we c see _% #2 _l #7(mod
  #5) _: satifies bo? "ps ( ! hypo!sis1
  b _% #2~7 _l #3(mod #5) _: :ile
  _% #7~2 _l #4(mod #5) _:4

       ,sec;n #c4b ,prime ,numb}s
7777777777777777777777777777777777777777
,def9i;n  #c4b4a 4  ,prime ,numb}s4
  ,a positive 9teg} .2;p is call$
~1prime if ! only positive factors (
.2;p >e _% #1 and p _: xf4
  ,a positive 9teg} : is n prime is
call$ _% composite _:
7777777777777777777777777777777777777777
,note  #c4b4b 4  #a is ! l"olie/ numb}4
  #a is nei prime nor composite4 ,x's
call$ a ~1unit~'4
7777777777777777777777777777777777777777
,!orem  #c4b4c 4  ,! ,funda;tal ,!orem (
,>i?metic4
  ,e 9teg} grt} ?an #a c 2 writt5 z a
product ( primes1 & ? product is unique
up to ! ord}+ ( ! prime factors4
7777777777777777777777777777777777777777
,example  #c4b4d 4
  ,f9d ! prime factoriza;n ( ! foll{+3

#a4 #abd
#b4 #ha
#c4 #ida
7777777777777777777777777777777777777777
,!orem  #c4b4e 4
  ,if .2;n is a composite numb}1 !n .2;n
has a prime divisor less ?an or equal to
_% >n} _:4
7777777777777777777777777777777777777777
,pro( 4
  ,assume1 to ! 3tr>y1 t e prime divisor
( .2;n is grt} ?an _% >n} _:4 ,s9ce .2;n
is composite1 x has at l1/ two prime
factors1 _% p1, p2 _: s t _% n .k
p1p2b _: ": .2;b is positive 9teg}4 ,b
s9ce _% p1 and p2 _: >e a prime divisors
( .2;n1 !y >e necess>ily l>g} ?an
_% >n} _:4 ,s3
_% n .k p1p2b .1 >n}*>n}*b .k nb _:
,b s9ce .2;n is composite & _% b `e
`;,z~+ _:1 _% n .1 nb _: is a 3tradic;n4
7777777777777777777777777777777777777777
,example  #c4b4f 4  ,brute ,=ce ,trial
,divi.n4
  ,to det}m9e if a numb} .2;n is prime1
"o only ne$s to te/ all possible prime
divisors up to _% >n} _:4
  ,use trial divi.n to det}m9e t #bea is
prime4
7777777777777777777777777777777777777777
,example  #c4b4g 4  ,sieve ( ,}atos!nes4
  ,9 ord} to g5}ate a li/ ( all prime
numb}s less ?an or equal to .2;n1 />t )
a tabul> li/+  ( 9teg}s f #a to .2;n3

#a4 ,cross (f ! numb} #a4
#b4 ,3t9u+ until y r1* _% >n} _:3

a4 ,circle ! next1 non-cross$ | numb}4
  ,x's prime4
;b4 ,cross | e multiple ( ? numb}4
;c4 ,rep1t4
  ,run ! ,sieve on ? table ( 9teg}s f #a
to #ajj4
7777777777777777777777777777777777777777
,table  #c4b4h 4  ,9teg}s f #a to #ajj
#a2 #b2 #c2 #d2 #e2 #f2 #g2 #h2 #i2 #aj4
#aa2 #ab2 #ac2 #ad2 #ae2 #af2 #ag2 #ah2
  #ai2 #bj4
#ba2 #bb2 #bc2 #bd2 #be2 #bf2 #bg2 #bh2
  #bi2 #cj4
#ca2 #cb2 #cc2 #cd2 #ce2 #cf2 #cg2 #ch2
  #ci2 #dj4
#da2 #db2 #dc2 #dd2 #de2 #df2 #dg2 #dh2
  #di2 #ej4
#ea2 #eb2 #ec2 #ed2 #ee2 #ef2 #eg2 #eh2
  #ei2 #fj4
#fa2 #fb2 #fc2 #fd2 #fe2 #ff2 #fg2 #fh2
  #fi2 #gj4
#ga2 #gb2 #gc2 #gd2 #ge2 #gf2 #gg2 #gh2
  #gi2 #hj4
#ha2 #hb2 #hc2 #hd2 #he2 #hf2 #hg2 #hh2
  #hi2 #ij4
#ia2 #ib2 #ic2 #id2 #ie2 #if2 #ig2 #ih2
  #ii2 #ajj4
7777777777777777777777777777777777777777
,proposi;n  #c4b4i 4
  ,"! >e 9f9itely _m primes4
,ex}cises ,ex}cises #a 4
  ,f9d ! prime factoriza;n ( ea* ( !
foll{+ 9teg}s3

a4 #ci
;b4 #abe
;c4 #aja
;d4 #adc
;e4 #bhi
;f4 #hii
,solu;n 43

a4 _% #39 .k #3*13 _:
;b4 _% #125 .k #5~3 _:
;c4 _% #101 _: is prime - trial divide
  by #b1 #c1 #e1 #g
;d4 _% #143 .k #11*13 _:
;e4 _% #289 .k #17~2 _:
;f4 _% #899 .k #29*31 _:
#b 4
  ,f9d ! prime factoriza;n ( _% #10& _:
"<#aj factorial1 n 8yay t560">
,solu;n 43
  ,recall _% #10&  .k #10*9*8*7*'''
*2*1 _:4 ,s we c d ! foll{+3
_%
#10&-
     .k #10*9*8*7*6*5*4cdot"3*2*1
.k (2*5)*3~2"*2~3"*7*(2*3)*5*2~2"cdot"3-
*2*1
.k #7~1"*5~2"*3~4"*2~8-

_:
#c 4
  ,prove t e prime numb} grt} ?an #c is
ei "o m or "o less ?an a multiple ( #f4
,h9t 43
  ,prove ! 3trapositive by cases4
,solu;n 43
  ,? "q is ( ! =m 8if .2;n is a prime
numb} grt} ?an ?ree1 !n ei _% n .k
#6k+1 _: or _% n .k #6k-1 _: = "s 9teg}
.2;k04
7777777777777777777777777777777777777777
,pro( 4
  "<by 3traposi;n">4 ,assume t .2;n is n
a numb} ( ! =m _% n .k #6k+1 _: or _% n
.k #6k-1 _: = "s 9teg} .2;k4 ,? gives u
f|r total cases3
  ,case #a3 ,assume _% n .k #6k _: = "s
9teg} .2;k4 ,!n .2;n is n a prime numb}1
s9ce .2;n is divisible by bo? #b & #c4
  ,case #b3 ,assume _% n .k #6k+2 .k
#2(3k+1) _: = "s 9teg} .2;k4 ,!n .2;n is
divisible by #b & is h;e n prime4
  ,case #c3 assume _% n .k #6k+3 .k
#3(2k+1) _: = "s 9teg} .2;k4 !n .2;n is
divisible by #c & is h;e n prime4
  ,case #d3 assume _% n .k #6k+4 .k
#2(3k+2) _: = "s 9teg} .2;k4 !n .2;n is
divisible by #b & is h;e n prime4
  ,?us if .2;n is n ( ! =m _% n .k
#6k+1 _: or _% n .k #6k-1 _: = "s 9teg}
.2;k1 .2;n is n prime4 ,by 3traposi;n1
if .2;n is a prime grt} ?an ?ree !n .2;n
is ( ! =m ei _% n .k #6k+1 _: or _% n .k
#6k-1 _: = "s 9teg} .2;k4

  ,sec;n #c4c ,,gcd,'s & ,! ,euclid1n
               ,algori?m
7777777777777777777777777777777777777777
,def9i;n  #c4c4a 4  ,grte/ ,common
,divisor "<gcd">4
  ,let _% a and b _: 2 9teg}s1 n bo?
z}o4 ,! l>ge/ 9teg} .2;d s* t _% d|a _:
& _% d|b _: is call$ ! ~7grte/ common
divisor (~' _% a and b _:  : we d5ote by
_% gcd (a, b) _:4
  ,we say _% a and b _: >e ~1relatively
~1prime if _% gcd (a, b) .k #1 _:4
7777777777777777777777777777777777777777
,example  #c4c4b 4
  ,f9d ! foll{+ "<by li/+ prime
factors">3

#a4 _% gcd (36, 69) _:
#b4 _% gcd (10, 27) _:
#c4 _% gcd (360, 1000) _:
7777777777777777777777777777777777777777
,def9i;n  #c4c4c 4  ,l1se ,common
,multiple4
  ,let _% a and b _: 2 9teg}s1 n bo?
z}o4 ,! smalle/ 9teg} .2;m s* t
_% a|m _: & _% b|m _: is call$ ! ~7l1/
common multiple (~' _% a and b _:  : we
d5ote by _% lcm(a, b) _:4
7777777777777777777777777777777777777777
,example  #c4c4d 4
  ,f9d ! foll{+3

#a4 _% lcm(36, 69) _:
#b4 _% lcm(10, 27) _:
#c4 _% lcm(360, 1000) _:
7777777777777777777777777777777777777777
,!orem  #c4c4e 4
  ,let _% a and b _: 2 two positive
9teg}s4 ,!n
_% ab .k gcd (a, b)*lcm(a, b) _:
7777777777777777777777777777777777777777
,!orem  #c4c4f 4  ,! ,euclid1n
,algori?m4
  ,let .2a & .2;b 2 two positive 9teg}s
": _% a .1: b _:4 ,if we apply ! divi.n
algori?m recursively s t
_%
b "k q "k 1 "k r "k 1 "k # "k r "k 1
r "k 1 "k q "k 2 "k r "k 2 "k # "k r "k-
 2 "k r
1 "k r "k 2 "k q "k 3 "k r "k 3 "k # "k-
 r "k 3 "k r
2 "k r "k 3 "k q "k 4 "k r "k 4 "k # "k-
 r "k 4 "k r
n"2"r"n"1"q"n"1"r"n"#"r"n"r"n
n"+1"+r"+n"+q"+n
_:
,!n _% gcd (a, b) .k r;n _:1 ! la/
non-z}o rema9d}4
7777777777777777777777777777777777777777
,example  #c4c4g 4
  ,"h's a fully "w$ | example %{+ h{ to
run ! algori?m to f9d _% gcd (7592,
5913) _:
,solu;n 43
_%
#7592 .k #5913*1+1679
#5913 .k #1679*3+876
#1679 .k #876*1+803
#876  .k #803*1+73
#803  .k #73*11+0
_:
,ac to ! ,euclid1n ,algori?m1 ! la/
non-z}o rema9d} is ! gcd1 & s _% gcd
(7592, 5913) .k #73 _:4
7777777777777777777777777777777777777777
,example  #c4c4h 4
  ,f9d _% gcd (5040, 4704) _:4
7777777777777777777777777777777777777777
,proposi;n  #c4c4i 4  ,b~/ez|t's ,lemma4
  ,if _% a and b _: >e positive 9teg}s1
!n "! exi/ 9teg}s _% s and t _: s* t
_% gcd (a, b) .k as+bt _:
7777777777777777777777777777777777777777
,def9i;n  #c4c4aj 4  ,b~/ez|t
,coe6ici5ts4
  ,we call _% s and t _: 9 ! !orem abv !
~1,b~/ez|t ~1coe6ici5ts ( _% a and b _:4
7777777777777777777777777777777777777777
,example  #c4c4aa 4  ,back ,sub/i;n4
  ,we c rev}se ! ,euclid1n ,algori?m to
f9d ! ,b~/ez|t coe6ici5ts1 a process t
we'll call ~1back ~1sub/itu;n~'4 ,we
solve ea* equa;n 9 ! ,euclid1n ,algori?m
= ! rema9d}1 & rep1t$ly sub/itute &
comb9e l t}ms until we >rive at ! gcd
writt5 z a ~1l9e> ~1comb9a;n ( ! orig9al
two numb}s1 9 ? case1 _% #73 .k
#7592s+5913t _:
,solu;n 43
  ,! rema9d}s3
_%
#73   .k #876-803*1
#803  .k #1679-876*1
#876  .k #5913-1679*3
#1679 .k #7592-5913*1
_:
  ,sub/i;n & comb9+ l t}ms3
_%
#73                        .k #876-803*1
.k #876-(1679-876*1)*1
.k #876*2-1679*1
.k (5913-1679*3)*2-1679*1
.k #5913*2-1679*7
.k #5913*2-(7592-5913*1)*7
.k #5913*9-7592*7
.k #5913*9+7592*(-#7)
_:
  ,s _% #73 .k #5913*9+7592*(-#7) _: is
! l9e> comb9a;n we desir$4
7777777777777777777777777777777777777777
,example  #c4c4ab 4
  ,express ! gcd ( #afh & #ebe z a l9e>
comb9a;n ( ~? numb}s4
7777777777777777777777777777777777777777
,example  #c4c4ac 4

#a4 ,use ! ,euclid1n algori?m to f9d
  _% gcd (4147, 10672) _:4
#b4 ,use back-sub/itu;n "<rev}se ! /eps
  ( ! ,euclid1n ,algori?m"> to write !
  grte/ common divisor ( #dadg & #ajfgb
  z a l9e> comb9a;n ( ~? numb}s4
,ex}cises ,ex}cises #a 4
  ,f9d ! gcd via ! ,euclid1n ,algori?m &
!n use back-sub/itu;n to write ! gcd z a
l9e> comb9a;n ( ~? numb}s3

a4 _% gcd (36, 48) _:
;b4 _% gcd (21, 724) _:
;c4 _% gcd (60, 97) _:
;d4 _% gcd (5, 26) _:
,solu;n 43

a4 _% #12 .k #36(-#1)+48( _:#a">
;b4 _% #1 .k #21(69)+724( _:-#b">
;c4 _% #1 .k #60(-#21)+97( _:#ac">
;d4 _% #1 .k #5(-#5)+26(1) _:
#b 4
  ,use any me?od to f9d ! grte/ common
divisor ( #dab & #cb4
,solu;n 43
  _% gcd (412, 32) .k #4 _:4 ,we c "r x
z ! l9e> comb9a;n3 _% #4 .k
#412(-#1)+32(13) _:
#c 4
  ,use any me?od to f9d ! grte/ common
divisor ( #ghj & #aej4
,solu;n 43
  _% gcd (780, 150) .k #30 _:4 ,we c "r
! gcd z ! l9e> comb9a;n _% #30 .k
#780(1)+150(-#5) _:
#d 4
  ,f9d ! grte/ common divisor ( #gj1
#ih1 #ajh4
,solu;n 43
  _% gcd (70, 98, 108) .k #2 _:

  ,sec;n #c4d ,multiplicative ,9v}ses
  ,9 |r algebra & calculus classes1 ":
we "w$ 9 _% `;,q _: & _% `;,r _:1 all
non-z}o numb}s _h multiplicative 9v}ses4
,= example1
_%
#5~-1 .k  #1
         ?33#
          #5
_:
s9ce _% #5~-1"*5 .k #1 _:4 ,b
_%
 #1  /`e ,z
?33#
 #5
_:
6
  ,:5 we're "w+ ) only 9teg}s1 9 "picul>
9 3gru;e classes modulo an 9teg} .2;m1
frac;ns >5't a ?+4 ,"s numb}s1 ?|<1 d h
multiplicative 9v}ses4 ,!y're special1 &
we explore !m 9 ? sec;n4
  ,:y d we c>e8 ,at ? po9t1 ! only
algebraic equa;ns we c solve >e ( ! =m
_% x+b _l c(mod m) _:4 ,! multiplicative
9v}ses help u solve ! algebraic1 ~1a69e
equa;ns1 _% ax+b _l c(mod m) _:4
7777777777777777777777777777777777777777
,def9i;n  #c4d4a 4
  ,let .2a 2 an 9teg} & .2;m a positive
9teg}4 ,we def9e a ~7multiplicative
9v}se (~' .2a ~1modulo .2;m  to 2 an
9teg} .2;b s* t _% ab _l #1(mod m) _:4
7777777777777777777777777777777777777777
,example  #c4d4b 4
  ,s9ce _% #3*5 _l #1(mod #7) _:1 we say
t _% #3 _: is a multiplicative 9v}se (
#e modulo #g4 ,simil>ly1 #e is a
multiplicative 9v}se ( #c modulo #g4
  ,we say t _% #3 _: is a multiplicative
9v}se1 r ?an ! multiplicative 9v}se1 2c
e numb} 9 ! 3gru;e class _% `(3`);7 _:
is al an 9v}se6 ,obs}v+ t _% -#4 `e
`(3`);7 _:1 & _% #10 `e `(3`);7 _:1 we c
*eck t3

_4 _% #10*5 _l #1(mod #7) _:
_4 _% (-#4)*5 _l #1(mod #7) _:
_4 etc
7777777777777777777777777777777777777777
,example  #c4d4c 4

#a4 ,f9d e multiple ( #d modulo #i4
#b4 ,f9d ! 9v}se ( #d modulo #i4
,solu;n 43
  ,"h's ! multiplica;n table4 ,rememb}
to r$uce modulo #i4
7777777777777777777777777777777777777777
  ,table  #c4d4d 4  ,multiplica;n table
( #d modulo #i
"9 #a"b"#c"d"#e"#f"g"#h"i4
#d2 #d2 #h2 #c2 #g2 #b2 #f2 #a2 #e2 #j4
  ,! 9v}se ( #d modulo #i is #g4 ,:y8
7777777777777777777777777777777777777777
,example  #c4d4e 4
  ,solve ! 3gru;e _% #4x _l #5(mod
#9) _:4
7777777777777777777777777777777777777777
,example  #c4d4f 4
  ,let's cr1te a multiplica;n table
modulo #i4 ,! foll{+ ,sage code does x =
u4 ,y c *ange ! v>iable ;n to o!r numb}s
to qkly g5}ate o!r multiplica;n tables4
  ,! |tput is a table_/matrix ~: _% i,
j _:? 5try is _% i*j(mod n) _:4
7777777777777777777777777777777777777777
  ,sage
  ,9put3
n = _9 rows = [] for i in range(1, n):
  rows.append(list(map((lambda x:
(i*x)%n), [x for x in range(1,n)])))
table(rows)
  ,|tput3
_1 _2 _3 _4 _5 _6 _7 _8 _2 _4 _6 _8 _1
_3 _5 _7 _3 _6 _0 _3 _6 _0 _3 _6 _4 _8
_3 _7 _2 _6 _1 _5 _5 _1 _6 _2 _7 _3 _8
_4 _6 _3 _0 _6 _3 _0 _6 _3 _7 _5 _3 _1
_8 _6 _4 _2 _8 _7 _6 _5 _4 _3 _2 _1

#a4 ,:at is ! 9v}se ( #g modulo #i8
#b4 ,does #f h an 9v}se modulo #i8 ,:y
  or :y n8
#c4 ,:at numb}s >e 9v}tible modulo #i8
  ,:at numb}s >e n8
  ,comput+ a multiplica;n table is t$i|s
if we j want to f9d a multiplicative
9v}se to solve a l9e> 3gru;e4 ,simil>ly1
guess-&-*eck is g5}ally 9e6ici5t4 ,n{ we
turn to a p{};l fact t gives rise to an
algori?m to f9d 9v}ses4
7777777777777777777777777777777777777777
,proposi;n  #c4d4g 4
  ,if _% a and m _: >e relatively prime
9teg}s & _% m .1 #1 _:1 !n an 9v}se (
.2a modulo .2;m exi/s4
7777777777777777777777777777777777777777
,note  #c4d4h 4

#a4 ,! 9v}se ( _% a modulo m _: is xs
  ,2z|t coe6ici5t 9 _% gcd (a, m) .k
  as+mt _:
#b4 ,! 9v}se is al unique "<up to
  3gru;e">1 b we won't prove t "h4
7777777777777777777777777777777777777777
,example  #c4d4i 4
  ,solve _% #5x+3 .k #0(mod #14) _:
7777777777777777777777777777777777777777
,example  #c4d4aj 4
  ,solve ! l9e> 3gru;es1 if possible4
,expla9 if "! >e no solu;ns1 "o solu;n1
or 9f9itely _m solu;ns4

#a4 _% #11x _l #15(mod #20) _:
#b4 _% #6x _l #4(mod #10) _:
#c4 _% #8x _l #2(mod #28) _:
#d4 _% #5x _l #4(mod #25) _:
,solu;n 43

#a4 ,f/1 s9ce _% gcd (11, 20) .k #1 _:1
  "! is a unique solu;n to ? recurr;e4
  ,us+ ei ! ,euclid1n ,algori?m or
  guess+-&-*eck+1 notice t _% #11*11 .k
  #121 _l #1(mod #20) _:1 s _% #11~-1 _l
  #11(mod #20) _:4 ,s we h3
  _%
  #11x    _l #15(mod #20)
  #11*11x _l #11*15(mod #20)
  #1x     _l #165(mod #20)
  x       _l #5(mod #20)
  _:
#b4 ,s9ce _% gcd (6, 10) .k #2 /.k
  #1 _:1 "! isn't a unique solu;n6 ,we
  c't use ! ,euclid1n ,algori?m to f9d
  |r 9v}se & 9/1d h to rely on trial &
  }ror4
    ,s9ce _% #6*4 .k #24 _l #4(mod
  #10) _:1 we h t #d is "o solu;n4
  ,simil>ly1 y c *eck t _% #9 _: is al a
  solu;n4
    ,? 3gru;e has two solu;ns modulo
  #aj1 _% x .k #4 _: & _% x .k #9 _:4
#c4 ,z abv1 s9ce _% gcd (8, 28) .k #4
  /.k #1 _:1 s "! isn't a unique solu;n4
  ,let's see :at happ5s :5 we d !
  multiplica;n3
7777777777777777777777777777777777777777
,table  #c4d4aa 4  ,multiplica;n table (
  #h modulo #bh
"92 #a2 #b2 #c2 #d2 #e2 #f2 #g2 #h4
#h2 #h2 #af2 #bd2 #d2 #ab2 #bj2 #j2 #h4
  444 we cd keep go+444 notice t z soon
  z we get back to _% #8 _:1 we h g"o 9
  a loop6 ,! values w rep1t4
    ,|r f/ solu;n is _% x .k #4 _:1 !n
  _% x .k #11 _:1 !n _% x .k #18 _:1 &
  f9ally _% m .k #25 _:
#d4 ,"h1 s9ce _% gcd (5, 25) .k #5 /.k
  #1 _:1 ag1 no unique solu;n4 ,take a
  few mo;ts to multiply values ( #e &
  notice x w n"e r1* #d4
    ,"! is no solu;n to ? 3gru;e6
7777777777777777777777777777777777777777
,note  #c4d4ab 4  ,solv+ sy/ems ) gcd
o!r ?an #a4
  ,z we h9t$ 9 ! previ|s example1 we h
?ree possibilities = ! 3gru;e _% ax .k
b(mod m) _:3

#a4 ,a unique solu;n if _% gcd (a, m) .k
  #1 _:
#b4 ,if _% gcd (a, m) .k d _:1 ! 3gru;e
  w h .2;d solu;ns if _% d|b _:
#c4 ,& teh sy/em w h no solu;n if _% gcd
  (a, m) .k d _: & _% d/|b _:
  ,if ! 3gru;e has a solu;n1 ! complete
set ( solu;ns r$uc$ modulo .2;m is giv5
by3
_%
x+0
 +
 +
_:
": _% gcd (a, m) .k d _:1 _% x0 _: is an
9itial solu;n1 & .2;t runs "?
_% ,z;d _:1 ! set ( rema9d}s modulo ;d4
  ,take a mo;t to revisit ! examples 9
,example #c4d4aj us+ ? =mula4
7777777777777777777777777777777777777777
,example  #c4d4ac 4
  ,give a complete li/ ( ! solu;ns to !
foll{+ 3gru;es3

#a4 _% #8x .k #20(mod #28) _:
#b4 _% #21x .k #14(mod #49) _:
,solu;n 43

#a4 ,we 2g9 f/ by f9d+ _% gcd (8, 28) .k
  #4 _:1 s "! w n 2 a unique solu;n1 b
  9/1d z}o or f|r4  ,2c _% #4|#20 _:1 "!
  w 2 f|r solu;ns r$uc$ modulo #bh4
    ,apply+ ! me?od ( solv+ 3gru;es )
  multiple solu;ns1 we ne$ to f9d ! f/
  solu;n4 ,runn+ "? possible values (
  _% x .k #0, #1, #2, #3 ''' _:1 we note
  t _% #8*6 .k #48 _l #20(mod #28) _: s
  t _% x0 .k #6 _: is ! f/ solu;n4 ,!n
  all solu;ns w 2 ( ! =m3
  _%
  # `e `;,z #28t  `e `;,zt
    `e `;,z?3333# `e `;,z
    `e `;,z  #4   `e `;,z
  _:
  ,plug 9 ! values _% t .k #0, #1, #2,
  #3 _: to f9d ! complete solu;n set (
  _% x .k #6, #13, #20, #27 _:
#b4 ,z abv1 f/ f9d _% gcd (21, 49) .k
  #7 _:4 ,s9ce _% #7|#14 _:1 we h sev5
  total solu;ns r$uc$ modulo #di4
    ,to f9d ! 9itial solu;n1 te/ values
  ( _% x .k #0, #1, #2, ''' _: to f9d !
  f/ solu;n is _% x0 .k #3 _: ,apply+ !
  =mula we f9d all solu;ns to be3
  _%
  # `e `;,z #49t  `e `;,zt
    `e `;,z?3333# `e `;,z
    `e `;,z  #7   `e `;,z
  _:
  ,plug 9 ! values _% t .k #0, #1, #2,
  #3, #4, #5, #6 _: to f9d ! complete
  solu;n set ( _% x .k #3, #10, #17,
  #24, #31, #38, #45 _:
,ex}cises ,ex}cises #a 4
  ,solve ! 3gru;e3

a4 _% #3x+4 _l #7(mod #8) _:
;b4 _% #9x _l #4(mod #22) _:
;c4 _% #5x+14 _l #0(mod #26) _:
,solu;n 43

a4 _% x _l #1(mod #8) _:
;b4 _% x _l #20(mod #22) _:
;c4 _% x _l #18(mod #26) _:
#b 4
  ,f9d all solu;ns to ! 3gru;e "<"! cd 2
m ?an "o">3

a4 _% #3x _l #6(mod #9) _:
;b4 _% #4x _l #3(mod #8) _:
,solu;n 43
  ,"h1 s9ce ! coe6ici5t ( .2;x isn't
relatively prime to ! modulus "! >e ei
multiple answ}s p} modulus or no solu;n4

a4 ,ea* ( _% x _l #2(mod #9) _:1 _% x _l
  #5(mod #9) _:1 & _% x _l #8(mod #9) _:
  satisfy ! giv5 equa;n4 ,we c summ>ize
  ? z _% x _l #2(mod #3) _:
;b4 ,"! is no solu;n to ? equal;y4 ,no
  multiple ( #d w "e h a rema9d} ( #c
  modulo #h4
#c 4
  ,solve ! foll{+ 3gru;es4 ,if n"o
exi/s1 expla9 :y4 ,if "! >e "o or m
solu;ns1 give a complete li/ (
solu;n"<s">4

a4 _% #3x-4 .k #15(mod #26) _:
;b4 _% #13x-3 .k #4(mod #26) _:
;c4 _% #8x .k #16(mod #426) _:
;d4 _% #8x .k #16(mod #425) _:
;e4 _% #8x .k #21(mod #426) _:
,solu;n 43

a4 ,s9ce _% gcd (3, 26) .k #1 _:1 "! is
  a unique 9v}se4 ,us+ ! ,euclid1n
  ,algori?m we f9d t _% #3~-1 _l #9(mod
  #26) _:4 ,do+ ! algebra3
  _%
  #3x       .k #19(mod #26)
  (3~-1")3x .k (3~-1")19(mod #26)
  x         _l (9)19(mod #26)
  x         _l #171(mod #26)
  x         _l #15(mod #26)
  _:
  is ! unique solu;n4
;b4 ,"h _% gcd (13, 26) .k #2 _: s "! is
  no unique solu;n4 ,9/1d1 "! >e ei no
  solu;ns or two solu;ns6 ,b s9ce ! gcd
  doesn't divide _% #7 _:1 "! >e 9 fact
  no solu;ns to ? 3gru;e4
;c4 ,s9ce _% gcd (8, 426) .k #2 _:4 ,l !
  previ|s "q "! >e ei no solu;ns or two
  solu;ns4 ,? "t s9ce ! gcd does divide
  #af1 we w h two solu;ns6  ,! f/ is
  obvi|sly _% x .k #2 _:1 & ! second w
  be1 apply+ ,note #c4d4ab3
  _%
  x       .k #2+ #426
                ?3333#
                  #2
  
  .k #215
  _:
;d4 ,? "t ! modulus is #dbe1 s we h
  _% gcd (425, 8) .k #1 _: m1n+ a unique
  solu;n exi/s ! sy/em4  ,! ,euclid1n
  algori?m f9ds t _% #8~-1 .k -#53(mod
  #425) _:1 & solv+ ! expres.n gives3
  _%
  #8x       .k #16(mod #426)
  (8~-1")8x .k (8~-1")16(mod #425)
  x         _l (-#53)16(mod #425)
  x         _l -#848(mod #425)
  x         _l #2(mod #425)
  _:
  444 : actually is bo? obvi|s &
  hil>i|s4 ,x %{s t ev5 if we don't
  notice ! obvi|s solu;n1 ! me?od w give
  u ! correct result6
;e4 ,? "t1 z 2f1 _% gcd (8, 426) .k
  #2 _:1 s "! >e ei z}o or two solu;ns4
  ,b s9ce "! ! gcd doesn't divide
  _% #23 _:1 "! is no solu;n to !
  3gru;e4
#d 4
  ,play >.d ) mak+ multiplica;n tables (
v>i|s moduli 9 ! ,sage code 9
example #c4d4f4

a4 ,:at 3di;n is requir$ = a numb} .2a
  to h an 9v}se modulo .2;n8
;b4 ,:at is a 3di;n on .2;n = e ele;t to
  h an 9v}se modulo .2;n8
;c4 ,if "! >e m ?an "o solu;n to _% ax
  .k b(mod n) _:1 :at is ! rela;n%ip 2t
  ea* solu;n8
,solu;n 43

a4 ,to h an 9v}se modulo .2;n1 a numb}
  .2a m/ 2 relatively prime to .2;n
;b4 ,to h ! prop}ty t e numb} has an
  9v}se modulo .2;n1 ! numb} .2;n m/ 2
  prime
;c4 ,n a solu;n1 b a h9t - take ea*
  example & ex}cise t _h multiple
  solu;ns & subtract ! solu;ns4 ,:at d y
  notice8

    ,sec;n #c4e ,modul> expon5tia;n
  ,? sec;n seems a bit | ( no":1 b x's a
computa;nal tool we ne$ 9 ord} to p}=m !
,,rsa 5cryp;n algori?m4 ,:5 we
expon5tiate a numb}1 we alw get a bi7}
numb}1 & we'll want to r$uce modulo
.2;m4 ,9 ? sec;n we give an algori?m t
all{s u to p}=m ? op}a;n 3v5i5tly4
  ,we 2g9 by br1k+ up a numb} 9to sums (
p{}s ( two4 ,f/1 a qk refre%} table ( !
f/ s"eal p{}s ( two3
7777777777777777777777777777777777777777
  ,table  #c4e4a 4  ,"s small p{}s ( two
.2;n _% #2~n _:4
#a2 #b4
#b2 #d4
#c2 #h4
#d2 #af4
#e2 #cb4
#f2 #fd4
#g2 #abh4
#h2 #bef4
#i2 #eab4
#aj2 #ajbd4
#aa2 #bjdh4
#ab2 #djif4
7777777777777777777777777777777777777777
,example  #c4e4b 4
  ,f9d ! b9>y repres5ta;n ( ea* ( !
foll{+ numb}s3

#a4 #bd
#b4 #bee
#c4 #bjai
,solu;n 43

#a4 _% #24 .k #16+8 _: s9ce t's
  _% #2~4"+2~3 _:
#b4
  _%
  #255-
        .k #128+64+32+16+8+4+2+1
  since that's-
  
  .k #2~7"+2~6"+2~5"+2~4"+2~3"+2~2"+2~1-
  "+2~0
  _:
#c4 ,? "o is a ll m "w1 s ,i'm 9clud+ my
  ?9k+ z we br1k x d{n3
  _%
  #2019                          .k #10-
  24+995
  .k #1024+512+483
  .k #1024+512+256+227
  .k #1024+512+256+128+99
  .k #1024+512+256+128+64+35
  .k #1024+512+256+128+64+32+2+1
  _:
  ,n{ recall ! basic expon5ts prop}ties
( expon5ts3 _% (a~m")~n .k a~mn _: &
_% a~m"*a~n .k a~m+n _:4
  ,:y d we c>e8 ,let's take a look at
rep1tly squ>+ a numb}1 say .2;n3

;$= _% n~1 .k n~1 _:
;$= _% (n~1")~2 .k n~1*2 _:
;$= _% (n~2")~2 .k n~2*2 .k n~4 _:
;$= _% (n~4")~2 .k n~4*2 .k n~8 _:
;$= _% (n~8")~2 .k n~8*2 .k n~16 _:
;$= _% (n~16")~2 .k n~16*2 .k n~32 _:
;$= _% (n~32")~2 .k n~32*2 .k n~64 _:
;$= _% (n~64")~2 .k n~64*2 .k n~128 _:
;$= etc444
,! po9t is t ea* "t we squ>e a numb}1 !
total expon5t 2comes ! next p{} ( #b4
,& 2c ea* numb} c 2 express$ z a sum (
p{}s ( two1 we c exploit ? fact us+ a
process we'll call modul> expon5tia;n4
7777777777777777777777777777777777777777
,def9i;n  #c4e4c 4  ,modul>
,expon5tia;n4
  ~1,modul> ~1expon5tia;n is ! process (
rep1t$ly squ>+ & r$uc+ a numb} modulo "s
9teg}1 & !n comb9+ ! results to f9d !
requir$ answ}4
7777777777777777777777777777777777777777
,example  #c4e4d 4
  ,"h's a simple1 typ$ example4 ,we'll
f9d _% #37~82"(mod #52) _:
,solu;n 43

#a4 ,f9d ! b9>y repres5ta;n ( _% #82 _:4
  _% #82 .k #64+16+2 _:
#b4 ,rep1t$ly squ>e & r$uce _% #37(mod
  #52) _: six "ts4 ,? "ws s9ce _% #2~6
  .k #64 _:1 : is ! hi<e/ p{} ( _% #2 _:
  9 ! b9>y repres5ta;n ( #hb4

;$= _% #37~1 .k #37~1 .k #37 _l #37(mod
  #52) _:
;$= _% #37~2 .k #37~2 .k #1369 _l
  #17(mod #52) _:
;$= _% #37~4 .k #17~2 .k #289 _l #29(mod
  #52) _:
;$= _% #37~8 .k #29~2 .k #841 _l #9(mod
  #52) _:
;$= _% #37~16 .k #9~2 .k #81 _l #29(mod
  #52) _:
;$= _% #37~32 .k #29~2 .k #841 _l #9(mod
  #52) _:
;$= _% #37~64 .k #9~2 .k #81 _l #29(mod
  #52) _:
  ,note t x 0 a co9cid;e t we got 9to a
  loop ( #bi1 #i1 #bi1 444 ,b ? w happ5
  "s"ts6
#c4 ,n{ pick f ! values abv ~? 5tries :
  correspond to ! b9>y repres5ta;n ( |r
  desir$ p{}1 #hb4 ,s9ce _% #82 .k
  #64+16+2 _:1 we pick ! 5tries
  correspond+ to _% #37~64, #37~16,  and
  #37~2 _:3
  _%
  #37~82"(mod #52)                 .k #-
  37~2+16+64"(mod #52)
  .k #37~2"*37~16"*37~64"(mod #52)
  _l #17*29*29(mod #52)
  _l #49(mod #52)
  _:
  ,take note ( ! equival;e symbols us$
  abv4 ,we write _% .k _: :5 ! numb}s
  repres5t equal;y & _% _l _: :5 we h
  r$uc$ modulo #eb4
7777777777777777777777777777777777777777
,example  #c4e4e 4
  ,let's f9d _% #514~5367"(mod #711) _:
us+ ! squ>e-&-r$uce me?od4
,solu;n 43

#a4 ,= ! f/ /ep1 we write ! expon5t z
  sums ( p{}s ( two3
  _%
  #+1024+128+64+32+16+4+2
  _:
#b4 ,second /ep1 we rep1t$ly squ>e &
  r$uce1 />t+ ) #ead a total ( #ab "ts
  s9ce _% #4096 .k #2~12 _:4
    ,2f we get />t$1 ,i want to admit t
  ,i did br+ 9 a spr1d%eet to help |4
  ,y're 5c|rag$ to z well6 ,excel1
  ,google ,%eets1 & ,apple ,numb}s all h
  a "7,,mod"<numb}1 modulus"> t compute
  _% number`0 modulus _: ,i cr1t$ a
  table 9 ,excel l ?3
7777777777777777777777777777777777777777
,table  #c4e4f 4  ,sample table 9 excel
c.t p{} ( #b value mod #gaa4
#j2 #b2 "7,,mod"<#ead1 #gaa">4
#a2 #b2 "7,,mod"<,c#b"9,c#b1 #gaa">4
#b2 #d2 "7,,mod"<,c#c"9,c#c1 #gaa">4
  ,image ,,id3 image-#bj
  ,descrip;n3 ,scre5%ot ( ,excel %eeet
  demon/rat+ :at is describ$ 9 ! table
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
    !n y click-drag to exp& ! =mula d{n
  until yr c.t is #ab & p{} ( #b is
  #djif4 ,? tells u ! foll{+ equival;es1
  ) a/}isks m>k+ ~? values we ne$ to
  f9i% ! computa;n3

;$= _% #514~1 .k #514(mod #711) _:"9
;$= _% #514~2 _l #415(mod #711) _:"9
;$= _% #514~4 _l #163(mod #711) _:"9
;$= _% #514~8 _l #262(mod #711) _:
;$= _% #514~16 _l #388(mod #711) _:"9
;$= _% #514~32 _l #523(mod #711) _:"9
;$= _% #514~64 _l #505(mod #711) _:"9
;$= _% #514~128 _l #487(mod #711) _:"9
;$= _% #514~256 _l #406(mod #711) _:
;$= _% #514~512 _l #595(mod #711) _:
;$= _% #514~1024 _l #658(mod #711) _:"9
;$= _% #514~2048 _l #676(mod #711) _:
;$= _% #514~4096 _l #514(mod #711) _:"9
#c4 ,f9ally1 we put x all tgr1 br++ back
  ! orig9al expres.n & sub/itut+ :at we
  f.d4
  _%
  #514~5367"-
  -
      .k #514~4096+1024+128+64+32+16+4+-
  2+1"
  .k #514~4096"*514~1024"*514~128"*514~-
  64"*514~32"*514~16"*514~4"*514~2"*514-
  ~1"
  _l #514*658*487*505*523*388*163*415*5-
  14(mod #711)-
  
  multiple two at a time and reduce mod-
   711 each time-
  
  _l #694(mod #711)-
  -
  
  _:
,:y only multiply a c|ple numb}s at a "t
& r$uce8 ,if we multipli$ all ~? numb}s
on second to la/ l9e1 we'd get
#ehfhfiefcdigiagghdbahdjj1  : is ov}
half ( ! numb} ( "kn />s 9 ! univ}se  #a
4 ,un.s y h a r1lly p{};l calculator1
y're go+ to get approxima;n }rors & an
9correct answ}6
,ex}cises ,ex}cises #a 4
  ,f9d ! foll{+3

a4 _% #3~2019"(mod #99) _:
;b4 _% #7~644"(mod #645) _:
;c4 _% #123~1001"(mod #101) _:
,solu;n 43
  ,"h >e ! num}ic answ}s - b 2 sure y c
d ! process6

a4 #ha
;b4 #dcf
;c4 #bb
#b 4
  ,n{ practice z _m examples z y ne$6
,make up yr {n ?ree numb}s4 ,pick yr
base .2a1 yr expon5t .2;e1 & yr modulus
.2;m4 ,compute _% a~e"(mod m) _: & *eck
yr "w us+ ! foll{+ ,sage cell by *ang+ !
values a1 ;e1 & ;m 9 ! code & click+
8,evaluate "<,sage">04
7777777777777777777777777777777777777777
,sage
  ,9put3
# _change the value of a, e, and m to
the numbers you picked a = 75 e = 84 m =
297  # this function will output a^e
(mod m) a.powermod(e,m)
  ,|tput3
27

    ,sec;n #c4f ,applica;n3 ,5cryp;n

    ,subsec;n #c4f4a ,basic ,ciph}
    ,examples
  ,|r 3v5;n w 2 to use only capital
,5gli% lrs1 ,a to ;,z4 ,we w id5tify ea*
lr ) ! rema9d}s modulo #bf4 ,z |r
purposes is 9troduc+ basics ( 5cryp;n1
we won't 5crypt punctua;n or spaces4
7777777777777777777777777777777777777777
  ,table  #c4f4a 4  ,li/ ( ,alphabet
,5cod+
lr numb} lr numb} lr numb}4
,,,a2 #j2 ;j2 #i2 ;s2,' #ah4
;,,,b2 #a2 ;k2 #aj2 ;t2,' #ai4
;,,,c2 #b2 ;l2 #aa2 ;u2,' #bj4
;,,,d2 #c2 ;m2 #ab2 ;v2,' #ba4
;,,,e2 #d2 ;n2 #ac2 ;w2,' #bb4
;,,,f2 #e2 o2 #ad2 ;x2,' #bc4
;,,,g2 #f2 ;p2 #ae2 ;y2,' #bd4
;,,,h2 #g2 ;q2 #af2 ;z2,' #be4
,,,i2 #h2 ;r2,' #ag2 2 4
7777777777777777777777777777777777777777
,def9i;n  #c4f4b 4  ,%ift ,ciph}4
  ,a ~1%ift ~1ciph} is "o 9 : ! lrs ( !
alphabet h be5 %ift$ by "s fix$ am.t4
7777777777777777777777777777777777777777
,example  #c4f4c 4
  ,! classic example is ! s-call$
~1,caes> ~1,ciph} : %ifts ! alphabet to
! "r ?ree lrs4 ,a 2comes ;,d1 ;,b 2comes
;,e1 etc4
  ,we 5crypt lr-by-lr via ! func;n
_% e(x) .k x+3(mod #26) _: & decrypt via
_% d(x) .k x-3(mod #26) _:4
7777777777777777777777777777777777777777
,def9i;n  #c4f4d 4  ,a69e ,ciph}4
  ,an ~1a69e ~1ciph} is "o 9 : lrs >e
trans=m$ via a l9e> func;n1 _% e(x) .k
ax+b(mod n) _: ": _% a, b `e `;,z _: &
_% n `e `;,z~+ _:4 ,if _% a .k #1 _:1 ?
is a %ift ciph}4
7777777777777777777777777777777777777777
,note  #c4f4e 4
  ,to 2 able to decrypt an a69e func;n1
we ne$ _% gcd (a, n) .k #1 _: 9 ord} t
.2a is an 9v}tible ele;t4 ,we c f9d !
9v}se via ! ,euclid1n ,algori?m )
back-sub/itu;n #c4c4f4 ,recall1 ! 9v}se
( an 9v}tible ele;t is xs ,b~/ez|t
coe6ici5t4
7777777777777777777777777777777777777777
,example  #c4f4f 4
  ,! func;n _% f(x) .k #5x+14(mod
#26) _: is an example ( an a69e ciph}
func;n4

#a4 ,5ciph} ! foll{+ lrs3

a4 ,a
;b4 ;,m
#b4 ,giv5 t _% #5~-1 _l #21(mod #26) _:1
  f9d ! 9v}se ( _% f(x) .k #5x+14(mod
  #26) _:4 ,pl1se 5sure yr coe6ici5ts >e
  r$uc$ modulo _% #26 _:4
#c4 ,v}ify yr 9v}se by 3firm+ x deciph}s
  ! lrs abv4
7777777777777777777777777777777777777777
,def9i;n  #c4f4g 4  ,! ,,rsa ,algori?m4
  ,,rsa is an example ( a public-key
algori?m4 ,xs secur;y is bas$ on ! fact
t factor+ 9teg}s is a h>d problem4 ,!
process is |tl9$ 2l3
  ,to det}m9e ! keys3

#a4 ,*oose two prime numb}s _% p and
  q _:4 ,let _% n .k pq and m .k
  (p-1)(q-1) _:4
#b4 ,f9d any numb} .2;e : is relatively
  prime to .2;m4
#c4 ,det}m9e .2;d : is ! 9v}se ( .2;e
  modulo .2;m4
#d4 ,yr public key is _% (e, n) _:4
#e4 ,yr private key is _% (d, n) _:4
  ,to 5crypt_/decrypt3

#a4 ,3v}t |r message "<pla9text or
  ciph}text"> to num}ic values1 ea* lr
  tak+ up two digits3 ,a is #jj1 ;,b is
  #ja1 444 ;,z "7 #be4
#b4 ,us+ ! *os5 .2;n value1 we split !
  message 9to blocks ( ev5 l5g? ac to !
  foll{+ s*eme3

a4 ,if _% #2525 "k n "k #252525 _:1 !n !
  blocks w 2 l5g? #d
;b4 ,if _% #252525 "k n "k #25252525 _:1
  !n ! blocks w 2 l5g? #f
;c4 ,if _% #25252525 "k n "k
  #2525252525 _:1 !n ! blocks w 2 l5g?
  #h
;d4 & s on444
  if ! message doesn't fit !
  appropropriate block size1 app5d a
  numb} ( #bc's at ! 5d4 "<padd+ !
  message ) ;,x's">4
#c4 ,5cryp;n o3urs my tak+ ea* num}ic
  message block .2;,m & comput+
  _% ,m~e"(mod n) _:
#d4 ,decryp;n o3urs my tak+ ea* num}ic
  ciph} block .2;,c & comput+
  _% ,c~d"(mod n) _:
,? "ws 2c _% (,m~e")~d .k ,m~ed .k
,m~1"(mod n) _:4 ,al? we hav5't prov5 ?1
x's a result ( ,eul}'s ,toti5t ,!orem :
y'll revisit 9 ,numb} ,!ory4
7777777777777777777777777777777777777777
,example  #c4f4h 4
  ,let _% p .k #59, q .k #83 _:4 ,*oose
_% e .k #15 _: ,5crypt 8,,:ats ,,up0 &
!n decrypt ! result to 3firm x "w$4 ,d ?
by h& "<) ! help ( a calculator">4
,ex}cises ,ex}cises #a 4
  ,decrypt ! foll{+ message1 : 0 5crypt$
by ! /&>d ,caes> ciph}3 8;,l ,,,fdq
dozdbv wuxvw brx1 euxwxv40,'
,solu;n 43
  8,i c alw tru/ y1 ,brutus40
#b 4
  ,apply ! a69e %ift _% e(x) .k
#7x+11(mod #26) _: to ! /r+1 8,5crypt
me40
,solu;n 43
  ,remov+ spaces f ! ~ws & capitaliz+
"ey?+3 8,,nyzaxmoorn04 ,! 9teg} values
>e #ac1 #bd1 #be1 #j1 #bc1 #ab1 #ad1
#ad1 #ag1 #ac4
#c 4
  ,decrypt ! text : 0 5crypt$ via ! a69e
%ift _% e(x) .k #7x+11(mod #26) _:3
8,,ljnhfrn0
,solu;n 43
  8,awe"s04

    ,subsec;n #c4f4b ,numb} ,!ory ,us+
    ,sage
  ,sage has a 3v5i5t way ( det}m9+ if a
numb} is prime by ask+ if ! numb} is 9 a
set primes3
7777777777777777777777777777777777777777
,sage
  ,9put3
37 in _primes()
  ,|tput3
_true
  ,try te/+ any numb} 9 ! cell abv4
  ,if y want to j want to get a prime
numb} ( "s "picul> size "<z we want ) |r
,,rsa activ;y #c4f4c">1 we ask sage = !
next.-prime3
7777777777777777777777777777777777777777
,sage
  ,9put3
next__prime(123456)
  ,|tput3
123457
  ,! foll{+ ,sage code all{s u to f9d !
,,gcd & ,b~/ez|t coe6ici5ts via ! xgcd
comm&3
7777777777777777777777777777777777777777
,sage
  ,9put3
# _change a and b to be any positive
integers, then press _evaluate a=2345 b
= 234 l = a.xgcd(b) print(str(l[0]) +
"=" + str(a) + "*(" + str(l[1]) + ") +
_" + str(b) + "*(" + str(l[2]) + ")")
  ,|tput3
1=2345*(47) + 234*(-471)
  ,! xgcd comm& returns a li/ ( ! =m
"<gcd1 f/ ,b~/ez|t coe6ici5t1 second
,b~/ez|t coe6ici5t">1 & ! code abv
pretty-pr9ts ? 9 a r1dable =mat4
  ,9 ord} to d modul> expon5tia;n1 we
use ! p{}mod func;n4 ,= example1 to
compute _% #2022~2022"(mod #1000) _:3
7777777777777777777777777777777777777777
,sage
  ,9put3
2022.powermod(2022,1000)
  ,|tput3
584

    ,subsec;n #c4f4c ,! ,,rsa ,activ;y
,ex}cises ,ex}cises #a 4
  ,9 ? activ;y1 y w g5}ate a
public_/private key-pair4 ,y w s5d me !
public key & keep yr private key secret
"<b don't lose x6 ,if y lose yr private
key1 y won't 2 able to complete !
assign;t & w rcv no cr$it">4

a4 ,pick two prime numb}s _% p and q _:
  ( "s 9t}e/+ size4 ,make !m at l1/ six
  or sev5 digits l;g "<use ,sage's
  next.-prime">4
;b4 ,let _% m .k (p-1)(q-1) _:1 & pick
  any numb} .2;e relatively prime to
  .2;m4
;c4 ,f9d ! multiplicative 9v}se1 .2;d1 (
  .2;e modulo .2;m4
;d4 ,let _% n .k pq _:4
;e4 ,record yr numb}s _% (n, p, q, m, e,
  d) _: "s": safe "<b m* ( ? is private6
  ,keep x secret6">4
;f4 ,s5d me yr public key on via email
  "<y c click ? l9k6">  #b  z3

                     ;n "7 #aebddcdfij_&
c                     ;e "7 #gea
;g4 ,i'll s5d y an 5crypt$ message : w
  look l3
  .<#igahifche1 #cbdiiabjif,l1
  ,,,#djgijbbgcal1 #hggajifchbl1
  #ajadhaihgjdl.>,'
;h4 ,5t} ? 9=ma;n 9to ! ,sage cell 2l to
  decrypt x "<us+ yr _% n, d,  and
  c _:">1 *ange :at.-to.-do to
  8decrypt01 & !n press
  ,evaluate"<,py?on">4
i4 ,s5d me ! decrypt$ message to 3firm y
  decrypt$ x correctly "<remove ! padd$
  ;,x's if relevant1 & put appropriate
  spaces to make x a normal ,5gli%
  /ate;t4 ,= example
  8,,keepitsecretkeepitsafexx0 w n rcv
  full cr$it4
7777777777777777777777777777777777777777
  ,sage
  ,9put3
##### _>enter _>your _>information _>in
_>the _>variables _>below: ######  # _if
encrypting, set values for m, n, and e.
# _if decrypting, set values for c, n,
and d.  what__to__do = "encrypt" # _set
what__to__do to either "encrypt" or
"decrypt" (quotes matter) m = "_>keep
_>it _>secret _>keep _>it _>safe"   # _a
message to encrypt  n = 15244346903    #
_value of n = p*q e = 751 # _public
encryption exponent d = 8545627279 #
_private decryption exponent  c =
[971896385, 3249912096, 4079022731,
8771096382, 10148198704]   # _the
ciphertext as a comma separated list
(formatting matters)  ##### _>leave
_>everything _>else _>below _>alone
###### #####... unless you want to
tinker with it. _please do!  import re,
string, math  from itertools import
zip__longest  def grouper(iterable, n,
fillvalue=_none):     args =
[iter(iterable)] * n     return
zip__longest(*args, fillvalue=fillvalue)
 def encrypt():     stripped__string =
re.sub(r"\_w_\\d","", m.strip()).upper()
     int__string = ""     for i in
range(0,len(stripped__string)):
the__int =
string.ascii__uppercase.index(stripped_-
_string[i])         if the__int < 10:
         int__string += "0" +
str(the__int)         else:
int__string += str(the__int)
half__num__digits =
(ceil(math.log10(n))//2)     block__size
= (half__num__digits-1)*2 if
(int(half__num__digits*"25") > n) else
half__num__digits*2              #
append the string with x's to fill the
block size.     if (len(int__string) %
block__size > 0):         int__string +=
"23"*((block__size-(len(int__string) %
block__size))//2)      # _chunk the
message into block__size chunks; a list
of string representations      blocks =
[("".join(x)) for x in
grouper(int__string, block__size)]
cipher__blocks = []     for block in
blocks:
cipher__blocks.append(pow(int(block), e,
n))      print(cipher__blocks)  def
decrypt():     half__num__digits =
(ceil(math.log10(n))//2)     block__size
= (half__num__digits-1)*2 if
(int(half__num__digits*"25") > n) else
half__num__digits*2
plain__blocks = []     for block in c:
      plain__block = pow(int(block), d,
n)
plain__blocks.append(("0"*(block__size
_- len(str(plain__block))))+
str(plain__block))
plaintext__message="".join(plain__block-
s)      message = ""     ind = _0
 while ind < len(plaintext__message):
     message += string.ascii__uppercase[
int(plaintext__message[ind:ind+2]) ]
    ind += _2     print(message)    #
... pretend python has
forward-declaration which__function =
_["encrypt" : encrypt, "decrypt" :
decrypt_]  try:
which__function[what__to__do]() except
_key_error:     print("_please set the
variable what__to__do to either
'encrypt' or 'decrypt'.") except
_index_error:     print("_there's a
problem: _i can't decrypt your
message.")     print("_you probably have
the value of d wrong... \\n_double check
your computations of d, n, m, etc (d
needs to be positive, for example)")

,*apt} #d ,sequ;es1 ,recurr;e1 & ,9duc;n

     ,sec;n #d4a ,sequ;es & ,s}ies
7777777777777777777777777777777777777777
,def9i;n  #d4a4a 4  ,sequ;es4
  ,a ~1sequ;e is a func;n f a subset ( !
9teg}s "<usually _% .(0, 1, 2, 3
'''.) _:"> to a set .2;,s4 ,we use !
nota;n _% a;n _: to d5ote ! image ( !
9teg} .2;n1 & we call _% a;n _: !
.2;n~1-th ~1t}m ( ! sequ;e4
  ,we w (t5 write ! %orth&
_% .(a;n".) _: to d5ote ! complete
sequ;e ": _% n `e `;,n _:4
7777777777777777777777777777777777777777
,example  #d4a4b 4
  ,f9d _% a1, a2, a3, a4 _: = ! sequ;es3

#a4
  _%
  a;n .k   #1
         ?33333#
          ;n~2"
  _:
#b4 _% a;n .k #3*2~n _:
#c4 _% a;n .k -#5+3n _:
7777777777777777777777777777777777777777
,def9i;n  #d4a4c 4  ,geometric ,sequ;es4
  ,a ~1geometric ~1progres.n is a sequ;e
( ! =m3
_% a, ar, ar~2, ar~3, ''', ar~n, ''' _:
) ! ~19itial ~1t}m .2a & ! ~1common
~1ratio .2;r4
  ,a ~1>i?metic ~1progres.n is a sequ;e
( ! =m3
_% a, a+d, a+2d, a+3d, ''', a+nd, ''' _:
) ! ~19itial ~1t}m .2a & ! ~1common
~1di6};e .2;d4
7777777777777777777777777777777777777777
,def9i;n  #d4a4d 4  ,recurr;e ,rela;ns
_/ ,recursive ,sequ;es4
  ,a ~1recurr;e ~1rela;n = a sequ;e
_% .(a;n".) _: is an equa;n t expres.ns
_% a;n _: 9 t}ms ( previ|s t}ms4
  ,a sequ;e is call$ a ~1solu;n ( a
recurr;e rela;n if xs t}ms satisfy !
recurr;e rela;n4
  ,we c alw ?9k ( a sequ;e z a func;n1 s
! recurr;e _% a;n .k a;n-1"+a;n-2 _: is
! func;n3

           def a"<n">3           retur_&
n a"<n-#a"> "6 a"<n-#a">
) 9f9ite recur.n4
7777777777777777777777777777777777777777
,example  #d4a4e 4  ,title ,fibona3i
,sequ;e4
  ,! ~1,fibona3i ~1sequ;e _% ,f0, ,f1,
,f2, ''' _: is def9$ by ! recurr;e3
_% ,f;n .k ,f;n-1"+,f;n-2" ,for n .1:
#2,  where ,f0 .k #0, ,f1 .k #1 _:
  ,note t ! ,fibona3i sequ;e has bo? !
recursive def9i;n .1& a def9i;n = ! f/
two t}ms ( ! sequ;e4
7777777777777777777777777777777777777777
,example  #d4a4f 4
  ,3sid} ! recurr;e _% a;n .k
-#3a;n-1"+4a;n-2 _:4 ,>e ! foll{+
sequ;es solu;ns to ! recurr;e8

#a4 _% a;n .k #0 _:
#b4 _% a;n .k #1 _:
#c4 _% a;n .k #2~n _:
#d4 _% a;n .k (-4)~n _:
7777777777777777777777777777777777777777
,note  #d4a4g 4
  ,a recurr;e has a unique solu;n if x
has 9itial data4
  ,? wd 2 a func;n def9$ ) f9ite
recur.n1 s ! recurr;e _% ,f;n .k
,f;n-1"+,f;n-2 _: ) _% ,f0 .k #0 _: &
_% ,f1 .k #1 _:1 ! ,fibona3i sequ;e1 is
! func;n3

         def ,f"<n">3             if ;_&
n "7"7 #j3                 return #j_&
          elif ;n "7"7 #a3_&
    return #a             else3_&
         return ,f"<n-#a"> "6 ,f"<n-#a_&
">
7777777777777777777777777777777777777777
,example  #d4a4h 4
  ,f9d ! unique solu;n to ea* recurr;e3

#a4 _% a;n .k #2a;n-1"-3 _: ) _% a0 .k
  -#1 _:
#b4 _% a;n .k #2na;n-1 _: ) _% a0 .k
  #3 _:
7777777777777777777777777777777777777777
,note  #d4a4i 4
  ,:5 f9d+ ! g5}al =m ( a sequ;e1
cr1tiv;y is requir$4
  ,look = patt}ns )9 ! sequ;e

_4 ,look = a common di6};e "<>i?metic">
_4 ,look = a common ratio "<geometric">
_4 ,d lat} t}ms dep5d on previ|s t}ms 9
  a recursive way8
_4 ,>e "! cycles am;g ! t}ms8
_4 444
7777777777777777777777777777777777777777
,example  #d4a4aj 4
  ,f9d a simple =mula or rule t g5}ates
! t}ms ( ! sequ;e1 & give ! next ?ree
t}ms ( ! sequ;e4

#a4 _% #7, #11, #15, #19, #23, #27, #31,
  ''' _:
#b4 _% #1, #10, #11, #100, #101, #110,
  #111, #1000, ''' _:
#c4 _% #1, #3, #15, #105, #945, #10395,
  #135135, ''' _:
#d4 _% #2, #2, #2, #3, #3, #3, #3, #3,
  #5, #5, #5, #5, #5, #5, #5, ''' _:
#e4 _% #2, #4, #16, #256, #65536,
  #4294957296, ''' _:
  ,= ? la/ example1 ! numb}s >e huge4
,if y're r1d+ on ! web-bas$ v}.n ( ?
book1 ? is an 9t}active calulator4 ,y c
type :at y want to compute & press
',evaluate "<,sage">4' ,= m 9=ma;n1 ref}
to ! ,sage app5dix ,a
7777777777777777777777777777777777777777
,sage
  ,9put3
16^2
  ,|tput3
256
7777777777777777777777777777777777777777
,def9i;n  #d4a4aa 4  ,s}ies4
  ,let _% .(a;n".) _: 2 a sequ;e4 ,we
def9e a ~1s}ies ( ! sequ;e to 2 !
summa;n ( "s subset ( ! t}ms ( ! sequ;e4
,we d5ote ! sum by a capital sigma )
sub- & sup}script 9=ma;n 9 ! foll{+
3v5;nal way3
_% ".,s%index variable, lower
bound<upper bound}(sequence rule in
terms of index variable) _:
  ,= example1 ! summa;n ( t}ms f #j to
.2;n is express$3
_% ".,s%i .k #0<n}a;i .k a0+a1+a2+'''
+a;n-1"+a;n _:
7777777777777777777777777777777777777777
,example  #d4a4ab 4
  ,f9d ! value ( ! sum3

#a4 _% ".,s%j .k #0<8}(1+(-1)~j") _:
#b4 _% ".,s%k `e .(1, 3, 5.)}(k~2"+2) _:
#c4 _% ".,s%j .k #1<2}".,s%k .k
  #1<5}(j-k) _:
#d4 _% ".,s%j .k #1<2}".,s%k .k
  #1<5}(k-j) _:
7777777777777777777777777777777777777777
,example  #d4a4ac 4
  ,v}ify ! foll{+ =mula = ! sum ( a
geometric sequ;e1 if _% r /.k #1 _:1
_%
".,s%k .k #0<n}ar~k .k  ;a-ar~n+1"
                       ?3333333333#
                           #1-r
_:
4
7777777777777777777777777777777777777777
,example  #d4a4ad 4
  ,%{ t
_% ".,s%j .k #1<n}(a;j"-a;j-1") .k
a;n"-a0 _:
7777777777777777777777777777777777777777
,example  #d4a4ae 4
  ,f9d a =mula = ! foll{+ sums1 us+ !
telescop+ example #d4a4ad3

#a4 ,us+ ! sequ;e _% a;n .k n~2 _:1 f9d
  a =mula = ! sum _% ".,s%k .k #1<n}k _:
  by ! f9d+ ! sum two ways4
7777777777777777777777777777777777777777
,note  #d4a4af 4
  ,example #d4a4ae %{s u ! foll{+ =mula
= an >i?metic s}ies3
_%
".,s%k .k #1<n}k .k  ;n(n+1)
                    ?3333333#
                       #2
_:
  ,we w v}ify 9 ,ex}cise #d4a4e sum
=mula = ! s}ies ( squ>es3
_%
".,s%k .k #1<n}k~2 .k  ;n(2n+1)(n+1)
                      ?3333333333333#
                            #6
_:
7777777777777777777777777777777777777777
,comput} ,corn}4
  ,recurr;e rela;ns >e l recursive
func;ns4 ,= example1 y c f9d ! .2n?
,fibona3i numb}1 _% ,f;n _:1 by evaluat+
fibona3i"<n">
7777777777777777777777777777777777777777
  ,sage
  ,9put3
def fibonacci(n):     if n == 0:
return _0     elif n== 1:         return
_1     return fibonacci(n-1) +
fibonacci(n-2)  ## list out the first 21
fibonacci numbers
print(list(map(fibonacci, range(0,
20))))  ## _just type fibonacci(15) to
get the 15th fibonacci number.
  ,! 9itial 3di;ns ( a a recurr;e
gu>antee t x has a unique solu;n4 ,~!
9itial 3di;ns >e ! t}m9al_/base 3di;ns =
! recursive func;ns4 ,2c x's !oretical1
ma? c g on ="e1 comput}s 5t} 9f9ite
loops3
7777777777777777777777777777777777777777
  ,sage
  ,9put3
def forever(n):     # no base case;
won't stop     return forever(n-1)
forever(1) ## press _evaluate(_python)
to watch it go on forever. _the
algorithm won't halt until the runtime
stack runs out of memory.
,ev5tually1 we'll get ,recur.n,}ror3
maximum recur.n dep? exce$$ :ile call+ a
,py?on object
,ex}cises ,ex}cises #a 4
  ,f9d ! f/ five t}ms ( ! sequ;e
_% .(a;n".) _:1 2g9n+ ) _% n .k #0 _:3

a4 _% a;n .k #2~n"+3 _:
;b4 _% a;n .k n~n+1 _:
;c4 _% a;n .k `;(n_/2`;)+`~(n_/2`~) _:
;d4 _% a;n .k #6a;n-1, a0 .k #2 _:
;e4 _% a;n .k a;n-1"+3a;n-2, a0 .k #1,
  a1 .k #2 _:
,solu;n 43

a4 _% .(4, 5, 7, 11, 19.) _:
;b4 _% .(0, 1, 8, 81, 1024.) _:
;c4 _% .(0, 1, 2, 3, 4.) _:
;d4 _% .(2, 12, 72, 432, 2592.) _:
;e4 _% .(1, 2, 5, 11, 26.) _:
#b 4
  ,is ! sequ;e _% .(a;n".) _: a solu;n (
! recurr;e rela;n _% a;n .k
#8a;n-1"-16a;n-2 _: if

a4 _% a;n .k #0 _:
;b4 _% a;n .k #2n _:
;c4 _% a;n .k #2~n _:
;d4 _% a;n .k #4~n _:
,solu;n 43

a4 ,yes
;b4 ,no
;c4 ,no
;d4 ,yes
#c 4
  ,f9d a solu;n to ! recurr;e rela;n

a4 _% a;n .k #3a;n-1, a0 .k #2 _:
;b4 _% a;n .k a;n-1"+n, a0 .k #1 _:
;c4 _% a;n .k na;n-1, a0 .k #1 _:
,solu;n 43

a4 _% a;n .k #2*3~n _:
;b4
  _%
  a;n .k  ;n~2"+n+2
         ?333333333#
             #2
  _:
;c4 _% a;n .k n& _:
#d 4
  ,f9d ! value ( ea* ( ! foll{+ sums3

a4 _% ".,s%k .k #0<8}3*2~k _:
;b4 _% ".,s%k .k #1<8}2~k _:
;c4 _% ".,s%k .k #1<8}(1+(-1)~k") _:
;d4 _% ".,s%k .k #1<8}(2~k+1"-2~k") _:
;e4 _% ".,s%k .k #50<100}k _:
,solu;n 43

a4 #aecc
;b4 #eaj
;c4 #h
;d4 #eaj
;e4 #chbe
#e 4
  ,us+ ! telescop+ example #d4a4ad ) !
sequ;e _% a;n .k (n+1)~3 _:1 d}ive a
=mula = _% ".,s%k .k #1<n}k~2 _:
,solu;n 43
  ,? "o's a lot ( fun1 s let's d x 9 a
lot ( detail4 ,? is approa* ,blaise
,pascal us$ to 4cov} ! =mula 9 8 #afed
.7,trait~/e du triangle.'
.1>i?m~/etique.'4
  ,let _% a;n .k (n+1)~3 _:4 ,!n f
example #d4a4ad1 we h t3
_%
".,s%j .k #1<n}(j+1)~3"-j~3"-
                  .k a;n"-a0-

".,s%j .k #1<n}(j+1)~3"-j~3"-
                  .k (n+1)~3"-(0+1)~3"-

".,s%j .k #1<n}j~3"+3j~2"+3j+1-j~3"-
                  .k n~3"+3n~2"+3n+1-1-

".,s%j .k #1<n}3j~2"+3j+1-
                  .k n~3"+3n~2"+3n-

".,s%j .k #1<n}3j~2"+".,s%j .k #1<n}3j+-
".,s%j .k #1<n}1  .k n~3"+3n~2"+3n-

#3".,s%j .k #1<n}j~2"+3".,s%j .k #1<n}j-
+".,s%j .k #1<n}1 .k n~3"+3n~2"+3n-

#3".,s%j .k #1<n}j~2"-
                  .k n~3"+3n~2"+3n-3".,-
s%j .k #1<n}j-".,s%j .k #1<n}1
_:
  ,we h f example #d4a4ae t
_%
".,s%j .k #1<n}j .k  ;n(n+1)
                    ?3333333#
                       #2
_:
& if we add _% #1 _: a total ( .2;n "ts1
we h _% ".,s%j .k #1<n}1 .k n _:4 ,plu7+
~! in1 we f9d3
_%
#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+3n--
3".,s%j .k #1<n}j-".,s%j .k #1<n}1
-

#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+3n--
3( ;n(n+1) )-n
-
  ?3333333#
-
     #2
-

#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+2n--
3( ;n~2"+n )
-
  ?3333333#
-
     #2
-

#3".,s%j .k #1<n}j~2" .k  #2n~3" + #6n~-
2" + #4n - #3n~2" - #3n
                         ?333333# ?3333-
33# ?333# ?333333# ?333#
                            #2       #2-
     #2      #2     #2
-

#3".,s%j .k #1<n}j~2" .k  #2n~3"+3n~2"+-
n
                         ?3333333333333-
3#
                                #2-

-

#3".,s%j .k #1<n}j~2" .k  ;n(2n+1)(n+1)-

                         ?3333333333333-
#
                               #2-

-

".,s%j .k #1<n}j~2"   .k  ;n(2n+1)(n+1)-

                         ?3333333333333-
#
                               #6-

_:
: is exactly ! =mula y le>n$ 9 calculus6
#f 4
  ,use ! =mula = geometric s}ies #d4a4ac
to %{ t
_% #1+2+2~2"+2~3+ ''' #2~n .k
#2~n+1"-1 _:
,solu;n 43
  ,not+ t ? is a geometric s}ies )
common ratio #b & f/ t}m #a1 let _% r .k
#2, a .k #1 _: 9 ! geometric s}ies
=mula3
_%
".,s%k .k #0<n}2~k" .k  #1-2~n+1"
                       ?333333333#
                          #1-2

.k #2~n+1"-1
_:
,? is :y a b9>y numb} : is all #a's is
alw "o less ?an ! next p{} ( #b1 e4g4
_% #1111;two .k #15;ten _:

 ,sec;n #d4b ,solv+ ,recurr;e ,rela;ns

    ,subsec;n #d4b4a ,motiva;n1 or1 :y d
    ,i c>e8
  ,let's imag9e t we want$ to f9d !
#aj1jjjth t}m ( ! sequ;e _% a;n .k
a;n-2 _: ) _% a0 .k #1, a1 .k #3 _:4 ,!
sequ;e is v simple3 _% .(1, 3, 1, 3, 1,
3, '''.) _:4
  ,x turns | t ! solu;n to ? recurr;e is
_% a;n .k #2+(-1)~n+1 _:4 ,we c directly
compute ! value1 & x takes ,sage,ma? ab
#aej microseconds to give u ! answ}3
7777777777777777777777777777777777777777
,sage
  ,9put3
%%time def nonrec(x): return _2 +
pow(-1, x+1); print(nonrec(10000))
  ,|tput3
_1 _>cpu times: user 111 '\x00b5's, sys:
57 '\x00b5's, total: 168 '\x00b5's _wall
time: 144 '\x00b5's
  ,b if we want$ to actually h ! comput}
f9d ! #aj1jjjth value via ! recursive
def9i;n1 ,sage "<comput+ via ,py?on">
c't ev5 d x3
7777777777777777777777777777777777777777
,sage
  ,9put3
%%time def recursive(x): if x == 0:
return 1; elif x == 1:     return 3;
else:     return recursive(x-2)
print(recursive(10000))
  ,|tput3
_runtime_error: maximum recursion depth
exceeded while calling a _python object
  ,explicit solu;ns >e bett} :5 we want
to 2 able to actually det}m9e specific
values ( a recurr;e4

    ,subsec;n #d4b4b ,solv+ recurr;e
    rela;ns
7777777777777777777777777777777777777777
,example  #d4b4a 4
  ,! ,t{}s ( ,hanoi is a puzzle ) ! goal
( mov+ all disks f "o peg to ano!r peg4
,! puzzle has ! foll{+ rules3

#a4 ,place all ! disks on ! f/ peg 9
  ord} ( size ) ! l>ge/ on bottom4
#b4 ,move "o disk at a "t to any o!r
  peg4 ,a move is valid only if a small}
  disk is plac$ on top a l>g} "o4
7777777777777777777777777777777777777777
,image ,,id3 image-#ba
,descrip;n3 ,! ,anima;n ( ! ,t{}s (
,hanoi puzzle by ,&r~/e ,k>wa?4 ,"! >e
?ree pegs & 9 ? picture f|r disks4 ,!
anima;n proce$s to %{ mov+ ! top disk to
! f> "r peg4 ,! next disk to ! middle
peg1 !n ! smalle/ disk to ! second
peg444 & s on until we h mov$ all disks
to ! ?ird peg4
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4 ,figure
#d4b4b 4  ,anima;n ( ! ,t{}s ( ,hanoi
puzzle ) #d disks
  ,let _% ,h;n _: d5ote ! numb} ( moves
to solve ! puzzle ) .2;n disks4 ,|r goal
is to f9d a solu;n to ! sequ;e
_% .(,h;n".) _:4

#a4 ,:at is ! recurr;e rela;n t
  describes _% ,h;n _: 9 t}ms ( previ|s
  values8
#b4 ,solve ! recurr;e rela;n4
#c4 ,! /ory a3ompany+ ! puzzle says t
  monks >e curr5tly solv+ ! puzzle ) #fd
  gold5 disks1 & t ! _w w 5d :5 !y
  f9ally solve ! puzzle4 ,%d we 2 3c}n$8
  ,:y or :y n8
7777777777777777777777777777777777777777
,example  #d4b4c 4
  ,recall t a bit/r+ is a /r+ 3ta9+ only
#j's & #a's4 ,h{ _m bit/r+s ( l5g? .2;n
d n 3ta9 ?ree 3secutive #j's8
7777777777777777777777777777777777777777
,example  #d4b4d 4
  ,a v5d+ ma*9e 4p5s+ books ( /amps
a3epts `s#a co9s1 `s#a bills1 & #e
bills4 ,f9d a recurr;e rela;n = ! numb}
( ways to deposit .2;n doll>s 9 ! v5d+
ma*9e1 ": ! ord} 9 : ! bills >e deposit$
matt}s4

    ,subsec;n #d4b4c ,solv+ "picul>ly
    nice recurr;e rela;ns
7777777777777777777777777777777777777777
,def9i;n  #d4b4e 4  ,l9e>1 ,homog5e|s
,recurr;e ,rela;ns ( ,degree ;k4
  ,a ~7l9e> homog5e|s recurr;e rela;n (
degree~' .2;k ~7) 3/ant coe6ici5ts~' is
a recurr;e rela;n ( ! =m
_% a;n .k c1a;n-1"+c2a;n-2+'''
+c;k"a;n-k _:
": _% c1, c2, ''', c;k _: >e r1l numb}s
) _% c;k /.k #0 _:4
7777777777777777777777777777777777777777
,example  #d4b4f 4

#a4 ,! ,fibona3i sequ;e3 _% ,f;n .k
  ,f;n-1"+,f;n-2 _: is l9e>1 & xs
  coe6ici5ts >e #a & #a4 ,! degree is
  #b4
#b4 _% ,d;n .k #2,d;n-1"+,d;n-5 _: is
  l9e>1 & x coe6ici5ts >e #b1 #j1 #j1
  #j1 #a4 ,xs degree is #e4
7777777777777777777777777777777777777777
,note  #d4b4g 4
  ,= ! purposes ( ? le>n+ ! 3cept1 we w
re/rict |rvs to degree two recurr;es4 ,?
m1ns ! "*i/ic equa;ns >e quadratic & c 2
easily solv$4 ,! same process wd apply
if ! "*i/ic equa;n 7 ( hi<} degree - x's
j t solv+ ~? equa;ns isn't /rai<t=w>d &
takes away f focus+ on ! new mat}ial4
7777777777777777777777777777777777777777
,note  #d4b4h 4
  ,if _% a;n .k r~n _: is a solu;n to !
"<degree two"> recurr;e rela;n _% a;n .k
c1a;n-1"+c2a;n-2 _:1 !n we we c plug x
in3
_%
a;n"                          .k c1a;n--
1"+c2a;n-2"
r~n"                          .k c1r~n--
1"+c2r~n-2"
 ,divide both sides by r~n-2"
r~2"                          .k c1r+c2
r~2"-c1r-c2                   .k #0
_:
7777777777777777777777777777777777777777
,def9i;n  #d4b4i 4  ,"*i/ic ,equa;n4
  ,we call ! equa;n _% r~2"-c1r-c2 .k
#0 _: ! ~1"*i/ic ~1equa;n ( ! recurr;e
rela;n4 ,! solu;ns to ? equa;n >e !
~1"*i/ic ~1roots~'4
7777777777777777777777777777777777777777
,!orem  #d4b4aj 4
  ,let _% c1 _: & _% c2 _: 2 r1l numb}s4
,suppose t ! "*i/ic equa;n
_% r~2"-c1r-c2 .k #0 _:
has two 4t9ct roots _% r1 _: & _% r2 _:4
,!n ! sequ;e _% .(a;n".) _: is a solu;n
to ! recurr;e rela;n
_% a;n .k c1a;n-1"+c2a;n-2 _:
if1 & only if
_% a;n .k .a1r1~n"+.a2r2~n _:
= _% n .k #0, #1, #2, ''' _: & _% .a1 _:
& _% .a2 _: >e 3/ants4
7777777777777777777777777777777777777777
,example  #d4b4aa 4
  ,solve _% a;n .k a;n-1"+2a;n-2 _: ":
_% a0 .k #2 _: & _% a1 .k #7 _:4
,solu;n 43
7777777777777777777777777777777777777777
,sage
  ,9put3
v=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
def f(n):     return 3*pow(2,n)+pow(-1,
n+1)  def recur(n):     if n==0:
return _2     elif n==1:         return
_7     else:         return recur(n-1) +
2*recur(n-2)  print("_explicit solution:
_" + str(map(f,v))) print("\n")
print("_recursive sequence: _" +
str(map(recur,v)))
  ,|tput3
_explicit solution: [2, 7, 11, 25, 47,
97, 191, 385, 767, 1537, 3071]
_recursive sequence: [2, 7, 11, 25, 47,
97, 191, 385, 767, 1537, 3071]
7777777777777777777777777777777777777777
,!orem  #d4b4ab 4
  ,let _% c1 _: & _% c2 _: 2 r1l numb}s4
,suppose t ! "*i/ic equa;n
_% r~2"-c1r-c2 .k #0 _:
has "o & only "o root _% r1 _:4 ,!n !
sequ;e _% .(a;n".) _: is a solu;n to !
recurr;e rela;n
_% a;n .k c1a;n-1"+c2a;n-2 _:
if1 & only if
_% a;n .k .a1r1~n"+.a2nr1~n _:
= _% n .k #0, #1, #2, ''' _: & _% .a1 _:
& _% .a2 _: >e 3/ants4
7777777777777777777777777777777777777777
,note  #d4b4ac 4
  ,note ! small di6};es 2t ~! /ate;ts4
,x is significant ) respect to h{ y
solve ! sequ;e4
7777777777777777777777777777777777777777
,example  #d4b4ad 4
  ,solve _% a;n .k #4a;n-1"-4a;n-2 _: ":
_% a0 .k #6 _: & _% a1 .k #8 _:4
7777777777777777777777777777777777777777
,example  #d4b4ae 4
  ,f9d an explicit =mula = ! ,fibona3i
numb}s1 _% ,f;n .k ,f;n-1"+,f;n-2 _: )
_% ,f0 .k #0 _: & _% ,f1 .k #1 _:4
7777777777777777777777777777777777777777
,example  #d4b4af 4
  ,solve _% a;n .k #7a;n-1"-12a;n-2 _: )
_% a0 .k #12 _: & _% a1 .k #48 _:
,ex}cises #d4b4d ,ex}cises #a 4
  ,f9d a recurr;e rela;n = ! numb} (
ways to give "s"o .2;n doll>s if y h #a
doll> co9s1 #b doll> co9s1 #b doll>
bills1 & #d doll> bills ": ! ord} 9 : !
co9s & bills >e pd matt}s4
,solu;n 43
  _% a;n .k a;n-1"+2a;n-2"+a;n-4 _:
#b 4
  ,solve ! recurr;e rela;n _% a;n .k
a;n-1"+2~n _: ) _% a0 .k #5 _:4
,solu;n 43
  _% a;n .k #3+2~n+1 _:4  ,we %d use
telescop+ or it}a;n "h4  ,= example1
telescop+ gives
_%
a1-a0       .k #2~1"
a2-a1       .k #2~2"
a3-a2       .k #2~3"
'''         '''
a;n"-a;n-1" .k #2~n
_:
: 8telescopes0 to _% a;n"-a0 .k
#2~n+1"-2 _:4  ,sub/itut+ _% a0 .k #5 _:
& solv+ = _% a;n _: completes ! solu;n4
#c 4
  ,%{ t _% #4~n _: is a solu;n to !
recurr;e rela;n _% a;n .k
#3a;n-1"+4a;n-2 _:4
,solu;n 43
  ,we claim _% a;n .k #4~n _: "ws4 ,plug
x in3 _% #4~n .k
#3(4~n-1")+4(4~n-2") _:4 ,? "ws - j
simplify ! "r-h& side4
#d 4
  ,f9d ! solu;n to ! recurr;e rela;n
_% a;n .k #3a;n-1"+4a;n-2 _: ) 9itial
t}ms _% a0 .k #2 _: & _% a1 .k #3 _:4
,solu;n 43
  ,by ! ,"*i/ic ,root ,te*nique4 _% a;n
.k #4~n"+(-1)~n _:4
#e 4
  ,f9d ! solu;n to ! recurr;e rela;n
_% a;n .k #3a;n-1"+4a;n-2 _: ) 9itial
t}ms _% a0 .k #5 _: & _% a1 .k #8 _: us+
! "*i/ic root me?od44
,solu;n 43
_%
a;n .k  #13 (4)~n"+ #12 (-1)~n
       ?333#       ?333#
        #5          #5
_:
#f 4
  ,:ile walk+ up /airs y notice t y h a
habit ( us+ #c ways ( tak+ "o /ep & #d
ways ( tak+ two /eps at a "t4 ,f9d a
recurr;e rela;n = ! numb} ( ways to g up
.2;n /eps4 ,solve ! recurr;e rela;n giv5
! 9itial 3di;ns ( _% a0 .k #1 _: & _% a1
.k #3 _: us+ ! "*i/ic root me?od4
,solu;n 43
  ,! recurr;e is _% a;n .k
#3a;n-1"+4a;n-2 _:4 ,! solu;n ) ! giv5
9itial 3di;ns is
_%
a;n .k  #4~n+1" + (-1)~n"
       ?3333333# ?3333333#
          #5        #5
_:
#g 4
  ,solve ! recurr;e _% a;n .k
#3a;n-1"+40a;n-2 _: ": _% a0 .k #5 _: &
_% a1 .k #14 _: us+ ! "*i/ic root me?od4
,solu;n 43
  _% a;n .k #3(8)~n"+2(-5)~n _:
#h 4
  ,solve ! recurr;e _% a;n .k
#4a;n-1"+21a;n-2 _: ": _% a0 .k #18 _: &
_% a1 .k #366 _: us+ ! "*i/ic root
me?od4
,solu;n 43
  _% a;n .k #42(7)~n"-24(-3)~n _: y cd
write _% a;n .k #6(7)~n+1"+8(-3)~n+1 _:

    ,sec;n #d4c ,ma!matical ,9duc;n
7777777777777777777777777777777777777777
,def9i;n  #d4c4a 4  ,ma!matical ,9duc;n4
  ,to prove t a /ate;t _% ,p(n) _: is
true = all 9teg}s _% n .1: #0 _:1 we use
! ~7pr9cipal ( ma?~' ~19duc;n~'4 ,!
process has two core /eps3

#a4 ,basis /ep3 ,prove t _% ,p(0) _: is
  true4
#b4 ,9ductive /ep3 ,assume t _% ,p(k) _:
  is true = "s value ( _% k .1: #0 _: &
  %{ t _% ,p(k+1) _: is true4
7777777777777777777777777777777777777777
,note  #d4c4b 4
  ,y c ?9k ( ma? 9duc;n l an 9f9ite
ladd}4 ,f/1 y put yr foot on ! bottom
rung4 ,if y're able to g f ! .2;k-th
rung to ! _% k+1 _:-st rung1 y'll 2 able
to climb ="e4
7777777777777777777777777777777777777777
,example  #d4c4c 4
  ,! model ( 9duc;n w alw foll{ ! foll{+
/ructure3
7777777777777777777777777777777777777777
,pro( 4
  ,pro( by ma? 9duc;n4

#a4 ,basis /ep4 .<"h y prove _% ,p(0) _:
  is true.>
#b4 ,9ductive /ep4 ,assume _% ,p(k) _:
  is true = "s _% k .1: #0 _:
  .<explicitly say :at ? /ate;t is4 ,?
  is call$ ! ~19ductive ~1hypo!sis~'.>4
  ,we w %{ _% ,p(k+1) _: is true4
    .<"h y actually prove _% ,p(k+1) _:
  is true4 ,y %d use ! 9ductive
  hypo!sis4 ,if y didn't1 y've made an
  }ror "s":.>
7777777777777777777777777777777777777777
,example  #d4c4d 4
  ,prove t
_%
#1+2+3+''' +n .k  ;n(n+1)
                 ?3333333#
                    #2
_:
4
7777777777777777777777777777777777777777
,example  #d4c4e 4
  ,prove t
_%
a+ar+ar~2"+ar~3+''' +ar~n .k  ;ar~n+1"--
a
                             ?333333333-
3#
                                 ;r-1-

_:
if _% r /.k #1 _:4
7777777777777777777777777777777777777777
,example  #d4c4f 4

#a4 ,f9d a =mula =
  _%
    #1  +  #1  +  #1  +''' +   #1
  ?3333# ?3333# ?3333#      ?3333333#
   #1*2   #2*3   #3*4        ;n(n+1)
  _:
  = _% n .1: #1 _: by exam9+ small
  values ( .2;n4
#b4 ,prove ! 3jecture y j made4
7777777777777777777777777777777777777777
,example  #d4c4g 4
  ,prove t _% #2~n .1 n~2 _: = _% n .1
#4 _:
7777777777777777777777777777777777777777
,example  #d4c4h 4
  ,:at is wr;g ) ! foll{+ 8pro(0 t all
horses >e ! same color8
  ,pro( by 9duc;n3

_4 ,base /ep3 ! /ate;t _% ,p(1) _: is !
  /ate;t 8"o horse is ! same color z
  xf04 ,? is cle>ly true4
_4 ,9duc;n /ep3 ,assume t _% ,p(k) _: is
  true = "s 9teg} .2;k4 ,t is1 any gr|p
  ( .2;k horses >e all ! same color4
    ,3sid} a gr|p ( _% k+1 _: horses4
  ,let's l9e !m up4 ,if we look at f/
  .2;k horses1 |r 9duc;n hypo!sis tells
  u !y >e ! same color4 ,simil>ly1 if we
  look at ! la/ .2;k horses1 !y >e al !
  same color4 ,? %{s t all _% k+1 _:
  horses >e ! same color4
,?us1 by ma? 9duc;n1 all horses >e !
same color4
7777777777777777777777777777777777777777
,def9i;n  #d4c4i 4  ,/r;g ,9duc;n4
  ,! pr9cipal ( ~7/r;g ma? 9duc;n~' is l
! s-call$ w1k 9duc;n1 except 9/1d (
prov+ _% ,p(k) $o ,p(k+1) _:1 we assume
t _% ,p(m) _: is true = all values (
.2;m s* t _% #0 "k: m "k: k _:1 & we %{
t ! next /ate;t1 _% ,p(k+1) _:1 is true4
7777777777777777777777777777777777777777
,example  #d4c4aj 4
  ,let _% ,p(n) _: 2 ! /ate;t t 8po/age
( .2;n c5ts c 2 =m$ us+ j #d c5t & #g
c5t /amps04 ,prove _% ,p(n) _: is true =
_% n .1: #18 _:4
,solu;n 43
  ,"h's "o way to approa* ! problem4
,2g9 by %{+ we c d ! basis1 see if we c
f9d a patt}n1 !n make a =mal pro(3

_4 _% #18 .k #7*2+4*1 _:
_4 _% #19 .k #7*1+4*3 _:
_4 _% #20 .k #7*0+4*5 _:
_4 _% #21 .k #7*3+4*0 _:
_4 _% #22 .k #7*2+4*2 _:
_4 _% #23 .k #7*1+4*4 _:
_4 _% #24 .k #7*0+4*6 _:
_4 _% #25 .k #7*3+4*1 _:
_4 _% #26 .k #7*2+4*3 _:
_4 _% #27 .k #7*1+4*5 _:
_4 _% #28 .k #7*0+4*7 _:
,d y notice a patt}n8 ,take a c|ple
mo;ts to ?9k ab x1 !n let's d ! pro(4
7777777777777777777777777777777777777777
,pro( 4
  ,basis /ep3 ,we c =m #ah c5t po/age
us+ two #g & "o #d c5t /amp4
  ,9ductive /ep3 ,assume t "o c =m
po/age = all values f #ah c5ts up to
.2;k c5ts4 ,n{ we're ask$ to =m
_% k+1 _: c5ts4 we "k t we c =m .2;k
c5ts1 s1 )|t loss ( g5}al;y1 let's
assume t x takes .2;s #g c5t /amps &
.2;t #d c5t /amps4 ,t is3
_% k .k #7s+4t _:
,n{1 if _% s .1: #1 _:1 !n we c d !
foll{+1 add+ "o to bo? sides 9 two
di6}5t ways3
_% k+1 .k #7s+4t-7+8 _:
,comb9+ l t}ms we h
_% k+1 .k #7(s-1)+4(t+2) _:
,if1 on ! o!r h&1 _% s .k #0 _:1 !n we
ne$ to add "o 9 a di6}5t way3
_% k+1 .k #7s+4t+21-20 _:
or1 comb9+ l t}ms3
_% k+1 .k #7(s+3)+4(t-5) _:
,?us1 by 9ductive hypo!sis1 if we c =m
.2;k c5ts1 ,i c =m _% k+1 _: c5ts
po/age4
  ,"!=e1 by ma!matical 9duc;n1 e po/age
co/ grt} ?an or equal to #ah c 2 =m$ us+
#d & #g c5t /amps4
7777777777777777777777777777777777777777
,example  #d4c4aa 4
  ,prove t e positive 9teg} has a b9>y
expan.n1 t is1 x is ei a p{} ( two or x
is a sum ( 4t9ct p{}s ( two4
7777777777777777777777777777777777777777
,note  #d4c4ab 4  ,! di6};e 2t 'w1k' &
'/r;g' 9duc;n4
  ',regul>'_/'w1k' 9duc;n foll{s !
patt}n3

#a4 ,basis /ep4
#b4 ,9ductive hypo!sis is _% ,p(k) _: is
  true
#c4 ,we %{ t _% ,p(k) _: implies t
  _% ,p(k+1) _: is true
,t is1 we use ? 9duc;n process = claims
": x's 3v5i5t to %{ t ! patt}n foll{s
sequ5tially 9 a 3v5i5t way4 ,/rai<t-=w>d
examples >e ! addi;n =mulas2
  ',/r;g' 9duc;n foll{s ! patt}n3

#a4 ,basis /ep"<s">4   .<may ne$ m ?an
  "o basis1 j l "s recurr;e rela;ns.>
#b4 ,we %{ t ! hypo!sis implies ! next
  ele;t 9 ! sequ;e1 _% ,p(k+1) _:1 is
  true  .<l 2f.>
! di6};e 2t ? & ! previ|s 9duc;n process
is t x's "s"ts .1n .13v5i5t to prove t
_% ,p(k) _: directly 3nects to
_% ,p(k+1) _:4  ,9/1d1 we / ne$ to %{ t
! .1next ele;t 9 ! sequ;e _% ,p(k+1) _:
is true by app1l+ to a previ|s ele;t 9 !
seq;e4
  ,relevant examples >e ~? l ! b9>y
repres5ta;n ( a numb} - t .2;k has a
b9>y repres5ta;n doesn't immly tell u
_% k+1 _: does1 b if we c cut ! numb} 9
half & use ! b9>y repres5ta;n ( t numb}
to scale-up 9 ord} to build a b9>y
repres5ta;n ( _% k+1 _:4
  ,same ?+ ,we sep>ate 'w1k' & '/r;g'
9duc;n1 b !y're r1lly all ! same ?+4
,x's j t :5 x's 3v5i5t to %{ _% ,p(k) $o
,p(k+1) _:1 we write few} ~ws = |r
9ductive hypo!sis4 ,2c if we don't ne$
to use ! fact t _% ,p(m) _: is true =
all _% #1 "k: m "k: k _:1 !n we j omit
t4 ,ma!maticians >e lazy4
7777777777777777777777777777777777777777
,comput} ,corn}4
  ,y'll 2 us+ ma!matical 9duc;n :5 y're
design+ algori?ms4 ,let's take ! example
( sort+ a dataset4 ,to prove t an
algori?m is correct1 y ne$3

#a4 ,"! is a valid base case4 ,9 |r
  example - x c sort a set ( "o ele;t">
#b4 ,assume ! algori?m "ws = .2;n
  objects4 ,x c sort a set ( .2;n
  objects
#c4 ,%{ t if y h a l>g} set ( _% n+1 _:
  objects1 y algori?m correctly "ws4 ,x
  c sort a set ) _% n+1 _: objects
  ,= example1 we prov$ ma!matically 9
,example #d4c4aj t any po/age ov} #ah
c5ts c 2 made ) #d & #g c5t /amps4 ,!
pro( ( t gives rise to an algori?m t we
"k m/ 2 correct3
7777777777777777777777777777777777777777
  ,sage
  ,9put3
# input: n cents postage # output: _a
string telling you what to pay def
pay_with_four_and_seven_cents(n):     x
= 18     s = _2     t = _1  #base case
with:  18 = 7s + 4t     while x < n:
    x +=1 #get get the "x+1" case, we
need to either:         if s >= 1:
      s-=1  # subtract _7
t+=2  # add two 4s, since -7 + 2*4 = 8,
a net gain of _1         else:
  s+=3  # add 7*3 = 21             t-=5
# remove 20: 4*5 = 20; net gain of _1 =
21 _- 20     print("_to pay %d cents,
you need %d four cent and %d seven cent
stamps" % (n,s,t))
pay_with_four_and_seven_cents(25)
,ex}cises ,ex}cises
7777777777777777777777777777777777777777
,note  #d4c4ac 4
  ,recall1 :5 we write _% n `e `;,n _:1
we m1n 8;n is an 9teg} ) _% n .1: #0 _:0
#a 4
  ,use 9duc;n to prove = all _% n `e
`;,n _: t _% #1+2+2~2"+2~3+''' +2~n .k
#2~n+1"-1 _:4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,we m/ prove t _% #1+2+2~2"+2~3+'''
+2~n .k #2~n+1"-1 _: = all _% n `e
`;,n _:4 ,?us let _% ,p(n) _: 2 ! /ate;t
_% #1+2+2~2+''' +2~n .k #2~n+1"-1 _:4
,we w prove t _% ,p(n) _: is true = all
_% n `e `;,n _:4 ,f/ we e/abli% ! base
case1 _% ,p(0) _:1 : claims t _% #1 .k
#2~0+1"-1 _:4 ,s9ce _% #2~1"-1 .k #2-1
.k #1 _:1 we see t _% ,p(0) _: is true4
,n{ = ! 9ductive case4 ,assume t
_% ,p(k) _: is true = an >bitr>y _% k `e
`;,n _:4 ,t is1 _% #1+2+2~2+''' +2~k .k
#2~k+1"-1 _:4 ,we m/ %{ t _% ,p(k+1) _:
is true "<i4e41 t _% #1+2+2~2+''' +2~k+1
.k #2~k+2"-1 _:">4 ,to d ?1 we />t ) !
left-h& side ( _% ,p(k+1) _: & "w to !
"r-h& side3
_%
#1+2+2~2+''' +2~k"+2~k+1 .k #2~k+1"-1+2-
~k+1" by inductive hypothesis
.k                           #2*2~k+1"--
1
.k                           #2~k+2"-1-

_:
  ,?us _% ,p(k+1) _: is true s by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
#b 4
  ,prove t _% #1+3+5+''' +(2n-1) .k
n~2 _: = all _% n .1: #1 _:4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
_% #1+3+5+''' +(2n-1) .k n~2 _:4 ,we w
prove t _% ,p(n) _: is true = all _% n
.1: #1 _:4 ,f/ ! base case1 _% ,p(1) _:4
,we h _% #1 .k #1~2 _: : is true1 s
_% ,p(1) _: is e/abli%$4 ,n{ ! 9ductive
case4 ,assume t _% ,p(k) _: is true = "s
fix$ >bitr>y _% k .1: #1 _:4 ,t is1
_% #1+3+5+''' +(2k-1) .k k~2 _:4 ,we w
n{ prove t _% ,p(k+1) _: is al true
"<i4e41 t _% #1+3+5+''' +(2k+1) .k
(k+1)~2 _:">4 ,we />t ) ! left-h& side (
_% ,p(k+1) _: & "w to ! "r-h& side3
_%
#1+3+5+''' +(2k-1)+(2k+1) .k k~2"+(2k+1-
) by ind. hyp.
.k (k+1)~2"               by factoring
_:
  ,?us _% ,p(k+1) _: holds1 s by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n .1:
#1 _:4
#c 4
  ,prove t _% #2~n "k n& _: = all _% n
.1: #4 _:4 "<,recall1 _% n&  .k
#1*2*3*''' *n _:4">
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t _% #2~n "k
n& _:4 ,we w %{ _% ,p(n) _: is true =
all _% n .1: #4 _:4 ,f/1 we *eck ! base
case & see t yes1 _% #2~4 "k #4& _: "<z
_% #16 "k #24 _:"> s _% ,p(4) _: is
true4 ,n{ = ! 9ductive case4 ,assume
_% ,p(k) _: is true = an >bitr>y _% k
.1: #4 _:4 ,t is1 _% #2~k "k k& _:4 ,n{
3sid} _% ,p(k+1) _:3 _% #2~k+1 "k
(k+1)& _:4 ,to prove ?1 we />t ) ! left
side & "w to ! "r side4
_%
#2~k+1"       .k #2*2~k"
"k #2*k&     by the inductive hypothesis
"k (k+1)*k&   since k+1 .1 #2
.k (k+1)&
_:
  ,"!=e _% #2~k+1 "k (k+1)& _: s we h
e/abli%$ _% ,p(k+1) _:4 ,?us by !
pr9ciple ( ma!matical 9duc;n _% ,p(n) _:
is true = all _% n .1: #4 _:4
#d 4
  ,prove t ! sum ( .2;n squ>es c 2 f.d z
foll{s
_%
#1~2"+2~2"+3~2+."."."+n~2" .k  ;n(n+1)(-
2n+1)
                              ?33333333-
33333#
                                    #6-

_:
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8
_%
#1~2"+2~2"+3~2+."."."+n~2" .k  ;n(n+1)(-
2n+1)
                              ?33333333-
33333#
                                    #6-

_:
04 ,= ! base case1 we %{ t _% ,p(1) _:
is true4 ,t is3
_%
,p(1)_3.k1~2 .k  #1(1+1)(2*1+1)
                ?33333333333333#
                       #6
_:
: is true4
  ,= ! 9ductive /ep1 assume t
_% ,p(k) _: is true = "s 9teg} _% k .1:
#1 _:1 t is
_%
#1~2"+2~2"+3~2+."."."+k~2" .k  ;k(k+1)(-
2k+1)
                              ?33333333-
33333#
                                    #6-

_:
& 3sid} ! /ate;t3
_%
#1~2"+2~2"+3~2+''' +k~2"+(k+1)~2" .k  ;-
k(k+1)(2k+1) +(k+1)~2"
                                     ?3-
333333333333#
-
    #6
-

.k  ;k(k+1)(2k+1)  #6(k+1)~2"
   ?3333333333333#?3333333333#
         #6            #6
-

.k  (k+1)`(k(2k+1)+6(k+1)`)
   ?33333333333333333333333#
              #6
-

.k  (k+1)`(2k~2"+k+6k+6`)
   ?333333333333333333333#
             #6
-

.k  (k+1)`(2k~2"+7k+6`)
   ?3333333333333333333#
            #6
-

.k  (k+1)`((2k+3)(k+2)`)
   ?33333333333333333333#
             #6
-

.k  (k+1)(2(k+1)+1)((k+1)+1)
   ?333333333333333333333333#
               #6
_:
#e 4
  ,:at is wr;g ) ! foll{+ 8pro(0 ( !
8fact0 t _% n+3 .k n+7 _: = all values (
.2;n "<2ss ( c|rse t ! ?+ x is claim+ to
prove is false">8
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t t _% n+3
.k n+7 _:4 ,we w prove t _% ,p(n) _: is
true = all _% n `e `;,n _:4 ,assume1 =
9duc;n t _% ,p(k) _: is true4 ,t is1
_% k+3 .k k+7 _:4 ,we m/ %{ t
_% ,p(k+1) _: is true4 ,n{ s9ce _% k+3
.k k+7 _:1 add #a to bo? sides4 ,? gives
_% k+3+1 .k k+7+1 _:4 ,regr|p+
_% (k+1)+3 .k (k+1)+7 _:4 ,b ? is simply
_% ,p(k+1) _:4 ,?us by ! pr9ciple (
ma!matical 9duc;n _% ,p(n) _: is true =
all _% n `e `;,n _:4
,solu;n 43
  ,! only problem is t we n"e e/abli%$ !
base case4 ,( c|rse1 :5 _% n .k #0 _:1
_% #0+3 /.k #0+7 _:4
#f 4
  ,! pro( 9 ! previ|s problem does n "w4
,b if we modify ! 8fact10 we c get a "w+
pro(4 ,prove t _% n+3 "k n+7 _: = all
values ( _% n `e `;,n _:4 ,y c d ? pro(
) algebra "<)|t 9duc;n">1 b ! goal ( ?
ex}cise is to write | a valid 9duc;n
pro(4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t t _% n+3
"k n+7 _:4 ,we w prove t _% ,p(n) _: is
true = all _% n `e `;,n _:4 ,f/1 note t
! base case holds3 _% #0+3 "k #0+7 _:4
,n{ assume = 9duc;n t _% ,p(k) _: is
true4 ,t is1 _% k+3 "k k+7 _:4 ,we m/ %{
t _% ,p(k+1) _: is true4 ,n{ s9ce _% k+3
"k k+7 _:1 add #a to bo? sides4 ,? gives
_% k+3+1 "k k+7+1 _:4 ,regr|p+
_% (k+1)+3 "k (k+1)+7 _:4 ,b ? is simply
_% ,p(k+1) _:4 ,?us by ! pr9ciple (
ma!matical 9duc;n _% ,p(n) _: is true =
all _% n `e `;,n _:4
#g 4
  ,f9d ! flaw 9 ! foll{+ 8pro(0 ( !
8fact0 t _% n "k #100 _: = e _% n `e
`;,n _:4
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t _% n "k
#100 _:4 ,we w prove _% ,p(n) _: is true
= all _% n `e `;,n _:4 ,f/ we e/abli% !
base case3 :5 _% n .k #0 _:1 _% ,p(n) _:
is true1 2c _% #0 "k #100 _:4 ,n{ = !
9ductive /ep1 assume _% ,p(k) _: is
true4 ,t is1 _% k "k #100 _:4 ,n{ if
_% k "k #100 _:1 !n .2;k is "s numb}1 l
#hj4 ,( c|rse _% #80+1 .k #81 _: : is /
less ?an #ajj4 ,s _% k+1 "k #100 _: z
well4 ,b ? is :at _% ,p(k+1) _: claims1
s we h %{n t _% ,p(k) $o ,p(k+1) _:4
,?us by ! pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
,solu;n 43
  ,! problem "h is t :ile _% ,p(0) _: is
true1 & :ile _% ,p(k) $o ,p(k+1) _: =
.1"s values ( .2;k1 "! is at l1/ "o
value ( .2;k "<"nly _% k .k #99 _:"> :5
t implica;n fails4 ,= a valid pro( by
9duc;n1 _% ,p(k) $o ,p(k+1) _: m/ 2 true
= all values ( .2;k grt} ?an or equal to
! base case4
#h 4
  ,:at is wr;g ) ! foll{+ 8pro(0 ( !
8fact0 t = all _% n `e `;,n _:1 ! numb}
_% n~2"+n _: is odd8
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% n~2"+n _: is odd40 ,we w prove t
_% ,p(n) _: is true = all _% n `e
`;,n _:4 ,suppose = 9duc;n t _% ,p(k) _:
is true1 t is1 t _% k~2"+k _: is odd4
,n{ 3sid} ! /ate;t _% ,p(k+1) _:4 ,n{
_% (k+1)~2"+(k+1) .k k~2"+2k+1+k+1 .k
k~2"+k+2k+2 _:4 ,by ! 9ductive hypo!sis1
_% k~2"+k _: is odd1 & ( c|rse
_% #2k+2 _: is ev54 ,an odd plus an ev5
is alw odd1 s "!=e _% (k+1)~2"+(k+1) _:
is odd4 ,"!=e by ! pr9ciple ( ma!matical
9duc;n1 _% ,p(n) _: is true = all _% n
`e `;,n _:4
,h9t 43
  ,r ?an give a solu;n1 "h's j a h9t4
,:at happ5s if  .2;n is ev58
#i 4
  ,n{ give a valid pro( "<by 9duc;n1 ev5
?|< y mi<t 2 able to d s )|t us+
9duc;n"> ( ! /ate;t1 8= all _% n `e
`;,n _:1 ! numb} _% n~2"+n _: is ev540
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% n~2"+n _: is ev540
  ,basis /ep3 :5 _% n .k #0 _: we h
_% #0~0"+0 .k #0 _: : is a ev54
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #0 _:1 t is1
_% k~2"+k _: is ev51 & let's 3sid} !
foll{+3
_%
(k+1)~2"+(k+1) .k k~2"+2k+1+k+1
.k k~2"+3k+2
.k k~2"+k+2k+2
_:
n{ _% k~2"+k .k #2l _: = "s 9teg} .2;l
by 9ductive hypo!sis1 s we h3
_%
(k+1)~2"+(k+1) .k k~2"+k+2k+2
.k #2l+2k+2
.k #2(l+k+1)
_:
& ?us _% (k+1)~2"+(k+1) _: is ev54
  ,"!=e1 by ma? 9duc;n1 _% n~2"+n _: is
ev5 = all natural numb}s
4
#aj 4
  ,use 9duc;n to prove t if .2;n p all
%ake h&s ) ea* o!r1 t ! total numb} (
h&%akes is
_%
 ;n(n-1)
?3333333#
   #2
_:
4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8:5 .2;n p
%ake h&s ) ea* o!r1 "! >e a total (
_%
 ;n(n-1)
?3333333#
   #2
_:
h&%akes40
  ,base case3 ,:5 _% n .k #2 _:1 "! w 2
"o h&%ake1 &
_%
 #2(2-1)  .k #1
?3333333#
   #2
_:
4  ,?us _% ,p(2) _: is true4
  ,9ductive case3 ,assume _% ,p(k) _: is
true = >bitr>y _% k .1: #2 _: "<t !
numb} ( h&%akes am;g .2;k p is
_%
 ;k(k-1)
?3333333#
   #2
_:
4  ,:at happ5s if a _% k+1 _:/ p}son %{s
up8  ,h{ _m .1new h&%akes take place8
,! new p}son m/ %ake h&s ) "ey"o "!1 :
is .2;k new  h&%akes4  ,s ! total is n{
_%
 ;k(k-1) +k .k  (k+1)k
?3333333#      ?333333#
   #2             #2
_:
1 z ne$$4
  ,"!=e1 by ! pr9ciple ( ma!matical
9duc;n1 _% ,p(n) _: is true = all _% n
.1: #2 _:4
#aa 4
  ,use ! product rule = log>i?ms
"<_% log (ab) .k log (a)+log (b) _:"> to
prove1 by 9duc;n on .2;n1 t _% log
(a~n") .k nlog (a) _:1 = all natural
numb}s _% n .1: #2 _:4
,solu;n 43
  ,! idea "h is t if we take ! log>i?m (
_% a~n _:1 we c 9cr1se .2;n by #a if we
multiply by ano!r .2a "<9side !
log>i?m">4 ,? results 9 add+ #a m _% log
(a) _: to ! total4
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t _% log
(a~n") .k nlog (a) _:4 ,! base case1
_% ,p(2) _: is true1 2c _% log (a~2") .k
log (a*a) .k log (a)+log (a) .k #2log
(a) _:1 by ! product rule = log>i?ms4
,n{ assume1 = 9duc;n1 t _% ,p(k) _: is
true4 ,t is1 _% log (a~k") .k klog
(a) _:4 ,3sid} _% log (a~k+1") _:4 ,we h
_% log (a~k+1") .k log (a~k"*a) .k log
(a~k")+log (a) .k klog (a)+log (a) _:
) ! la/ equal;y due to ! 9ductive
hypo!sis4 ,b ? simplifies to _% (k+1)log
(a) _:1 e/abli%+ _% ,p(k+1) _:4 ,"!=e by
! pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n .1:
#2 _:4
#ab 4
  ,let _% f1, f2, ''', f;n _: 2
di6}5tiable func;ns4 ,prove1 us+ 9duc;n1
t
_% (f1+f2+''' +f;n)' .k f'1+f'2+'''
+f';n _:
  ,y may assume _% (f+g)' .k f~'"+g' _:
= any di6}5tiable func;ns .2;f & .2;g4
"<,y don't actually ne$ to "k calculus
to 2 able to d ?">4
,h9t 43
  ,y >e all{$ to assume ! base case4 ,=
! 9ductive case1 gr|p all b ! la/ func;n
tgr z "o sum ( func;ns1 !n apply ! usual
sum ( d}ivatives rule1 & !n ! 9ductive
hypo!sis4
#ac 4
  ,recall t _% ,f;n _: is ! .2n?
,fibona3i numb} def9$ 9 ,example #d4a4e4
  ,prove1 by ma!matical 9duc;n1 t
_% ,f0+,f1+,f2+''' +,f;n .k
,f;n+2"-1 _:4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% ,f0+,f1+,f2+''' +,f;n .k
,f;n+2"-1 _:40
  ,basis /ep3 if _% n .k #0 _: !n _% ,f0
.k #0 _: :ile _% ,f;n+2"-1 .k #1-1 .k
#0 _: s ! basis /ep is true4
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #0 _:4 ,t
is1 _% ,f0+,f1+,f2+''' +,f;k .k
,f;k+2"-1 _:4 ,n{ 3sid}
_%
,f0+,f1+,f2+ ''' ,f;k"+,f;k+1" .k (,f;k-
+2"-1)+,f;k+1" by ind. hyp.
.k ,f;k+2"+,f;k+1"-1
.k ,f;k+3"-1                   by recur-
sive def.
_:
?us _% ,p(k+1) _: is true4
  ,"!=e1 by ma? 9duc;n1
_% ,f0+,f1+,f2+''' +,f;n .k ,f;n+2"-1 _:
= all natural numb}s4
#ad 4
  ,prove t _% ,f0+,f2+,f4+''' +,f;2n .k
,f;2n+1"-1 _: ": _% ,f;n _: is ! .2n?
,fibona3i numb}4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
_% ,f0+,f2+,f4+''' +,f;2n .k
,f;2n+1"-1 _:4 ,we w %{ t _% ,p(n) _: is
true = all _% n .1: #0 _:4 ,f/ ! base
case is easy 2c _% ,f0 .k #0 _: & _% ,f1
.k #1 _: s _% ,f0 .k ,f1-1 _:4 ,n{ 3sid}
! 9ductive case4 ,assume _% ,p(k) _: is
true1 t is1 assume _% ,f0+,f2+,f4+'''
+,f;2k .k ,f;2k+1"-1 _:4 ,to e/abli%
_% ,p(k+1) _: we "w f left to "r3
_%
,f0+,f2+''' +,f;2k"+,f;2k+2" .k ,f;2k+1-
"-1+,f;2k+2" by ind. hyp.
.k ,f;2k+1"+,f;2k+2"-1
.k ,f;2k+3"-1                by recursi-
ve def.
_:
  ,"!=e _% ,f0+,f2+,f4+''' +,f;2k+2 .k
,f;2k+3"-1 _:1 : is to say _% ,p(k+1) _:
holds4 ,"!=e by ! pr9ciple ( ma!matical
9duc;n1 _% ,p(n) _: is true = all _% n
.1: #0 _:4
#ae 4
  ,prove1 us+ /r;g 9duc;n1 t e natural
numb} is ei a ,fibona3i numb} or c 2
writt5 z ! .1sum ( .14t9ct ,fibona3i
numb}s4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t t .2;n is
ei a ,fibona3i numb} ( ! sum ( 4t9ct
,fibona3i numb}s
  ,basis /ep3 ,= _% n .k #0 _:1 we h t
_% #0 .k ,f0 _: is a ,fibona3i numb}4
  ,9ductive /ep3 ,assume t "! is an
9teg} _% k .1: #0 _: s* t _% ,p(m) _: is
true = all _% #0 "k: m "k: k _:4 ,t is1
.2;m is ei a ,fibona3i numb} or ! sum (
4t9ct ,fibona3i numb}s4 ,n{ let's 3sid}
! next numb}1 _% k+1 _:3
  ,case #a3 ,if _% k+1 _: is a ,fibona3i
numb}1 !n we're d"o4
  ,case #b3 ,if _% k+1 _: is n a
,fibona3i numb}1 !n let _% ,f;m _: 2 !
l>ge/ ,fibona3i numb} less ?an
_% k+1 _:4 ,s9ce _% k+1-,f;m "k: k _: !n
we h t _% k+1-,f;m _: is ! sum ( 4t9ct
,fibona3i numb}s1 by 9ductive hypo!sis4
  ,add+ _% ,f;m _: to ? sum gives u
_% k+1-,f;m"+,f;m .k k+1 _: : !n xf a
sum ( 4t9ct ,fibona3i numb}s4
  ,?us1 by 9duc;n1 e natural numb} is ei
a ,fibona3i numb} ( ! sum ( 4t9ct
,fibona3i numb}s4
#af 4
  ,prove1 by ma!matical 9duc;n1 t
_% ,f1+,f3+,f5+''' +,f;2n-1 .k ,f;2n _:1
": _% ,f;n _: is ! .2n? ,fibona3i numb}4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% ,f1+,f3+,f5+''' +,f;2n-1 .k
,f;2n _:0
  ,basis /ep3 ,if _% n .k #1 _: !n
_% ,f1 .k #1 _: & _% ,f;2*1 .k #1 _: s t
_% ,p(1) _: is true4
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #1 _:4 ,t
is1 _% ,f1+,f3+,f5+''' +,f;2k-1 .k
,f;2k _: & 3sid}3
_%
,f1+,f3+,f5+''' +,f;2k-1"+,f;2(k+1)-1"-
 .k ,f1+,f3+,f5+''' +,f;2k-1"+,f;2k+1"
.k ,f;2k"+,f;2k+1"-
by ind. hyp.
.k ,f;2k+2"-
by rec. def.
.k ,f;2(k+1)"
_:
,& ?us _% ,p(k+1) _: is true4
  ,"!=e1 by ma? 9duc;n1
_% ,f1+,f3+,f5+''' +,f;2n-1 .k ,f;2n _:
= all 9teg}s _% n .1: #1 _:4
#ag 4
  ,prove1 by ma!matical 9duc;n1 t
_% ,f1~2"+,f2~2"+,f3~2+''' +,f;n~2 .k
,f;n"*,f;n+1 _:1 ": _% ,f;n _: is ! .2n?
,fibona3i numb}4
,h9t 43
  _% ,f;k+1"(,f;k"+,f;k+1") .k
,f;k+1",f;k+2 _:
#ah 4
  ,prove t "! is a /rictly 9cr1s+ sequ;e
_% a1, a2, a3, ''' _: ( numb}s "<n
necess>ily 9teg}s"> s* t _% a;n "k
#100 _: = all _% n `e `;,n _:4 "<,by
~1/rictly ~19cr1s+ we m1n _% a;n "k
a;n+1 _: = all .2;n4 ,s ea* t}m m/ 2
l>g} ?an ! la/4">
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8"! is a
/rictly 9cr1s+ sequ;e _% a1, a2, ''',
a;n _: ) _% a;n "k #100 _:40 ,we w prove
_% ,p(n) _: is true = all _% n .1:
#1 _:4 ,f/ we e/abli% ! base case3
_% ,p(1) _: says "! is a s+le numb}
_% a1 _: ) _% a1 "k #100 _:4 ,? is true
,- take _% a1 .k #0 _:4 ,n{ = ! 9ductive
/ep1 assume _% ,p(k) _: is true4 ,t is
"! exi/s a /rictly 9cr1s+ sequ;e _% a1,
a2, a3, ''', a;k _: ) _% a;k "k #100 _:4
,n{ 3sid} ? sequ;e1 plus "o m t}m1
_% a;k+1 _: : is grt} ?an _% a;k _: b
less ?an _% #100 _:4 ,s* a numb} exi/s1
= example1 ! av}age 2t _% a;k _: & #ajj4
,s !n _% ,p(k+1) _: is true1 s we h %{n
t _% ,p(k) $o ,p(k+1) _:4 ,?us by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
#ai 4
  ,prove t #f divides _% #7~n"-1 _: =
all _% n `e `;,n _:4
,h9t 43
  "<,alt}native idea to ! 2l pro("> ,9 !
9ductive /ep add & subtract _% #7~k _:4
,t is1 y'll h _% #7*7~k"-1-7~k"+7~k _:4
,n{ algebra4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8#f
divides _% #7~n"-1 _:40 ,we w %{
_% ,p(n) _: is true = all _% n `e
`;,n _:4 ,f/ we e/abli% ! base case1
_% ,p(0) _:4 ,s9ce _% #7~0"-1 .k #0 _:1
& _% #0 _: is a multiple ( #f1
_% ,p(0) _: is true4 ,n{ = ! 9ductive
case4 ,assume _% ,p(k) _: holds = an
>bitr>y _% k `e `;,n _:4 ,t is1 #f
divides _% #7~k"-1 _:1 or 9 o!r ~ws1
_% #7~k"-1 .k #6j _: = "s 9teg} .2;j4
,n{ 3sid} _% #7~k+1"-1 _:3
_%
#7~k+1"-1       .k #7~k+1"-7+6-
                 by cleverness_3-#1 .k-
-#7+6
.k #7(7~k"-1)+6 factor out a 7 from the-
 first two terms
.k #7(6j)+6     by the inductive hypoth-
esis
.k #6(7j+1)     factor out a 6-

_:
  ,"!=e #f divides _% #7~k+1"-1 _:1 or 9
o!r ~ws1 _% ,p(k+1) _: is true4 ,"!=e by
! pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4

       ,*apt} #e ,c.t+ ,te*niques

    ,sec;n #e4a ,! ,multiplicative &
          ,additive ,pr9ciples
7777777777777777777777777777777777777777
,note  #e4a4a 4
  ,a /&>d deck ( play+ c>ds 3ta9s f|r
~1suits "<spade1 he>t1 club1 diamond">4
,"! >e #ac c>ds 9 ea* suit
"<#b1c1d1e1f1g1h1i1aj1 ,jack1 ,que51
,k+1 ,ace">4 ~1,face ~1c>ds ref}s to
jacks1 que5s1 & k+s4 ,spades & clubs >e
black & he>ts & diamonds >e r$4
7777777777777777777777777777777777777777
,def9i;n  #e4a4b 4  ,multiplica;n
,pr9ciple4
  ,! ~1multiplica;n ~1pr9ciple /ates t
if an ev5t .2,a c o3ur .2;m ways & an
ev5t .2;,b c o3ur .2;n ways1 !n ! ev5t
8_% ,a and ,b _:0 c o3ur _% m*n _: ways4
  ,! multiplica;n pr9ciple g5}alizes to
m ?an two ev5ts4
7777777777777777777777777777777777777777
,example  #e4a4c 4
  ,if 9 yr closet y h five ironic
;t-%irts1 ?ree pairs ( pants1 & ?ree
collegiate hats1 h{ _m di6}5t |tfits d y
h8 ,"h an |tfit is pants1 %irt1 hat4
7777777777777777777777777777777777777777
,example  #e4a4d 4
  ,h{ _m six "* lic5se plates c "! 2 if
! f/ ?ree "*s >e lrs & ! second ?ree "*s
>e numb}s8
7777777777777777777777777777777777777777
,example  #e4a4e 4
  ,h{ _m play+ c>ds 9 a /&>d deck >e bo?
r$ & face c>ds8
7777777777777777777777777777777777777777
,def9i;n  #e4a4f 4  ,addi;n ,pr9ciple4
  ,! ~1addi;n ~1pr9ciple /ates t if ev5t
.2,a c o3ur .2;m ways & ev5t .2;,b c
o3ur .2;n ways & ! two ev5ts >e 4jo9t1
!n ! ev5t 8_% ,a or ,b _:0 c o3ur
_% m+n _: ways4
7777777777777777777777777777777777777777
,example  #e4a4g 4
  ,if 9 yr closet y h five ironic
;t-%irts1 ?ree pairs ( pants1 & ?ree
collegiate hats1 h{ _m di6}5t items d y
h 9 yr closet8
7777777777777777777777777777777777777777
,def9i;n  #e4a4h 4  ,c.t+ pr9ciples 9
t}ms ( sets34
  ,let _% ,a and ,b _: 2 two sets4 ,!n3

#a4 _% |,a`*,b| .k |,a|*|,b| _:4
#b4 ,if _% ,a.%,b .k _0 _:1 !n
  _% |,a.+,b| .k |,a|+|,b| _:
7777777777777777777777777777777777777777
,def9i;n  #e4a4i 4  ,! ,pr9ciple (
,9clu.n-,exclu.n4
  ,if _% ,a and ,b _: >e two sets1 !n
_% |,a.+,b| .k |,a|+|,b|-|,a.%,b| _:
  ,note t ? is l ! additive pr9ciple1
except we're remov+ ! o3ur.es t >e 9
common 2t .2,a & .2;,b4
7777777777777777777777777777777777777777
,example  #e4a4aj 4
  ,suppose a company rcvs #cej
applica;ns f college graduates = a job4
,suppose #bbj ( ~! applicants major$ 9
comput} sci;e1 #adg major$ 9 busi;s1 &
#ea major$ 9 bo? comput} sci;e & busi;s4
,h{ _m major$ 9 nei comput} sci;e nor
busi;s8
7777777777777777777777777777777777777777
,example  #e4a4aa 4
  ,we w n{ 3sid} ~1bit ~1/r+s : >e /r+s
( "*s 3ta9+ only _% #0 _: & _% #1 _:4 ,=
example1 ~! >e bit /r+s3 _% #0011,
#1010, #110, _: etc4
  ,h{ _m bit /r+s ( l5g? ei<t ei />t ) a
#a bit or 5d ) two bits #jj8
7777777777777777777777777777777777777777
,example  #e4a4ab 4
  ,"! >e #cj p 9 a club4 ,assum+ "ey"o
is qualifi$ to s}ve 9 any posi;n1 h{ _m
di6}5t ways >e "! to assign a presid5t1
vice-presid5t1 secret>y1 & tr1sur}8
7777777777777777777777777777777777777777
,note  #e4a4ac 4
  ,! ,pr9ciple ( ,9clu.n-,exclu.n
applies to m ?an two sets4 ,= any f9ite
sets _% ,a, ,b,  and ,c _:1
_% |,a.+,b.+,c| .k
|,a|+|,b|+|,c|-|,a.%,b|-|,a.%,c|-|,b.%,-
c|+|,a.%,b.%,c| _:
7777777777777777777777777777777777777777
,example  #e4a4ad 4
  ,suppose we survey$ a class ( #da
/ud5ts1 ask+ if !y cd play an ,a3ordion1
a ,bassoon1 or a ,cl>9et4 #ab cd play !
cl>9et1 #h cd play bassoon1 & #e !
a3ordian4 #f play$ cl>9et & bassoon1 #b
play$ cl>9et & a3ordion1 & #c play$
bassoon & a3ordion4 ,"o /ud5t play$ all
?ree4
  ,h{ _m /ud5ts c play at l1/ "o 9/ru;t8
,solve ? f/ by ,v5n ,diagrams1 !n by
,,pie4
7777777777777777777777777777777777777777
,def9i;n  #e4a4ae 4  ,! ,pigeonhole
,pr9cipal4
  ,if .2;k is a positive 9teg} &
_% k+1 _: objects >e plac$ 9to .2;k
boxes1 !n at l1/ "o box has two or m
objects4
7777777777777777777777777777777777777777
,example  #e4a4af 4

#a4 ,if "! >e #ac p1 at l1/ two ( !m h !
  same bir? mon?4
#b4 ,if "! >e #aj c>s at a re/aurant1 b
  #aa p "!1 !n at l1/ two p c> pool$4
#c4 etc444
7777777777777777777777777777777777777777
,!orem  #e4a4ag 4  ,! ,g5}aliz$
,pigeonhole ,pr9cipal4
  ,if .2;,n objects >e plac$ 9to .2;k
boxes1 !n "! is at l1/ "o box )
_%
`~( ;,n `~)
   ?333#
    ;k
_:
4
7777777777777777777777777777777777777777
,example  #e4a4ah 4
  ,if "! >e #ajj p 9 a l>ge lecture
hall1 !n at l1/
_%
`~( #100 `~) .k #9
   ?3333#
    #12
_:
h ! same bir? mon?4
7777777777777777777777777777777777777777
,example  #e4a4ai 4
  ,h{ _m c>ds m/ 2 select$ f a /&>d deck
( #eb c>ds 9 ord} t at l1/ ?ree h ! same
suit8
,solu;n 43
  ,ac to ! ,g5}aliz$ ,pigeonhole
,pr9ciple1 we want to det}m9e ! numb} (
c>ds1 .2;,n1 t m/ 2 drawn "<"h _% k .k
#4 _: suits">3
_%
`~( ;,n `~) .1: #3
   ?333#
    #4
_:
,s _% ,n .k #9 _:4
,ex}cises ,ex}cises #a 4
  ,yr w>drobe 3si/s ( #e %irts1 #c pairs
( pants1 & #ag b{ ties4 ,h{ _m di6}5t
|tfits c y make8
,solu;n 43
  ,"! >e #bee |tfits4 ,use !
multiplicative pr9ciple4
#b 4
  ,= yr college 9t}view1 y m/ we> a tie4
,y {n #c regul> "<bor+"> ties & #e
"<cool"> b{ ties4

a4 ,h{ _m *oices d y h = yr neck-we>8
;b4 ,y r1lize t ! 9t}view is = cl{n
  college1 s y %d probably we> bo? a
  regul> tie & a b{ tie4 ,h{ _m *oices d
  y h n{8
;c4 ,= ! re/ ( yr |tfit1 y h #e %irts1
  #d skirts1 #c pants1 & #g dresses4 ,y
  want to select ei a %irt to we> ) a
  skirt or pants1 or j a dress4 ,h{ _m
  |tfits d y h to *oose f8
,solu;n 43

a4 #h ties4  ,use ! additive pr9ciple4
;b4 #ae ties4 ,use ! multiplicative
  pr9ciple
;c4 _% #5*(4+3)+7 .k #42 _: |tfits4
#c 4
  ,yr ,blu-ray collec;n 3si/s ( #i
com$ies & #g horror movies4 ,give an
example ( a "q = : ! answ} is3

a4 #af4
;b4 #fc4
,solu;n 43

a4 ,= example1 #af is ! numb} ( *oices y
  h if y want to wat* "o movie1 ei a
  com$y or horror flick4
;b4 ,= example1 #fc is ! numb} ( *oices
  y h if y w wat* two movies1 f/ a com$y
  & !n a horror4
#d 4
  ,suppose y h sets .2,a & .2;,b )
_% |,a| .k #10 _: & _% |,b| .k #15 _:4

a4 ,:at is ! l>ge/ possible value =
  _% |,a.%,b| _:;8
;b4 ,:at is ! smalle/ possible value =
  _% |,a.%,b| _:;8
;c4 ,:at >e ! possible values =
  _% |,a.+,b| _:;8
,solu;n 43

a4 ,to maximize ! numb} ( ele;ts 9
  common 2t .2,a & .2;,b1 make _% ,a _"k
  ,b _:4  ,? wd give _% |,a.%,b| .k
  #10 _:4
;b4 .2,a & .2;,b mi<t h no ele;ts 9
  common1 giv+ _% |,a.%,b| .k #0 _:4
;c4 _% #15 "k: |,a.+,b| "k: #25 _:4  ,9
  fact1 :5 _% |,a.%,b| .k #0 _: !n
  _% |,a.+,b| .k #25 _: & :5 _% |,a.%,b|
  .k #10 _: !n _% |,a.+,b| .k #15 _:4
#e 4
  ,if _% |,a| .k #8 _: & _% |,b| .k
#5 _:1 :at is _% |,a.+,b|+|,a.%,b| _:;8
,solu;n 43
  _% |,a.+,b|+|,a.%,b| .k #13 _:4  ,use
,,pie3 we "k _% |,a.+,b| .k
#8+5-|,a.%,b| _:4
#f 4
  ,9 a rec5t survey1 #cj /ud5ts report$
:e!r !y lik$ _! potatoes ,ma%$1
,fr5*-fri$1 or ,twice-bak$4 #ae lik$ !m
ma%$1 #bj lik$ ,fr5* fries1 & #i lik$
twice bak$ potatoes4 ,addi;nally1 #ab
/ud5ts lik$ bo? ma%$ & fri$ potatoes1 #e
lik$ ,fr5* fries & twice bak$ potatoes1
#f lik$ ma%$ & bak$1 & #c lik$ all ?ree
/yles4 ,h{ _m /ud5ts .1hate potatoes8
,expla9 :y yr answ} is correct4
#g 4
  ,= h{ _m _% n `e .(1, 2, ''', 500.) _:
is .2;n a multiple ( "o or m ( #e1 #f1
or #g8
,h9t 43
  ,to f9d | h{ _m numb}s >e divisible by
#f & #g1 = example1 take _% #500_/42 _:
& r.d d{n4
#h 4
  ,let .2,a1 .2;,b1 & .2;,c 2 sets4

a4 ,f9d _% |(,a.+,c)_*,b| _: provid$
  _% |,a| .k #50 _:1 _% |,b| .k #45 _:1
  _% |,c| .k #40 _:1 _% |,a.%,b| .k
  #20 _:1 _% |,a.%,c| .k #15 _:1
  _% |,b.%,c| .k #23 _:1 &
  _% |,a.%,b.%,c| .k #12 _:4
;b4 ,describe a set 9 t}ms ( .2,a1
  .2;,b1 & .2;,c ) c>d9al;y #bf4
#i 4
  ,3sid} all #e lr 8~ws0 made f ! lrs
.2a "? .2;h4 "<,recall1 ~ws >e j /r+s (
lrs1 n necess>ily actual ,5gli% ~ws4">

a4 ,h{ _m ( ~! ~ws >e "! total8
;b4 ,h{ _m ( ~! ~ws 3ta9 no rep1t$ lrs8
;c4 ,h{ _m ( ~! ~ws />t ) ! sub-~w
  8aha08
;d4 ,h{ _m ( ~! ~ws ei />t ) 8aha0 or 5d
  ) 8bah0 or bo?8
;e4 ,h{ _m ( ! ~ws 3ta9+ no rep1ts al d
  n 3ta9 ! sub-~w 8bad08
,solu;n 43

a4 _% #8~5 .k #32768 _: ~ws1 s9ce y
  select f #h lrs #e "ts4
;b4 _% #8*7*6*5*4 .k #6720 _: ~ws4 ,af
  select+ a lr1 y h few} lrs to select =
  ! next "o4
;c4 _% #8*8 .k #64 _: ~ws3 y ne$ to
  select ! #dth & #eth lrs4
;d4 _% #64+64-0 .k #128 _: ~ws4 ,"! >e
  #fd ~ws : />t ) 8aha0 & ano!r #fd ~ws
  t 5d ) 8bah40 ,p}h we ov} c.t$ ! ~ws t
  bo? />t ) 8aha0 & 5d ) 8bah01 b s9ce !
  ~ws >e only #e lrs l;g1 "! >e no s*
  ~ws4
;e4 _% (8*7*6*5*4)-3*(5*4) .k #6660 _:
  ~ws4 ,all ! ~ws m9us ! bad "os4 ,!
  taboo ~w c 2 9 any ( ?ree posi;ns
  "</>t+ ) lr #a1 #b1 or #c"> & = ea*
  posi;n we m/ *oose ! o!r two lrs "<f !
  rema9+ #e lrs">4
#aj 4
  ,= h{ _m ?ree digit numb}s "<#ajj to
#iii"> is ! .7sum ( ! digits.' ev58 "<,=
example1 _% #343 _: has an ev5 sum (
digits3 _% #3+4+3 .k #10 _: : is ev54">
,f9d ! answ} & expla9 :y x is correct 9
at l1/ two .1di6}5t ways4
#aa 4
  ,suppose a draw} has a doz5 br{n socks
& a doz5 black socks "<all ?r{n tgr">4

a4 ,h{ _m socks m/ 2 tak5 | at r&om to
  gu>antee a mat* "<( any color">8
;b4 ,h{ _m socks m/ 2 tak5 | at r&om to
  gu>antee at l1/ two >e black socks8
,solu;n 43

a4 #c socks4 ,h"o/ly1 if y don't c>e ab
  color1 ? is an >gu;t = n"e fold+
  socks4
;b4 #ad4 ,i cd h gra2$ #ab br{n socks 9
  a r{1 s 9 ? wor/-case sc5>io1 two
  black socks >e ! la/ ,i pick$4
#ab 4
  ,if "! >e #ch di6}5t "t p}iods dur+ :
classes c 2 s*$ul$1 & "! >e #fgg di6}5t
classes1 h{ _m rooms >e requir$8
,solu;n 43
_%
`~( #677 `~) .k #18
   ?3333#
    #38
_:
  rooms4
#ac 4
  ,assum+ t no "o has m ?an #a1jjj1jjj
hairs on _! h1d & t ! popula;n ( ,new
,york ,c;y 0 #h1jjh1bgh 9 #bjaj1 :at is
! l1/ numb} ( p 9 ,,nyc 9 #bjaj ) ! same
numb} ( hairs on _! h1ds8
#ad 4
  ,suppose t _% a, b, c, d,  and e _: >e
five di6}5t 9teg}s4 ,m/ "s pair ( !m
di6} by a multiple ( f|r8
,solu;n 43
  ,"! >e a total ( f|r di6}5t rema9d}s
modulo #d4 ,ac to ! ,g5}aliz$ ,pig5hole
,pr9cipal1 if we h #e numb}s divid$ am;g
f|r di6}5t rema9d}s1
_%
`~( #5 `~) .k #2
   ?33#
    #4
_:
( !m h to h ! same rema9d}4 ,?us !y di6}
by a multiple ( f|r4

  ,sec;n #e4b ,comb9a;ns & ,p}muta;ns
7777777777777777777777777777777777777777
,def9i;n  #e4b4a 4  ,p}muta;n4
  ,a ~1p}muta;n is an ord}$ >range;t (
objects4
7777777777777777777777777777777777777777
,example  #e4b4b 4
  ,if ,i want to >range five books on a
%elf1 h{ _m possible >range;ts ( ! books
>e "!8
7777777777777777777777777777777777777777
,example  #e4b4c 4
  ,h{ _m func;ns _% f_3 .(1, 2, 3.) $o
.(1, 2, 3.) _: >e bijec;ns8
7777777777777777777777777777777777777777
,example  #e4b4d 4
  ,if ,i only want to >range ?ree ( !
five books on my %elf1 h{ _m ways >e "!
to d t8
7777777777777777777777777777777777777777
,!orem  #e4b4e 4
  ,if .2;n is a positive 9teg} & .2;r is
an 9teg} s* t _% #1 "k: r "k: n _:1 !n
"! >e _% ,p(n, r) .k n*(n-1)*(n-2)*'''
*(n-(r-1)) _: .2;r-p}muta;ns ( a set (
.2;n ele;ts4
7777777777777777777777777777777777777777
,coroll>y  #e4b4f 4
  ,if .2;n & .2;r >e 9teg}s ) _% #0 "k:
r "k: n _:1 !n3
_%
,p(n, r) .k   ;n&
            ?333333#
             (n-r)&
_:
7777777777777777777777777777777777777777
,example  #e4b4g 4
  ,h{ _m six-lr van;y lic5se plates >e
"! t h no rep1t$ lrs8
7777777777777777777777777777777777777777
,example  #e4b4h 4
  ,h{ _m func;ns _% f_3 .(1, 2, 3, 4.)
$o .(1, 2, 3, 4, 5, 6.) _: >e 9jective8
.<,recall a func;n is 9jective _% `&a,
`&b(f(a) .k f(b)) $o (a .k b) _:.>
7777777777777777777777777777777777777777
,def9i;n  #e4b4i 4  ,comb9a;n4
  ,a ~1comb9a;n is an unord}$ selec;n (
objects4
7777777777777777777777777777777777777777
,example  #e4b4aj 4
  ,if ,i want only to select ?ree books
f my five books on ! book%elf1 9 h{ _m
ways c ,i d ?8
7777777777777777777777777777777777777777
,note  #e4b4aa 4
  ,if _% n and r _: >e 9teg}s s* t _% #0
"k: r "k: n _:1 !n ! numb} (
.2;r-comb9a;ns f a set ( .2;n ele;ts is
_%
,(n,) .k     ;n&
,(r,)    ?3333333333#
          ;r& (n-r)&
_:
7777777777777777777777777777777777777777
,example  #e4b4ab 4
  ,h{ _m ways >e "! to *oose five | ( t5
frs to 9vite ov} = d9n}8
7777777777777777777777777777777777777777
,example  #e4b4ac 4
  ,two ( yr t5 frs1 ,tim & ,tammy j
broke up4 ,!y c't /& to 2 9 a room tgr4
,h{ _m ways >e "! to *oose five | ( t5
frs to 9vite to d9n}1 5sur+ t ,tim &
,tammy >e n bo? 9vit$8
7777777777777777777777777777777777777777
,example  #e4b4ad 4
  ,h{ _m ?ree ele;t subsets f a set (
five ele;ts >e "!8
7777777777777777777777777777777777777777
,example  #e4b4ae 4
  ,f a /&>d deck ( #eb c>ds1 h{ _m five
c>d h&s >e possible8
7777777777777777777777777777777777777777
,example  #e4b4af 4
  ,h{ _m five c>d c>ds h exactly ! same
suit8
7777777777777777777777777777777777777777
,example  #e4b4ag 4
  ,h{ _m five c>d h&s h at l1/ "o he>t8
,ex}cises ,ex}cises #a 4
  ,a pizza p>lor (f}s #aj topp+s4

a4 ,h{ _m #c-topp+ pizzas cd !y put on
  _! m5u8  ,assume d|ble topp+s >e n
  all{$4
;b4 ,h{ _m total pizzas >e possible1 )
  2t z}o & t5 topp+s "<b n d|ble
  topp+s"> all{$8
;c4 ,! pizza p>lor w li/ ! #aj topp+s 9
  two equal-siz$ columns on _! m5u4  ,h{
  _m ways c !y >range ! topp+s 9 ! left
  column8
,solu;n 43

a4
  _%
  ,(#10,) .k #120
  ,(#3 ,)
  _:
  pizzas4  ,we m/ *oose "<9 no "picul>
  ord}"> #c | ( ! #aj topp+s4
;b4 _% #2~10 .k #1024 _: pizzas4  ,say
  yes or no to ea* topp+4
;c4 _% ,p(10, 5) .k #30240 _: ways4
  ,assign ea* ( ! #e spots 9 ! left
  column to a unique pizza topp+4
#b 4
  ,a comb9a;n lock 3si/s ( a dial ) #dj
numb}s on x4 ,to op5 ! lock1 y turn !
dial to ! "r until y r1* a f/ numb}1 !n
to ! left until y get to second numb}1
!n to ! "r ag to ! ?ird numb}4 ,! numb}s
m/ 2 4t9ct4 ,h{ _m di6}5t comb9a;ns >e
possible8
,solu;n 43
  ,despite xs "n1 we >e n look+ = a
comb9a;n "h4 ,! ord} 9 : ! ?ree numb}s
appe>s matt}s4 ,"! >e _% ,p(40, 3) .k
#40*39*38 _: di6}5t possibilities = !
8comb9a;n04 ,? is assum+ y _c rep1t any
( ! numb}s "<if y cd1 ! answ} wd 2
_% #40~3 _:">4
#c 4
  ,an .1anagram ( a ~w is j a re>range;t
( xs lrs4 ,h{ _m di6}5t anagrams (
8uncopy"rable0 >e "!8 "<,? happ5s to 2 !
l;ge/ common ,5gli% ~w )|t any rep1t$
lrs4">
#d 4
  ,h{ _m anagrams >e "! ( ! ~w
8assesses0 t />t ) ! lr 8a08
,solu;n 43
  ,af ! f/ lr "<a">1 we m/ re>range !
rema9+ #g lrs4 ,"! >e only two lrs "<;s
& ;e">1 s ? is r1lly j a bit-/r+ "q
"<?9k ( ;s z #a & ;e z #j">4 ,?us "!
_%
,(#7,) .k #21
,(#2,)
_:
anagrams />t+ ) 8a04
#e 4
  ,h{ _m anagrams >e "! ( 8anagram08
#f 4
  ,on a busi;s retr1t1 yr company ( #bj
busi;sm5 & busi;swom5 g golf+4

a4 ,y ne$ to divide up 9to f|r"ss
  "<gr|ps ( #d p">3 a f/ f|r"s1 a second
  f|r"s1 & s on4  ,h{ _m ways c y d ?8
;b4 ,af all yr h>d "w1 y r1lize t 9
  fact1 y want ea* f|r"s to 9clude "o (
  ! five ,bo>d memb}s4  ,h{ _m ways c y
  d ?8
,solu;n 43

a4
  _%
  ,(#20,),(#16,),(#12,),(#8,),(#4,)
  ,(#4 ,),(#4 ,),(#4 ,),(#4,),(#4,)
  _:
  ways4 ,pick #d | ( #bj p to 2 9 ! f/
  f|r"s1 !n #d ( ! rema9+ #af = ! second
  f|r"s1 & s on "<use ! multiplicative
  pr9ciple to comb9e">4
;b4
  _%
  #5& ,(#15,),(#12,),(#9,),(#6,),(#3,)
      ,(#3 ,),(#3 ,),(#3,),(#3,),(#3,)
  _:
  ways4  ,f/ det}m9e ! tee "t ( ! #e
  bo>d memb}s1 !n select #c ( ! #ae non
  bo>d memb}s to golf ) ! f/ bo>d memb}1
  !n #c ( ! rema9+ #ab to golf ) !
  second1 & s on4
#g 4
  ,3sid} sets .2,a & .2;,b ) _% |,a| .k
#10 _: & _% |,b| .k #17 _:4

a4 ,h{ _m func;ns _% f_3 ,a $o ,b _: >e
  "!8
;b4 ,h{ _m func;ns _% f_3 ,a $o ,b _: >e
  9jective8
,solu;n 43

a4 _% #17~10 _: func;ns4  ,"! >e #ag
  *oices = ! image ( ea* ele;t 9 !
  doma94
;b4 _% ,p(17, 10) _: 9jective func;ns4
  ,"! >e #ag *oices = image ( ! f/ ele;t
  ( ! doma91 !n only #af *oices = !
  second1 & s on4

    ,sec;n #e4c ,! ,b9omial ,!orem &
          ,comb9atorial ,pro(s

    ,subsec;n #e4c4a ,! ,b9omial ,!orem
    & ,b9omial ,coe6ici5ts
7777777777777777777777777777777777777777
,example  #e4c4a 4
  ,exp& ! b9omial3 _% (x+y)~3 _:
,solu;n 43
  ,"ey"o & _! pet cat w give ! correct
answ}3 _% x~3"+3x~2"y+3xy~2"+y~3 _:4
  ,:y is ? ! case8 ,ea* t}m has "s am.t
( .2;x's & .2;y's4 ,! coe6ici5t ( !
_% x~3-k"y~k _: t}m is c.t+ ! numb} (
t}ms t h _% y~k _:
_%
(x+y)~3 .k ,(#3,)x~3"y~0"+,(#3,)x~2"y~1-
"+,(#3,)x~1"y~2"+,(#3,)x~0"y~3
           ,(#0,)         ,(#1,)-
  ,(#2,)         ,(#3,)
_:
7777777777777777777777777777777777777777
,!orem  #e4c4b 4  ,! ,b9omial ,!orem4
  ,let _% x and y _: 2 v>iables & .2;n a
natural numb}1 !n
_%
(x+y)~n .k ".,s%k .k #0<n},(n,)x~n-k"y~k
                          ,(k,)
_:
7777777777777777777777777777777777777777
,def9i;n  #e4c4c 4  ,b9omial ,coe6ici5t4
  ,we call
_%
,(n,)
,(k,)
_:
a ~1b9omial ~1coe6ici5t~'4
7777777777777777777777777777777777777777
,note  #e4c4d 4
  ,! b9omial coe6ici5t c.ts3

_4
  _%
  ,(n,)
  ,(k,)
  _:
  is ! numb} ( ways to select .2;k
  objects f a set ( .2;n objects4
_4
  _%
  ,(n,)
  ,(k,)
  _:
  is ! coe6ici5t ( _% x~n-k"y~k _: 9 !
  expan.n ( _% (x+y)~n _:
_4
  _%
  ,(n,)
  ,(k,)
  _:
  is ! numb} subsets ( size .2;k f a set
  ( size .2;n
_4
  _%
  ,(n,)
  ,(k,)
  _:
  is ! numb} ( bit /r+s ( l5g? .2;n )
  exactly .2;k #a's
_4 _%  ''' _: "! >e _m m ways ( view+
  b9omial coe6ici5ts4

    ,subsec;n #e4c4b ,comb9atorial
    ,pro(s
  ,let's >range ! b9omial coe6ici5ts
_%
,(n,)
,(k,)
_:
9to a triangle l foll{s3
,image ,,id3 pascal-small
,descrip;n3 ,pascal's triangle4 ,numb}s
>e >rang$ 9 r{s 9 ! %ape ( a triangle4
,! top numb} is #a4 ,next r{ is #a & #a2
next r{ is #a1 #b1 #a2 next is #a1 #c1
#c1 #a2 & x 3t9ues4 ,ea* 5try is f.d by
add+ ! two 5tries abv x3 e4g4 #c"7#a"6#b
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
  ,"! >e lots ( patt}ns hidd5 away 9 !
triangle1 5 to fill a r1sonably siz$
book4 ,"h >e j a few ( ! mo/ obvi|s "os3

#a4 ,! 5tries on ! bord} ( ! triangle >e
  all #a4
  _%
  ,(n ,) .k ,(n,) .k #1
  ,(#0,)    ,(n,)
  _:
#b4 ,any 5try n on ! bord} is ! sum ( !
  two 5tries abv x4
  _%
  ,(n,) .k ,(n-1,)+,(n-1,)
  ,(k,)    ,(k-1,) ,(k  ,)
  _:
#c4 ,! triangle is symmetric4  ,9 any
  r{1 5tries on ! left side >e mirror$
  on ! "r side4
  _%
  ,(n,) .k ,(n  ,)
  ,(k,)    ,(n-k,)
  _:
#d4 ,! sum ( all 5tries on a giv5 r{ is
  a p{} ( #b4
  _%
  ,(n ,)+,(n ,)+,(n ,)+''' +,(n,) .k #2-
  ~n
  ,(#0,) ,(#1,) ,(#2,)      ,(n,)-
  
  _:
  ,|r goal = ! rema9d} ( ! sec;n is to
give pro(s ( b9omial id5tities4
7777777777777777777777777777777777777777
,example  #e4c4e 4
  ,give an algebraic pro( = ! b9omial
id5t;y
_%
,(n,) .k ,(n-1,)+,(n-1,)."
,(k,)    ,(k-1,) ,(k  ,)
_:
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,by ! def9i;n (
_%
,(n,)
,(k,)
_:
1 we h
_%
,(n-1,) .k        (n-1)&          .k-
  (n-1)&
,(k-1,)    ?33333333333333333333#    ?3-
333333333333#
            (n-1-(k-1))& (k-1)&       (-
n-k)& (k-1)&
_:
&
_%
,(n-1,) .k    (n-1)&    .
,(k  ,)    ?33333333333#
            (n-1-k)& k&
_:
  ,?us1 />t+ ) ! "r-h& side ( ! equa;n3
_%
,(n-1,)+,(n-1,)                .k     (-
n-1)&      +   (n-1)&
,(k-1,) ,(k  ,)                   ?3333-
3333333333# ?333333333333#
                                   (n-k-
)& (k-1)&    (n-1-k)& k&
-

.k   (n-1)& k  + (n-1)& (n-k)
   ?3333333333# ?333333333333#
    (n-k)& k&     (n-k)& k&
-

.k  (n-1)& (k+n-k)
   ?33333333333333#
      (n-k)& k&
-

.k     ;n&
   ?3333333333#
    (n-k)& k&
-

.k ,(n,)."
   ,(k,)
_:
  ,! second l9e "<": ! common d5om9ator
is f.d"> "ws 2c _% k(k-1)&  .k k& _: &
_% (n-k)(n-k-1)&  .k (n-k)& _:4
7777777777777777777777777777777777777777
,example  #e4c4f 4
  ,give a comb9ot>ial pro( ( ! id5t;y3
_%
,(n,) .k ,(n-1,)+,(n-1,)."
,(k,)    ,(k-1,) ,(k  ,)
_:
by view+ ! b9omial coe6ici5ts z c.t+
subsets4
,solu;n 43
  ,we 2g9 by ask+ a "q1 & answ}+ ! "q 9
two ways3
  8,h{ _m subsets ( size .2;k >e "! f a
set ( size .2;n80
  ,answ} "o3 ,"! >e
_%
,(n,)
,(k,)
_:
s* subsets4
  ,answ} two3 ,pick any ele;t ( ! set4
,t ele;t is ei 9clud$ 9 a subset1 or x
is n4

_4 ,h{ _m subsets 3ta9 ? ele;t8 ,we w 2
  pick+ f ! rema9+ _% n-1 _: ele;ts4
  ,s9ce we want ! subsets to h .2;k
  ele;ts1 b we alr h "o ( !m1 we h a
  total (
  _%
  ,(n-1,)
  ,(k-1,)
  _:
  s* subsets4
_4 ,h{ _m subsets .1d .1n 3ta9 ? ele;t8
  ,we w 2 pick+ f ! rema9+ _% n-1 _:
  ele;ts4 ,s9ce we want ! subsets to h
  .2;k ele;ts1 we h
  _%
  ,(n-1,)
  ,(k  ,)
  _:
  s* subsets4
,?us "! >e
_%
,(n-1,)+,(n-1,)
,(k-1,) ,(k  ,)
_:
subsets ( .2;k ele;ts f a set ( .2;n
ele;ts4
  ,2c ea* answ} c.t$ ! same objects1 b 9
two di6}5t ways1 ~? answ}s m* 2 ! same4
,?us
_%
,(n,) .k ,(n-1,)+,(n-1,)."
,(k,)    ,(k-1,) ,(k  ,)
_:
7777777777777777777777777777777777777777
,note  #e4c4g 4
  ,= a comb9atorial pro(3

#a4 ,det}m9e a "q t c 2 answ}$ by !
  "picul> equa;n4
#b4 ,answ} ! "q 9 two di6}5t ways
#c4 ,2c ~? answ}s c.t ! same object1 we
  c equate _! solu;ns4
,com+ up ) ! "q is (t5 ! h>de/ "p4
7777777777777777777777777777777777777777
,example  #e4c4h 4
  ,give a comb9atorial pro( ( !
id5tities3

#a4
  _%
  ,(n ,) .k #1
  ,(#0,)
  _:
  4
#b4
  _%
  ,(n,) .k ,(n  ,)
  ,(k,)    ,(n-k,)
  _:
,= ea*1 :at "q %d we answ}8
7777777777777777777777777777777777777777
,example  #e4c4i 4
  ,prove ! b9omial id5t;y
_%
(,(n ,))~2"+(,(n ,))~2"+(,(n ,))~2+'''-
+(,(n,))~2 .k ,(#2n,)
 ,(#0,)      ,(#1,)      ,(#2,)-
  ,(n,)       ,(n  ,)
_:
,h9t 43
  ,h{ _m pizzas ( .2;n topp+s c 2 made
if we c *oose f _% #2n _: topp+s8
,ex}cises #e4c4c ,ex}cises #a 4
  ,prove
_%
".,s%k .k #0<n},(n,) .k #2~n
               ,(k,)
_:
4
,h9t 43
  ,"h >e two di6}5t ways to g ab x3

a4 ,comb9atorial pro(3 ,answ} ! "q 8,if
  a pizza place (f}s .2;n topp+s1 h{ _m
  pizzas c y build us+ any numb} (
  topp+s us+ ea* topp+ no m ?an once80
;b4 ,or1 use ! b9omial !orem & set
  appropriate values ( _% x and y _:4
#b 4
  ,give a comb9atorial pro( ( ! id5t;y
_% #2+2+2 .k #3*2 _:4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m #b-lr ~ws />t ) .2a1 .2;b1
or .2;c & 5d ) ei .2;y or .2;z8
  ,answ} #a3 ,"! >e two ~ws t />t ) .2a1
two t />t ) .2;b1 two t />t ) .2;c1 = a
total ( _% #2+2+2 _:4
  ,answ} #b3 ,"! >e ?ree *oices = ! f/
lr & two *oices = ! second lr1 = a total
( _% #3*2 _:4
  ,s9ce ! two answ}s >e bo? answ}s to !
same "q1 !y >e equal4 ,?us _% #2+2+2 .k
#3*2 _:4
#c 4
  ,give a comb9atorial pro( = ! id5t;y
_%
#1+2+3+''' +n .k ,(n+1,)
                 ,(#2 ,)
_:
4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m subsets ( _% ,a .k .(1, 2,
3, ''', n+1.) _: 3ta9 exactly two
ele;ts8
  ,answ} #a3 ,we m/ *oose #b ele;ts f
_% n+1 _: *oices1 s "! >e
_%
,(n+1,)
,(#2 ,)
_:
subsets4
  ,answ} #b3 ,we br1k ? "q d{n 9to
cases1 bas$ on :at ! l>g} ( ! two ele;ts
9 ! subset is4 ,! l>g} ele;t c't 2 #a1
s9ce we ne$ at l1/ "o ele;t small} ?an
x4
  ,l>g} ele;t is #b3 "! is #a *oice = !
small} ele;t4
  ,l>g} ele;t is #c3 "! >e #b *oices = !
small} ele;t4
  ,l>g} ele;t is #d3 "! >e #c *oices = !
small} ele;t4
  ,& s on4 ,:5 ! l>g} ele;t is
_% n+1 _:1 "! >e .2;n *oices = ! small}
ele;t4 ,s9ce ea* two ele;t subset m/ 2 9
exactly "o ( ~! cases1 ! total numb} (
two ele;t subsets is _% #1+2+3+'''
+n _:4
  ,answ} #a & answ} #b >e bo? correct
answ}s to ! same "q1 s !y m/ 2 equal4
,"!=e1
_%
#1+2+3+''' +n .k ,(n+1,)
                 ,(#2 ,)
_:
#d 4
  ,a woman is gett+ m>ri$4 ,%e has #ae
be/ frs b c only select #f ( !m to 2 h}
bridesmaids1 "o ( : ne$s to 2 h} maid (
honor4 ,h{ _m ways c %e d ?8

a4 ,:at if %e f/ selects ! #f
  bridesmaids1 & !n selects "o ( !m to 2
  ! maid ( honor8
;b4 ,:at if %e f/ selects h} maid (
  honor1 & !n #e o!r bridemaids8
;c4 ,expla9 :y
  _%
  #6,(#15,) .k #15,(#14,)
    ,(#6 ,)       ,(#5 ,)
  _:
  4
,solu;n 43

a4 ,%e has
  _%
  ,(#15,)
  ,(#6 ,)
  _:
  ways to select ! #f bridesmaids1 & !n
  = ea* way1 has #f *oices = ! maid (
  honor4  ,?us %e has
  _%
  ,(#15,)6
  ,(#6 ,)
  _:
  *oices4
;b4 ,%e has #ae *oices = :o w 2 h} maid
  ( honor4  ,!n %e ne$s to select #e ( !
  rema9+ #ad frs to 2 bridesmaids1 : %e
  c d 9
  _%
  ,(#14,)
  ,(#5 ,)
  _:
  ways4  ,?us %e has
  _%
  #15,(#14,)
     ,(#5 ,)
  _:
  *oices4
;c4 ,we h answ}$ ! "q "<h{ _m w$d+ "pies
  c ! bride *oose f"> 9 two ways4  ,! f/
  way gives ! left-h& side ( ! id5t;y &
  ! second way gives ! "r-h& side ( !
  id5t;y4  ,"!=e ! id5t;y holds4
#e 4
  ,give a comb9atorial pro( ( ! id5t;y
_%
,(n ,),(n-2,) .k ,(n,),(k ,)
,(#2,),(k-2,)    ,(k,),(#2,)
_:
4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,y h a l>ge 3ta9} fill$ ) p+-p;g
balls1 all ) a di6}5t numb} on !m4 ,y m/
select .2;k ( ! balls1 putt+ two ( !m 9
a j> & ! o!rs 9 a box4 ,h{ _m ways c y d
?8
  ,answ} #a3 ,f/ select #b ( ! .2;n
balls to put 9 ! j>4 ,!n select
_% k-2 _: ( ! rema9+ _% n-2 _: balls to
put 9 ! box4 ,! f/ task c 2 complet$ 9
_%
,(n ,)
,(#2,)
_:
di6}5t ways1 ! second task 9
_%
,(n-2,)
,(k-2,)
_:
ways4 ,?us "! >e
_%
,(n ,),(n-2,)
,(#2,),(k-2,)
_:
ways to select ! balls4
  ,answ} #b3 ,f/ select .2;k balls f !
.2;n 9 ! 3ta9}4 ,!n pick #b ( ! .2;k
balls y pick$ to put 9 ! j>1 plac+ !
rema9+ _% k-2 _: 9 ! box4 ,! f/ task c 2
complet$ 9
_%
,(n,)
,(k,)
_:
ways1 ! second task 9
_%
,(k ,)
,(#2,)
_:
ways4 ,?us "! >e
_%
,(n,),(k ,)
,(k,),(#2,)
_:
ways to select ! balls4
  ,s9ce bo? answ}s c.t ! same ?+1 !y m/
2 equal & ! id5t;y is e/abli%$4
#f 4
  ,h{ _m ways >e "! to re>range ! lrs 9
! ~w 8re>range08 ,answ} ? "q 9 at l1/
two di6}5t ways to e/abli% a b9omial
id5t;y4
,solu;n 43
  ,! ~w 3ta9s #i lrs3 #c 8r0s1 #b 8a0s &
#b 8e0s1 al;g ) an 8;n0 & a 8;g04 ,we cd
f/ select ! posi;ns = ! 8r0s 9
_%
,(#9,)
,(#3,)
_:
ways1 !n ! 8a0s 9
_%
,(#6,)
,(#2,)
_:
ways1 ! 8e0s 9
_%
,(#4,)
,(#2,)
_:
ways & !n select "o ( ! rema9+ two spots
to put ! 8;n0 "<plac+ ! 8;g0 9 ! la/
spot">4 ,? gives ! answ}
_%
,(#9,),(#6,),(#4,),(#2,),(#1,)."
,(#3,),(#2,),(#2,),(#1,),(#1,)
_:
  ,alt}natively1 we cd select ! posi;ns
( ! lrs 9 ! opposite ord}1 : wd give an
answ}
_%
,(#9,),(#8,),(#7,),(#5,),(#3,)."
,(#1,),(#1,),(#2,),(#2,),(#3,)
_:
  "<": ! #c 8r0s g 9 ! rema9+ #c
spots">4 ,~! two expres.ns >e equal3
_%
,(#9,),(#6,),(#4,),(#2,),(#1,) .k ,(#9,-
),(#8,),(#7,),(#5,),(#3,)."
,(#3,),(#2,),(#2,),(#1,),(#1,)    ,(#1,-
),(#1,),(#2,),(#2,),(#3,)
_:
#g 4
  ,give a comb9atorial pro( ( ! id5t;y
_% #1+2+4+8+ ''' #2~n-1 .k #2~n"-1 _:
#h 4
  ,give a comb9atorial pro( = ! id5t;y
_%
,p(n, k) .k ,(n,)k&
            ,(k,)
_:
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m .2;k-lr ~ws c y make us+
.2;n di6}5t lrs )|t rep1t+ any lr8
  ,answ} #a3 ,"! >e .2;n *oices = ! f/
lr1 _% n-1 _: *oices = ! second lr1
_% n-2 _: *oices = ! ?ird lr1 & s on
until _% n-(k-1) _: *oices = ! .2k? lr
"<s9ce _% k-1 _: lrs h alr be5 assign$
at t po9t">4 ,! product ( ~! numb}s c 2
writt5
_%
  ;n&
?333333#
 (n-k)&
_:
: is _% ,p(n, k) _:4  ,"!=e "! >e
_% ,p(n, k) _: ~ws4
  ,answ} #b3 ,f/ pick .2;k lrs to 2 9 !
~w f ! .2;n *oices4 ,? c 2 d"o 9
_%
,(n,)
,(k,)
_:
ways4 ,n{ >range ~? lrs 9to a ~w4 ,"! >e
.2;k *oices = ! f/ lr1 _% k-1 _: *oices
= ! second1 & s on1 = a total ( _% k& _:
>range;ts ( ! .2;k lrs4 ,?us ! total
numb} ( ~ws is
_%
,(n,)k&
,(k,)
_:
4
  ,s9ce ! two answ}s >e correct answ}s
to ! same "q1 we h e/abli%$ t
_%
,p(n, k) .k ,(n,)k&
            ,(k,)
_:
4
#i 4
  ,e/abli% ! id5t;y 2l us+ a
comb9atorial pro(4
_%
,(#2,),(n ,)+,(#3,),(n-1,)+,(#4,),(n-2,-
)+''' +,(n ,),(#2,) .k ,(n+3,)."
,(#2,),(#2,) ,(#2,),(#2 ,) ,(#2,),(#2 ,-
)      ,(#2,),(#2,)    ,(#5 ,)
_:
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m #e-ele;t subsets >e "! ( !
set _% .(1, 2, ''', n+3.) _:4
  ,answ} #a3 ,we *oose #e | ( !
_% n+3 _: ele;ts1 s
_%
,(n+3,)
,(#5 ,)
_:
subsets4
  ,answ} #b3 ,br1k ? up 9to cases by :at
! 8middle0 "<?ird smalle/"> ele;t ( ! #e
ele;t subset is4 ,! smalle/ ? cd 2 is a
#c4 ,9 t case1 we h
_%
,(#2,)
,(#2,)
_:
*oices = ! numb}s 2l x1 &
_%
,(n ,)
,(#2,)
_:
*oices = ! numb}s abv x4 ,alt}natively1
! middle numb} cd 2 a #d4 ,9 ? case "!
>e
_%
,(#3,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(n-1,)
,(#2 ,)
_:
*oices = ! top two numb}s4 ,if ! middle
numb} is #e1 !n "! >e
_%
,(#4,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(n-2,)
,(#2 ,)
_:
*oices = ! top two numb}s4 ,an s on1 all
! way up to ! l>ge/ ! middle numb} cd
be1 : is _% n+1 _:4 ,9 t case "! >e
_%
,(n ,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(#2,)
,(#2,)
_:
*oices = ! top numb}4 ,?us ! numb} ( #e
ele;t subsets is
_%
,(#2,),(n ,)+,(#3,),(n-1,)+,(#4,),(n-2,-
)+''' +,(n ,),(#2,)."
,(#2,),(#2,) ,(#2,),(#2 ,) ,(#2,),(#2 ,-
)      ,(#2,),(#2,)
_:
  ,s9ce ! two answ}s correctly answ} !
same "q1 we h
_%
,(#2,),(n ,)+,(#3,),(n-1,)+,(#4,),(n-2,-
)+''' +,(n ,),(#2,) .k ,(n+3,)."
,(#2,),(#2,) ,(#2,),(#2 ,) ,(#2,),(#2 ,-
)      ,(#2,),(#2,)    ,(#5 ,)
_:
#aj 4
  ,9 ea* polynomial 2l1 assume .2;x is
"s v>iable4 ,use ! b9omial !orem to exp&
& r$uce modulo ! appropriate numb}3

a4 _% (x+1)~2"(mod #2) _:
;b4 _% (x+1)~5"(mod #5) _:
;c4 _% (x+1)~7"(mod #7) _:
,prove t _% (x+1)~p _l x~p"+1(mod p) _:
= any prime .2;p4
,solu;n 43
  ,"h's a "pial solu;n3

a4 _% (x+1)~2 .k x~2"+2x+1 _l x~2"+1(mod
  #2) _:
;b4 _% (x+1)~5 .k
  x~5"+5x~4"+10x~3"+10x~2"+5x+1 _l
  x~5"+1(mod #5) _:
,:at c 2 sd ab ea* ea* b9omial coe6ici5t
except ! f/ & ! la/8 ,:y8

 ,sec;n #e4d ,a surprise 3nec;n - ,c.t+
            ,fibona3i numb}s
7777777777777777777777777777777777777777
,example  #e4d4a 4
  ,let's imag9e t y h a rectangul> grid
( blank spaces4 ,h{ _m ways c y tile t
grid us+ ei squ>e tiles or
two-squ>e-wide dom9os4
  ,we w def9e an .2;n~1-bo>d to 2 a
rectangul> grid ( .2;n spaces4
  ,= example1 "h >e all ( ! possible
til+s = a #d-bo>d3
,image ,,id3 til+s-(-#d;board
,descrip;n3 ,til+s ( a #d-bo>d3 #dsq2
#a;dom1 #bsq2 sq1 dom1 sq2 #bsq1 #a;dom2
#b;dom
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,example  #e4d4b 4
  ,9 h{ _m ways c y tile a #e-bo>d8
,solu;n 43
  ,we "k t a #e-bo>d is j a #d-bo>d ) an
extra space4 ,h{ _m ways >e "! to tile
?8 ,"! >e #e ways to tile a #d-bo>d &
all we're do+ is add+ an extra squ>e4
,"!'s _% #5*1 .k #1 _: ways to d ?4
  444 b a #e-bo>d is al a #c-bo>d ) an
extra two spaces at ! 5d4 ,h{ _m ways c
we tile ?8 ,well1 "! >e #c ways to tile
! ?ree bo>d1 & we j add a dom9o4
  ,~! two subdivi.ns >e mutually
exclusive "<if we add$ a squ>e to !
#c-bo>d1 t's turn$ x 9to ! #d-bo>d1 : 0
alr c.t$ abv">4 ,s we c 3clude ! numb} (
ways to tile a #e-bo>d is #e"6#c "7 #h4
,image ,,id3 til+-#e-bo>d
,descrip;n3 ,til+ a #e-bo>d3 ,! #e-bo>d
is a #d-bo>d ) squ>e plus a #c-bo>d plus
dom9o
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4
7777777777777777777777777777777777777777
,!orem  #e4d4c 4
  ,let _% f;n _: d5ote ! numb} ( til+s =
an .2;n-bo>d4  ,!n _% f0 .k #1 _: "<"!
is "o way to tile a #j bo>d">1 & _% f1
.k #1 _:1 & = _% n .1: #2 _:
_% f;n+1 .k f;n"+f;n-1 _:
7777777777777777777777777777777777777777
,pro( 4
  ,9 an _% n+1 _:-bo>d1 "! >e _% f;n _:
ways to tile ! f/ .2;n tiles foll{$ by
"o squ>e1 & "! >e _% f;n-1 _: to tile !
f/ _% n-1 _: tiles1 foll{$ by a dom9o4
,~! til+s >e 4jo9t ev5ts1 & ?us _% f;n+1
.k f;n"+f;n-1 _:4
7777777777777777777777777777777777777777
,coroll>y  #e4d4d 4
  ,let _% ,f;n _: by ! .2n? ,fibona3i
numb}4 ,!n _% f;n .k ,f;n+1 _: "<":
we'll make ! nota;nal 3v5;n t _% f;-1 .k
#0 _: s |r 9dices c mat*">4
  ,let's put ? to use to v}ify "s
,fibona3i id5tities us+ comb9atorial
pro(4 ,:5 we write ~13di;n ~1on .2;m  we
m1n to 3sid} 8br1k+0 ! bo>d at tile .2;m
& c.t ! sep>ate pieces4
7777777777777777777777777777777777777777
,example  #e4d4e 4
  ,= _% n .1: #0, f0+f1+f2+''' +f;n" .k
f;n+2"-1 _:4
,h9t 43
  ,"q3 8,h{ _m til+s ( an _% n+2 _:-bo>d
use at l1/ "o dom9o80 ,3di;n on ! loca;n
( ! la/ dom9o4
7777777777777777777777777777777777777777
,example  #e4d4f 4
  ,= _% n .1: #0, f0+f2+f4+''' +f;2n" .k
f;2n+1 _:4
,h9t 43
  ,3di;n on ! loca;n ( ! la/ squ>e4
  ,we say t a til+ ( an .2;n-bo>d is
~7br1kable at cell~' .2;k 1 if ! til+ c
2 decompos$ 9to two til+s1 "o cov}+
cells #a "? .2;k1 ! o!r _% k+1 _: "?
.2;n4 ,x is sd to 2 ~1unbr1kable ~1at
.2;k  o!rwise4
7777777777777777777777777777777777777777
,example  #e4d4g 4
  ,= _% m, n .1: #0, f;m+n .k
f;m"f;n"+f;m-1"f;n-1 _:4
,h9t 43
  ,3di;n on ! br1kabil;y at cell .2;m4
7777777777777777777777777777777777777777
,example  #e4d4h 4
  ,= _% n .1: #0 _:3
_%
".,s%i .k #0<n},(n-i,) .k f;n
               ,(i  ,)
_:
4
  ,note t we'll def9e
_%
,(n,) .k #0
,(k,)
_:
if _% n "k k _:4 ,? is r1sonable s9ce1 =
example1 if y want to *oose #c objects f
a set ( #a object1 "! >e no ways to d x3
i4e4
_%
,(#1,) .k #0
,(#3,)
_:
4
,h9t 43
  ,3di;n on ! numb} ( dom9oes4
,solu;n 43
  ,"q3 8,h{ _m til+s ( an .2;n-bo>d
exi/80
  ,answ} #a3 ,"! >e _% f;n _: til+s4
  ,answ} #b3 ,3di;n on ! numb} (
dom9oes4 ,if "! >e no dom9oes1 !n f .2;n
cells1 we h #j *oices = ": to put !
dom9o3
_%
,(n ,)
,(#0,)
_:
4 ,= #a dom9o1 we w 2 us+ a total (
_% n-2 _: squ>es & dom9o : w span !
rema9+ two loca;ns4 ,t m1ns t we >e us+
a total ( _% n-1 _: tiles1 & s we h
_%
,(n-1,)
,(#1 ,)
_:
possibilities4
  ,= ! case ": we >e us+ .2i dom9oes1 )
_% #0 "k: i "k: n_/2 _:1 we w 2 us+
_% n-2i _: squ>es1 or a total (
_% n-2i+i .k n-i _: tiles4 ,to *oose ":
to place ! .2i dom9oes1 we'll h
_%
,(n-i,)
,(i  ,)
_:
ways to d ?4
  ,?us1 "! >e a total (
_%
n .1: #0, ,(n ,)+,(n-1,)+,(n-2,)+''' +,-
(n-n,)
          ,(#0,) ,(#1 ,) ,(#2 ,)      ,-
(n  ,)
_:
til+s ( an .2;n bo>d4
,ex}cises ,ex}cises #a 4
  ,prove t _% f1+f3+f5+''' +f;2n-1 .k
f;2n"-1 _: us+ a comb9atorial >gu;t4
,h9t 43
  ,3di;n on ! loca;n ( ! la/ squ>e4
#b 4
  ,prove t _% f;n~2"+f;n+1~2 .k
f;2n+2 _: us+ a comb9atorial >gu;t4
,h9t 43
  ,3di;n on ! br1kabil;y ( ! _% n+1 _:/
space4
,app5dix ,a ,>i?metic 9 sage code
  ,? w 2 a qk h{ to use sage ,i'm ?9k+
basic >i?metic1 5 to d ! *apt} #d
ex}cises
  ,to d addi;n1 subtrac;n1 multiplica;n1
& divi.n1 j type :at y want to get3
7777777777777777777777777777777777777777
  ,sage
  ,9put3
_1 + _1
  ,|tput3
_2
  ,if y want to d p{}s1 y type ! c>et1
`54
7777777777777777777777777777777777777777
  ,sage
  ,9put3
2^3
  ,|tput3
_8
  ,& alw rememb} to use _m p>5!ses z
gr|p+ symbols = frac;ns or expon5ts ) m
?an "o numb}1 9 ord} to 5sure ! comput}
"u/&s :at y typ$4 ,= example1 to d !
calcula;n3
_%
 -3->9+4*2*5}
?333333333333#
      #4
_:
we ne$ to type "<not+ t ! squ>e root is
sqrt"<">">3
7777777777777777777777777777777777777777
,sage
  ,9put3
(-3 _- sqrt(9 + 4*2*5))/(4)
  ,|tput3
-5/2

         ,solu;ns to ! ex}cises
#a  ,basic ,objects & ,symbols
#a4a  ,proposi;nal ,logic
#a4a4c  ,ex}cises #a4a4c4a 4 ,solu;n 43
.2;p2 .2;q2 _% ((p $o q)`%p) $o q _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;t4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
#a4a4c4b 4 ,solu;n 43

a4 .2;,p3 x's yr bir?"d2 .2;,q3 "! w 2
  cake4 _% (,p`+,q) $o ,q _:
;b4 ,h9t3 y %d get ?ree ;,t's & "o ;,f4
;c4 ,only t "! w 2 cake4
;d4 ,x's ,,n yr bir?"d6
;e4 ,x's yr bir?"d1 b ! cake is a lie4
#a4a4c4c 4 ,solu;n 43
.2;p2 .2;q2 _% (p`+q) $o (p`%q) _:4
;,,,t2 ;t2 ;t4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
#a4a4c4d 4 ,solu;n 43
.2;p2 .2;q2 _% p`%(q $o p) _:4
;,,,t2 ;t2 ;f4,'
;,,,t2 ;f2 ;f4,'
;,,,f2 ;t2 ;f4,'
;,,,f2 ;f2 ;t4,'
  ,if ! /ate;t is true1 !n bo? .2;p &
.2;q >e false4
#a4a4c4e 4 ,h9t 43
  ,l abv1 only n{ y w ne$ #h r{s 9/1d (
j #d4
#a4a4c4f 4 ,solu;n 43

a4 ,3v}se3 8,if ,i br+ an umbrella !n x
  ra9s td404 ,9v}se3 8,if x doesn't ra9
  td !n ,i won't br+ an umbrella40
  ,3trapositive3 8,if ,i won't br+ an
  umbrella1 !n x isn't ra9+ td04
;b4 ,! 3di;nal 8,:5"e ,i drive my c>1 ,i
  d n use my ph"o0 is 8,if ,i drive my
  c>1 !n ,i don't use my ph"o40 ,n{ f9d
  ! o!r /ate;ts4
;c4 ,! 3di;nal 8,:5 ,i /ay up too late1
  x's nec t ,i sleep until noon0 is 8,if
  ,i /ay up too late1 !n x's nec t ,i
  sleep until noon40 ,n{ f9d ! o!r
  /ate;ts4
#a4a4c4g 4 ,solu;n 43
  ,a & ;,b >e bo? ly+ knaves4
#a4a4c4h 4 ,h9t 43
  ,:at happ5s if ,a is a kni<t & is
tell+ ! tru?8 ,:at happ5s if ,a is ly+8
,: sc5>ios >e impossible8 ,:at m/ !
answ} be8
#a4a4c4i 4 ,h9t 43
  ,! "q is complicat$1 by n .1too
complicat$4
#a4b  ,sets
#a4b4d  ,ex}cises #a4b4d4a 4 ,solu;n 43

a4 ,false4 ,= example1 _% #1 `e ,a _: b
  _% #1 /`e ,b _:4
;b4 ,true4 ,e ele;t 9 .2;,b is an ele;t
  9 .2,a4
;c4 ,false4 ,! ele;ts 9 .2;,c >e #a1 #b1
  & #c4 ,! .1set .2;,b is n equal to #a1
  #b1 or #c4
;d4 ,false4 .2,a has exactly #f ele;ts1
  & n"o ( !m >e ! empty set4
;e4 ,true4 ,"ey?+ 9 ! empty set "<no?+">
  is al an ele;t ( .2,a4 ,notice t !
  empty set is a subset ( e set4
;f4 ,m1n+.s4 ,a set _c 2 less ?an ano!r
  set4
;g4 ,true4 _% #3 _: is "o ( ! ele;ts ( !
  set .2;,c4
;h4 ,m1n+.s4 _% #3 _: is n a set1 s x _c
  2 a subset ( ano!r set4
i4 ,true4 _% #3 _: is ! only ele;t ( !
  set _% .(3.) _:1 & is an ele;t (
  .2;,c1 s e ele;t 9 _% .(3.) _: is an
  ele;t ( .2;,c4
#a4b4d4b 4 ,solu;n 43

a4 _% ,a.+,b .k .(1, 2, 3, 4, 5, 6.) .k
  ,a _: s9ce "ey?+ 9 .2;,b is alr 9
  .2,a4
;b4 _% ,a.%,b .k .(2, 4, 6.) .k ,b _:
  s9ce "ey?+ 9 .2;,b is 9 .2,a4
;c4 _% ,b.%,c .k .(2.) _: z ! only ele;t
  ( bo? .2;,b & .2;,c is #b4
;d4 _% ,a.%,d .k _0 _: s9ce .2,a & .2;,d
  h no common ele;ts4
;e4 _% ",b.+,c<:} .k .(5, 7, 8, 9,
  10.) _:4 ,f/ we f9d t _% ,b.+,c .k
  .(1, 2, 3, 4, 6.) _:1 !n we take "ey?+
  n 9 t set4
;f4 _% ,a_*,b .k .(1, 3, 5.) _: s9ce !
  ele;ts #a1 #c1 & #e >e 9 .2,a b n 9
  .2;,b4 ,? is ! same z _% ,a.%,b: _:4
;g4 _% (,d.%,c:).+",a.%,b<:} .k .(1, 3,
  5, 7, 8, 9, 10.). _: ,! set 3ta9s all
  ele;ts t >e ei 9 .2;,d b n 9 .2;,c
  "<i4e41 _% .(7, 8, 9.) _:">1 or n 9
  bo? .2,a & .2;,b "<i4e41 _% .(1, 3, 5,
  7, 8, 9, 10.) _:">4
;h4 _% _0.+,c .k ,c _: s9ce no?+ is add$
  by ! empty set4
i4 _% _0.%,c .k _0 _: s9ce no?+ c 2 bo?
  9 a set & 9 ! empty set4
#a4b4d4c 4 ,solu;n 43

a4 _% ,a.%,b .k .(3, 4, 5.) _:4
;b4 _% ,a.+,b .k .(1, 2, 3, 4, 5, 6,
  7.) _:4
;c4 _% ,a_*,b .k .(1, 2.) _:4
;d4 _% ,a.%"(,b.+,c)<:} .k .(1.) _:4
;e4 _% ,a`*,c .k .( (1, 2), (1, 3), (1,
  5), (2, 2), (2, 3), (2, 5), (3, 2),
  (3, 3), (3, 5), (4, 2) _:1 _% (4, 3),
  (4, 5), (5, 2), (5, 3), (5, 5).) _:
;f4 ,yes4  ,all ?ree ele;ts ( .2;,c >e
  al ele;ts ( .2,a4
;g4 ,no4 ,"! is an ele;t ( .2;,c1 "nly !
  ele;t #b1 : is n an ele;t ( .2;,b4
#a4b4d4d 4 ,solu;n 43

a4 _% ,a.%,b .k .(4, 6, 8, 10, 12.) _:
;b4 _% ,a.+,b .k .(0, 2, 3, 4, 5, '''
  12, 13, 14, 16, 18, 20, 22, 24,
  '''.) _:
;c4 _% ,b.%,c .k _0 _:
;d4 _% ,b.+,c .k `;,n _:
#a4b4d4e 4 ,solu;n 43
  ,"! >e _m possible examples4 ,"h is a
simple "o4 ,let _% ,a .k .(3, 5.) _: &
_% ,b .k .(2, 3, 5, 7, 8.) _:
#a4b4d4f 4 ,solu;n 43
  ,= example1 _% ,a .k .(1, 2, 3.) _: &
_% ,b .k .(1, 2, 3, 4, 5, .(1, 2,
3.).) _:
#a4b4d4g 4 ,solu;n 43

a4 _% ,a.+,b: _:3 ,image ,,id3
  ,a-or-n-;,b
  ,descrip;n3 ,v5n diagram (
  _% ,a.+,b: _:4 ,two circles >e label$
  ,a & ;,b4 ,"ey?+ is %ad$ except = !
  small "p ( ;,b t doesn't ov}lap ,a4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;b4 _% "(,a.+,b)<:} _:3 ,image ,,id3
  n-,a-or-;,b
  ,descrip;n3 ,v5n diagram (
  _% "(,a.+,b)<:} _:4 ,two circles >e
  label$ ,a & ;,b4 ,"ey?+ |tside ! two
  circles >e %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;c4 _% ,a.%(,b.+,c) _:3 ,image ,,id3
  ,a-&-;,b-or-;,c
  ,descrip;n3 ,v5n diagram (
  _% ,a.%(,b.+,c) _: ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,": ,a & ;,b is
  %ad$ & ": ,a & ;,c is al %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;d4 _% (,a.%,b).+,c _:3 ,image ,,id3
  ,a-&-;,b-cup-;,c
  ,descrip;n3 ,v5n diagram (
  _% (,a.%,b).+,c _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,": ,a & ;,b
  ov}lap is %ad$4 ;,c is al %ad$
  completely4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;e4 _% ,a:.%,b.%,c: _:3 ,image ,,id3
  n-,a-cap-;,b-cap-n-;,c
  ,descrip;n3 ,v5n diagram (
  _% ,a:.%,b.%,c: _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,only ! "p (
  ;,b t doesn't ov}lap ,a & doesn't
  ov}lap ;,c is %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
;f4 _% (,a.+,b)_*,c _:3 ,image ,,id3
  ,a-or-;,b-less-;,c
  ,descrip;n3 ,v5n diagram (
  _% (,a.+,b)_*,c _:4 ,?ree circles >e
  label$ ,a1 ;,b1 & ;,c4 ,only ~? "ps (
  ,a & ;,b t d n ov}lap ;,c >e %ad$4
  ,transcrib} note3 ? image %d 2 provid$
  sep>ately = an electronic v}.n4
#a4b4d4h 4 ,solu;n 43
  ,"o way to answ} is
_% (,a.+,b)_*(,a.%,b) _:
#a4b4d4i 4 ,solu;n 43

a4 #cd4
;b4 #ajc4
;c4 #h4
#a4b4d4aj 4 ,h9t 43
  ,we >e look+ = a set 3ta9+ #af sets4
,solu;n 43
  _% `;,p(,a) .k .(_0, .(a.), .(b.),
.(c.), .(d.), .(a, b.), .(a, c.), .(a,
d.), .(b, c.), .(b, d.), .(c, d.), .(a,
b, c.), .(a, c, d.), .(a, b, d.), .(b,
c, d.), .(a, b, c, d.).) _:
#a4b4d4aa 4 ,solu;n 43
  ,"! >e ei<t possible sets4 .2;,b c 2
any ( _% .(2, 3, 5.) _:1 _% .(1, 2, 3,
5.) _:1 _% .(2, 3, 4, 5.) _:1 _% .(2, 3,
5, 6.) _:1 _% .(1, 2, 3, 4, 5.) _:1
_% .(1, 2, 3, 5, 6.) _:1 _% .(2, 3, 4,
5, 6.) _:1 _%  and .(1, 2, 3, 4, 5,
6.) _:
#a4b4d4ab 4 ,solu;n 43
  ,= example1 _% ,a .k .(1, 2, 3, 4.) _:
& _% ,b .k .(5, 6, 7, 8, 9.) _: gives
_% ,a.+,b .k .(1, 2, 3, 4, 5, 6, 7, 8,
9.) _:4
#a4b4d4ac 4 ,solu;n 43
  ,"! >e #aj subsets t 3si/ ( a s+le
ele;t4 ,= subsets 3si/+ ( exactly two
ele;ts1 "! >e #de
#a4b4d4ad 4 ,solu;n 43
  ,"! >e _m examples4 ,"h's "o
possibil;y3 _% ,a .k .(a, b, c.), ,b .k
.(b, c, d, e.) _:4 ,!n ! union is
_% ,a.+,b .k .(a, b, c, d, e.) _:4
#a4b4d4ae 4 ,solu;n 43
  ,! answ} is no4 ,c y expla9 :y8
#a4b4d4af 4 ,solu;n 43
  ,! 9t}sec;n ( ! set ( r$ c>ds & ! set
( face c>ds is nonempty4 ,x 9cludes six
c>ds3 ,jack ( ,he>ts1 ,que5 ( ,he>ts1
,k+ ( ,he>ts1 ,jack ( ,diamonds1 ,que5 (
,diamonds1 & ,k+ ( ,diamonds4
#a4b4d4ag 4 ,solu;n 43

a4 ,no4
;b4 ,no4
;c4 _% #2`;,z.%3`;,z _: is ! set ( all
  9teg}s : >e multiples ( bo? #b & #c
  "<s multiples ( #f">4 ,"!=e
  _% #2`;,z.%3`;,z .k .(6y|y `e
  `;,z).) _:4
#a4c  ,rela;ns & ,func;ns
#a4c4c  ,ex}cises #a4c4c4a 4 ,solu;n 43

a4 ,yes
;b4 ,r`5_<-#a_> "7 _*_<"<x1 ;y"> _*mid
  y`5#b "7 ;x1 _*text_< = _> ;y "7 -#c1
  -#b1 -#a1 _*dots #b1 #c_*_>
;c4 ,no
#a4c4c4b 4 ,solu;n 43

a4 ,no4
;b4 ,no4 ,= example _% (2, 2) _: &
  _% (2, 4) _: >e ! ! rela;n4
;c4 ,yes1 ea* p}son has a unique hei<t
  "<at any giv5 "t">4
#a4c4c4c 4 ,solu;n 43

a4 ,we'd normally write _% a .k b _: if
  _% a,rb _: :5 .2a & .2;b >e ! same
  object4
;b4 ,yes6 ,giv5 a set .2,a1 we def9e !
  func;n by _% f_3 ,a $o ,a _: by
  _% f(x) .k x _:4
#a4c4c4d 4 ,solu;n 43
  ,v ll ne$s *ang$ - ,i'm simply relabl+
! v>iables4 ,we'll explore rela;ns "<&
_! composi;n"> 9 grt} dep? 9 ,4crete #b4
  ,let _% ,g_3 ,a $o ,b _: & let _% ,r_3
,b $o ,c _:4 ,! ~1composi;n ~1( .2;,r
~1& .2;,s 1 d5ot$ by _% ,r.*,s _: is
def9$1 = all _% a `e ,a _:1 by
_% (,r.*,s)(a) .k ,r(,s(a)) _:4
,image ,,id3 composi;n-(-rela;ns
,descrip;n3 ,composi;n ( rela;ns
,transcrib} note3 ? image %d 2 provid$
sep>ately = an electronic v}.n4 #a4c4c4e
4 ,solu;n 43

a4 _% ,r1.*,r2 .k .((x, y)|y .k
  -#3(x~2"+2)+2.) .k .((x, y)|y .k
  -#3x~2"-4.) _:
;b4 _% ,r2.*,r1 .k .((x, y)|y .k
  (-3x+2)~2"+2.) .k .((x,
  y)|9x~2"-6x+6.) _:
;c4 _% ,r4.*,r4 .k .((x, y)|y is a
  grandparent of x.) _:
;d4 _% ,r5.*,r4 .k .((x, y)|y is a
  sibling of a parent of x.) .k .((x,
  y)|y is an aunt_/uncle of x.) _:
;e4 _% ,r4.*,r5 .k .((x, y)|y is the
  parent of the sibling of x.) .k ,r4 _:
#a4c4c4f 4 ,solu;n 43

a4 ,no1 ! func;n is no 9jective4 _% #2
  .k f(2) .k f(5) .k #2 _: b cle>ly
  _% #2 /.k #5 _:
;b4 ,yes1 ! func;n is surjective4 ,!
  codoma9 is _% .(1, 2, 3, 4.) _: & ea*
  ele;t ( ! codoma9 is mapp$ "<! range
  equals ! codoma9">
#a4c4c4g 4 ,solu;n 43

a4 ,no6 _% f(1) .k f(4) _: & _% #1 /.k
  #4 _:
;b4 ,al no1 s9ce "! is no .2;x = :
  _% f(x) .k #2 _:4
#a4c4c4h 4 ,solu;n 43

a4 .2;f is 9jective1 b n surjective
  "<s9ce #j1 = example1 is n"e an
  |tput">4
;b4 .2;f is 9jective & surjective4
  ,unlike 9 ! previ|s "q1 e 9teg}s is an
  |tput "<( ! 9teg} #d less ?an x">4
;c4 .2;f is 9jective1 b n surjective
  "<#aj is n #h less ?an a multiple (
  #e1 = example">4
;d4 .2;f is n 9jective1 b is surjective4
  ,e 9teg} is an |tput "<( twice xf1 =
  example"> b "s 9teg}s >e |tputs ( m
  ?an "o 9put3 _% f(5) .k #3 .k f(6) _:4
#a4c4c4i 4 ,solu;n 43

a4 ,yes1 s9ce giv5 any 9teg} _% c `e
  `;,z _: we c f9d two o!r 9teg}s _% m,
  n _: = : _% f(m, n) .k c _: = example1
  _% f(c, 0) .k c+0 .k c _:4
;b4 ,no1 s9ce _% -#1 `e `;,z _: & "! is
  no 9teg}s _% m, n _: = : _% m~2"+n~2
  .k -#1 _:4
;c4 ,yes1 s9ce e 9teg} .2;m 9 ! codoma9
  is mapps$ to via _% f(m, 0) .k m _:
;d4 ,yes ag1 ? w map to e possible
  9teg}4 ,= example1 _% f(m, 0) .k m _:
  = any 9teg} .2;m 9 ! codoma94
,x's wor? not+ :ile ~! >5't 9jective1 !y
c 2 surjective4
#a4c4c4aj 4 ,solu;n 43

a4 .2;f is 9jective4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;x & .2;y 2 ele;ts ( ! doma9
  _% `;,z _:4 ,assume _% f(x) .k
  f(y) _:4 ,if .2;x & .2;y >e bo? ev51
  !n _% f(x) .k x+1 _: & _% f(y) .k
  y+1 _:4 ,s9ce _% f(x) .k f(y) _:1 we h
  _% x+1 .k y+1 _: : implies t _% x .k
  y _:4 ,simil>ly1 if .2;x & .2;y >e bo?
  odd1 !n _% x-3 .k y-3 _: s ag _% x .k
  y _:4 ,! only o!r possibil;y is t .2;x
  is ev5 an .2;y is odd "<or
  visa-v}sa">4 ,b !n _% x+1 _: wd 2 odd
  & _% y-3 _: wd 2 ev51 s x _c 2 t
  _% f(x) .k f(y) _:4 ,"!=e if _% f(x)
  .k f(y) _: we !n h _% x .k y _:1 :
  proves t .2;f is 9jective4
;b4 .2;f is surjective4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;y 2 an ele;t ( ! codoma9
  _% `;,z _:4 ,we w %{ "! is an ele;t
  .2;n ( ! doma9 "<_% `;,z _:"> s* t
  _% f(n) .k y _:4 ,"! >e two cases3
  ,f/1 if .2;y is ev51 !n let _% n .k
  y+3 _:4 ,s9ce .2;y is ev51 .2;n is
  odd1 s _% f(n) .k n-3 .k y+3-3 .k y _:
  z desir$4 ,second1 if .2;y is odd1 !n
  let _% n .k y-1 _:4 ,s9ce .2;y is odd1
  .2;n is ev51 s _% f(n) .k n+1 .k y-1+1
  .k y _: z ne$$4 ,"!=e .2;f is
  surjective4
#a4c4c4aa 4 ,h9t 43
  ,mo/ likely1 yr solu;n w 2
piecewise-def9$4
,solu;n 43

a4
  _%
  f(n) .k .,(-#2n   if n "k #0
          .,(#2n+3  if n .1: #0
  _:
;b4
  _%
  f(n) .k .,(-n   if n "k #0
          .,(n+1  if n .1: #0
  _:
;c4
  _%
  f(n) .k .,(-#2n   if n "k #0
          .,(#2n+1  if n .1: #0
  _:
;d4 _% f(n) .k n~2"+1 _:
#a4c4c4ab 4 ,solu;n 43

a4 .2;f is n 9jective4 ,to prove ?1 we
  m/ simply f9d two di6}5t ele;ts ( !
  doma9 : map to ! same ele;t ( !
  codoma94 ,s9ce _% f(.(1.)) .k #1 _: &
  _% f(.(2.)) .k #1 _:1 we see t .2;f is
  n 9jective4
;b4 .2;f is n surjective4 ,! l>ge/
  subset ( .2,a is .2,a xf1 & _% |,a| .k
  #10 _:4 ,s no natural numb} grt} ?an
  #aj w "e 2 an |tput4
;c4 _% f~-1"(1) .k .(.(1.), .(2.),
  .(3.), ''' .(10.).) _: "<! set ( all !
  s+leton subsets ( .2,a">4
;d4 _% f~-1"(0) .k .(_0.) _:4 ,note1 x
  wd 2 wr;g to write _% f~-1"(0) .k
  _0 _: - t wd claim t "! is no 9put :
  has #j z an |tput4
;e4 _% f~-1"(12) .k _0 _:1 s9ce "! >e no
  subsets ( .2,a ) c>d9al;y #ab4
#a4c4c4ac 4 ,solu;n 43

a4 _% f~-1"(3) .k .(003, 030, 300, 012,
  021, 102, 201, 120, 210, 111.) _:
;b4 _% f~-1"(28) .k _0 _: "<s9ce ! l>ge/
  sum ( ?ree digits is _% #9+9+9 .k
  #27 _:">
;c4 ,"p "<a"> proves t .2;f is n
  9jective4 ,! |tput #c is assign$ to
  #aj di6}5t 9puts4
;d4 ,"p "<;b"> proves t .2;f is n
  surjective4 ,"! is an ele;t ( !
  codoma9 "<#bh"> : is n assign$ to any
  9puts4
#a4c4c4ad 4 ,solu;n 43

a4 _% |,x| "k: |,y| _:
;b4 _% |,y| "k: |,x| _:
;c4 _% |,x| .k |,y| _:
#a4c4c4ae 4 ,solu;n 43

a4 ,yes
;b4 ,yes
;c4 ,yes
;d4 ,yes
;e4 ,f9ally a no6
;f4 ,al a no
#a4c4c4af 4 ,h9t 43
  ,"w ) "s examples4
#a4c4c4ag 4 ,solu;n 43

a4 _% `;(8.675309`;) .k #8 _: &
  _% `~(8.675309`~) .k #9 _:
;b4 _% `;(.p`;) .k #3 _: & _% `~(.p`~)
  .k #4 _:
;c4 _% `;(-#2.1`;) .k -#3 _: &
  _% `~(-#2.1`~) .k -#2 _:
;d4 _% `;(7`;) .k `~(7`~) .k #7 _:
#a4c4c4ah 4 ,solu;n 43
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 #j2 #j2 #a2 #a2 #b4
  .2;f is n 9jective s9ce _% f(0) .k
f(1) _:1 & x is n surjective s9ce "! is
no solu;n to _% #3 .k f(n) _: 9 ! doma94
#a4c4c4ai 4 ,solu;n 43
  ,i'm provid+ a solu;n = ! floor
func;n4 ,! ceil+ func;n solu;n c 2 d"o v
simil>ly4 ,! floor func;n is n 9jective4
,3sid} ! two r1l numb}s #b4a & #b4e3
_% `;(2.1`;) .k `;(2.5`;) .k #2 _:4
  ,! floor func;n is surjective1 h{"e4
,let _% c `e `;,z _: 2 an 9teg} 9 !
codoma94 ,!n 3sid} _% a .k c+0.1 `e
`;,r _:1 ! doma94 _% `;(a`;) .k
`;(c+0.1`;) .k c." _:
#a4c4c4bj 4 ,solu;n 43

a4
.2;x2 #j2 #a2 #b2 #c2 #d4
_% f(x) _:2 #c2 #d2 #j2 #a2 #b4
    .2;f is bo? 9jective & surjective4
    ,note t ! range ( ! func;n .2;f is
  _% .(0, 1, 2, 3, 4.) _: : is equal to
  ! :ole co-doma91 : tells u x's
  surjective4
;b4
.2;x2 #j2 #a2 #b2 #c2 #d4
_% g(x) _:2 #a2 #j2 #j2 #b2 #b4
    .2;g is n 9jective s9ce _% g(1) .k
  g(2) _: = example4 .2;g is al n
  surjective s9ce "! is no solu;n to
  _% #3 .k g(n) _: 9 ! doma94
    ,note t ! range ( ! func;n .2;g is
  _% .(0, 1, 2.) _: : is n equal
  co-doma91 : tells u x's n surjective4
#b  ,symbolic ,logic & ,pro(s
#b4a  ,logical ,equival;es ,ex}cises
#b4a4a 4 ,solu;n 43
  ,make a tru? table = ea* & comp>e4 ,!
/ate;ts >e logically equival5t4
#b4a4b 4 ,solu;n 43
  ,let's />t ) ! left-h& side & "w t{>ds
! "r to f9d |4
_%
p $o (q`+r)           _l p`+(q`%r)
_l (p`%q)`+(p`%r)
_l (p $o q)`+(p $o r)
_:
: 0 :at we want$ to %{4
#b4a4c 4 ,solu;n 43
  ,"h's an alt}native solu;n us+ previ|s
equival;es "<n a tru? table">3
_%
(p $o q)`%(p $o r) _l (p`+q)`%(p`+r)
_l p`+(q`%r)
_l p $o (q`%r)
_:
#b4a4e 4 ,solu;n 43

a4
  _%
  ((p`%q)`+(r`+s))  _l (p`%q)`%(r`+s)
  _l (p`%q)`%(r`+s)
  _l (p`+q)`%(r`+s)
  _l (p`+q)`%(r`+s)
  _:
;b4
  _%
  ((p $o q)`%(q $o k)) _l ((p`+q)`%(q`+-
  k))
  _l ((p`+q)`%(q`+k))
  _l (p`+q)`+(q`+k)
  _l (p`%q)`+(q`%k)
  _l (p`%q)`+(q`%k)
  _:
;c4
  _%
  (p`%q) $o (p`+q)  _l (p`%q)`+(p`+q)
  _l (p`+q)`+(p`+q)
  _l p`+q`+p`+q
  _l p`+p`+q`+q
  _l (p`+p)`+(q`+q)
  _l (,t)`+(,t)
  _l ,t
  _:
  444 x's a tautology6
#b4b  ,applica;n3 ,set ,prop}ties &
,equival;es ,ex}cises #b4b4a 4 ,solu;n
43
  ,assume _% x `e ,a.+(,b.+,c) _:1 !n3
_%
x `e ,a.+(,b.+,c)                    _l-
 (x `e ,a)`+(x `e ,b.+,c)
_l (x `e ,a)`+((x `e ,b)`+(x `e ,c))
_l x `e ,a`+x `e ,b`+x `e ,c
_l (x `e ,a`+x `e ,b)`+x `e ,c
_l (x `e ,a.+,b)`+x `e ,c
_l x `e (`e,a.+,b).+,c
_:
& s _% ,a.+(,b.+,c) .k (,a.+,b).+,c _:4
#b4b4b 4 ,solu;n 43
  ,assume _% x `e ",a:<:} _: !n we h
_%
x `e ",a:<:}   _l (x `e ,a:)
_l ((x `e ,a))
_l x `e ,a
_:
& s _% ",a:<:} .k ,a _:4
#b4b4c 4 ,solu;n 43
  .7,"h we 3v}t ! expres.n ( sets 9to a
logical /ate;t & apply ! 4tributive law
= logical /ate;ts4.'
  ,assume t _% x `e ,a.+(,b.%,c) _:1 !n3
_%
x `e ,a.+(,b.%,c)-
_l x `e ,a`+(x `e ,b.%,c)
_l x `e ,a`+(x `e ,b`%x `e ,c)
_l (x `e ,a`+x `e ,b)`%(x `e ,a`+`e,c)
_l (x `e ,a.+,b)`%(x `e ,a.+,c)
_l x `e (,a.+,b).%(,a.+,c)
_:
& "!=e _% ,a.+(,b.%,c) .k
(,a.+,b).%(,a.+,c) _:4
#b4b4d 4 ,solu;n 43
  .7,|r /rategy is to f/ 3v}t ! /ate;t
9to a logical /ate;t & !n apply
,de,morgan's law = logical /ate;ts4.'
  ,assume _% x `e ",a.%,b<:} _:4 ,!n3
_%
(x `e ,a.%,b)           _l (x `e ,a`%x-
`e ,b)
_l (x `e ,a)`+(x `e ,b)
_l x `e ,a:`+x `e ,b:
_:
& s _% ",a.%,b<:} .k ,a:.+,b: _:4
#b4b4e 4 ,solu;n 43
  .7,"h |r 8trick0 is to use ! fact ! !
3trapositive is equival5t to !
3di;nal4.'
  ,assume _% ,a _"k: ,b _:4 ,? m1ns t
_% x `e ,a $o x `e ,b _:4
_%
x `e ,a $o x `e ,b      _l (x `e ,b) $o-
 (x `e ,a)
_l x `e ,b: $o x `e ,a:
_:
& ?us _% ,b: _"k: ,a: _:4
#b4c  ,pr$icates & ,logical ,quantifi}s
#b4c4c  ,ex}cises #b4c4c4a 4 ,solu;n 43

a4 ,true
;b4 ,true
;c4 ,true
;d4 ,false
;e4 ,false
#b4c4c4b 4 ,solu;n 43

a4 ,true
;b4 ,false
;c4 ,true
;d4 ,false
;e4 ,false
#b4c4c4c 4 ,solu;n 43
  ,yr answ} %dn't h .2;x 9 x any":6
,regul> p don't say 8,= all ;x if ;x is
fa/1 !n4440 ,"h "s "s id1s "<yr answ}
may v">

a4 ,all a?letes >e fa/4
;b4 ,"ey"o is a fa/ a?lete4
;c4 ,"s fa/ p}son is an a?lete4
;d4 ,"! is a sl{ a?lete4
#b4c4c4d 4 ,solu;n 43

a4 ,"s?+ 9 ! g>age is | ( place4
;b4 ,"s tool is misplac$4
;c4 ,all tools >e 9 excell5t 3di;n & 9 !
  correct place4
#b4c4c4e 4 ,solu;n 43

a4
  _%
  `=x`&y(,o(x)`+,e(y))    _l `&x`&y(,o(-
  x)`+,e(y))
  _l `&x`=y(,o(x)`+,e(y))
  _l `&x`=y,o(x)`%,e(y)
  _l `&x`=y,o(x)`%,e(y)
  _:
;b4 .7,apply+ ,de ,morgan's laws _m1 _m
  "ts & not+ t ! opposite (.' _% x "k
  a _: .1is _% x .1: a _:.23
  _%
  `&x`&y(x "k y`%`=z(x "k z`+y "k z))-
            _l `&x`&y(x "k y`%`=z(x "k-
  z`+y "k z))
  _l `=x`&y(x "k y`%`=z(x "k z`+y "k z)-
  )
  _l `=x`&y(x "k y`%`=z(x "k z`+y "k z)-
  )
  _l `=x`&y(x "k y)`+(`=z(x "k z`+y "k-
  z)))
  _l `=x`&y(x "k y)`+`&z(x "k z`+y "k z-
  )) )
  _l `=x`&y(x "k y)`+`&z(x "k z)`%(y "k-
   z)) )
  _l `=x`&y(x .1: y)`+`&z(x .1: z)`%(y-
  .1: z)) )
  _:
;c4 ,? /ate;t c 2 writt5 _% `=n`=x(x "k
  n) _:4 ,x c 2 simplifi$ z _% `=n`&x(x
  "k n) _:
;d4 ,? /ate;t c 2 writt5 _% `&n`=x`=y(x
  "k n "k y) _:
  _%
  `&n`=x`=y(x "k n "k y)    _l `=n`=x`=-
  y(x "k n "k y)
  _l `=n`&x`=y(x "k n "k y)
  _l `=n`&x`&y(x "k n "k y)
  _:
#b4c4c4f 4 ,solu;n 43
  ,let .2;c come f ! univ}se ( colleges
9 ! ,,u1 .2;b 2 f ! univ}se ( build+s on
a *os5 campus & .2;r 2 ! rooms 9 a *os5
build+4

a4 ,we h to f/ select a college1 !n f9d
  ! build+ on t campus3
    _% `=c`=b`&r(b on the campus of c in
  which r is painted white) _:
;b4 .7,/>t ) ! nega;n on ! left & apply
  ,de ,morgan's laws.'
  _%
  `=c`=b`&r(b on the campus of c in whi-
  ch r is painted white)
  _l `&c`&b`=r(b on the campus of c in-
  which r is painted white)
  _:
;c4 ,on e campus 9 ! ,,u1 e build+ has
  at l1/ "o room t isn't pa9t$ :ite4
#b4d  ,logical ,>gu;ts ,ex}cises #b4d4a
4 ,solu;n 43
  ,! d$uc;n rule is valid4 ,to see ?1
make a tru? table : 3ta9s _% p`+q _: &
_% p _: "<& .2;p & .2;q ( c|rse">4 ,look
at ! tru? value ( .2;q 9 ea* ( ! r{s t h
_% p`+q _: & _% p _: true4
#b4d4b 4 ,solu;n 43
  ,? is valid4 ,make a tru? table4
#b4d4c 4 ,solu;n 43
  ,x isn't2 make a tru? table & see
_% (((p`%q) $o r)`%(p`+q)) $o r _: isn't
a tautology4
#b4d4f 4 ,solu;n 43
  ,? is an >gu;t ( ! =m3
_% ,superman saves`+,lois dies _:4
_% ,superman saved _:4
_% ,*,lois didn't die _:4
  ,? is a fallacy4 ,9 fact1 x's !
fallacy ( d5y+ ! hypo!sis 9 4guise4
,rewrite ! 4junc;n z an implica;n to see
?3
_% ,superman saves$o,lois dies _:4
_% ,superman saved _:4
_% ,*,lois didn't die _:4
#b4d4g 4 ,h9t 43

a4 ,write ea* 9 t}ms ( logical symbols4
;b4 ,let ! univ}se ( 4c|rse 2 all
  cr1tures1 _% ,l(x) _: 2 ! /ate;t 8.2;x
  is a lion10 _% ,c(x) _: 2 8.2;x dr9ks
  c(fee10 & _% ,f(x) _: is 8.2;x is
  fi}ce40
#b4d4h 4 ,h9t 43
  ,make a tru? table4
,solu;n 43
  ,! >gu;t has ?ree proposi;nal v>iables
& is ( ! =m3
_% wages increase$oinflation _:4
_% inflation $o cost of living
  increase _:4
_% wages increase _:4
_% ,*cost of living increases _:4
  444 n{ make a tru? table4
#b4e  ,an 9troduc;n to pro(s
#b4e4aa  ,ex}cises #b4e4aa4a 4 ,solu;n
43

a4 ,= all 9teg}s .2a & .2;b1 if .2a or
  .2;b is n ev51 !n _% a+b _: is n ev54
;b4 ,= all 9teg}s .2a & .2;b1 if .2a &
  .2;b >e ev51 !n _% a+b _: is ev54
;c4 ,"! >e numb}s .2a & .2;b s* t
  _% a+b _: is ev5 b .2a & .2;b >e n bo?
  ev54
;d4 ,false4 ,= example1 _% a .k #3 _: &
  _% b .k #5 _:4 _% a+b .k #8 _:1 b nei
  .2a nor .2;b >e ev54
;e4 ,false1 s9ce x is equival5t to !
  orig9al /ate;t4
;f4 ,true4 ,let .2a & .2;b 2 9teg}s4
  ,assume bo? >e ev54 ,!n _% a .k #2k _:
  & _% b .k #2j _: = "s 9teg}s .2;k &
  .2;j4 ,b !n _% a+b .k #2k+2j .k
  #2(k+j) _: : is ev54
;g4 ,true1 s9ce ! /ate;t is false4
#b4e4aa4b 4 ,solu;n 43

a4 ,direct pro(4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is ev54 ,!n _% n .k #2k _: = "s 9teg}
  .2;k4 ,?us _% #8n .k #16k .k
  #2(8k) _:4 ,"!=e _% #8n _: is ev54
;b4 ,! 3v}se is false4 ,t is1 "! is an
  9teg} .2;n s* t _% #8n _: is ev5 b
  .2;n is odd4 ,= example1 3sid} _% n .k
  #3 _:4 ,!n _% #8n .k #24 _: : is ev5 b
  _% n .k #3 _: is odd4
#b4e4aa4c 4 ,h9t 43
  ,h9t3 ,:at implica;n foll{s f ! giv5
pro(8
#b4e4aa4d 4 ,solu;n 43

a4 ,assume t .2;n is a prime numb}4 _%
  ''' _: ,"!=e .2;n is solit>y4
;b4 ,assume t .2;n is n solit>y4 _%
  ''' _: ,"!=e .2;n is a prime numb} by
  3traposi;n4
;c4 ,assume t .2;n is a prime numb} & is
  n solit>y4 _%  ''' _: ,? 3tradicts |r
  assump;n4 ,?us if .2;n is a prime
  numb}1 .2;n is solit>y4
#b4e4aa4e 4 ,solu;n 43

a4 ,pro( by 3tradic;n4 ,/>t ( pro(3
  ,assume1 = ! sake ( 3tradic;n1 t "! >e
  9teg}s .2;x & .2;y s* t .2;x is a
  prime grt} ?an #e & _% x .k #6y+3 _:4
  ,5d ( pro(3 444 ? is a 3tradic;n1 s "!
  >e no s* 9teg}s4
;b4 ,direct pro(4 ,/>t ( pro(3 ,let .2;n
  2 an 9teg}4 ,assume .2;n is a multiple
  ( #c4 ,5d ( pro(3 ,"!=e .2;n c 2
  writt5 z ! sum ( 3secutive 9teg}s4
;c4 ,pro( by 3trapositive4 ,/>t ( pro(3
  ,let .2a & .2;b 2 9teg}s4 ,assume t
  .2a & .2;b >e ev54 ,5d ( pro(3 ,"!=e
  _% a~2"+b~2 _: is ev54
#b4e4aa4f 4 ,h9t 43
  ,if a numb} isn't a multiple ( ?ree1
!n x's ei #a m ?an a multiple ( ?ree or
#b m ?an a multiple ( ?ree1 t is1 y'll h
two cases1 ei _% n .k #3k+1 _: or
_% #3k+2 _:4
,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  ,pro( by 3traposi;n3 ,assume t .2;n is
n a multiple ( ?ree4 ,!n3
  ,case #a3 ,"! exi/s an 9teg} .2;k s* t
_% n .k #3k+1 _:4 ,3sid}3
_%
n~2"              .k (3k+1)~2"
.k #9k~2"+6k+1
.k #3(3k~2"+2k)+1
_:
,h;e _% n~2 _: is n a mulitple ( ?ree4
  ,case #a3 ,"! exi/s an 9teg} .2;l s* t
_% n .k #3l+2 _:4 ,3sid}3
_%
n~2"                .k (3l+2)~2"
.k #9l~2"+12l+4
.k #9l~2"+12l+3+1
.k #3(3l~2"+4l+1)+1
_:
,h;e _% n~2 _: is n a mulitple ( ?ree4
  ,?us1 we h prov5 t if _% n~2 _: is a
multiple ( ?ree1 !n .2;n is a multiple (
?ree by 3traposi;n4
#b4e4aa4g 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,suppose _% >3} _: 7 ra;nal4 ,!n
_%
>3} .k  ;a
       ?33#
        ;b
_:
= "s 9teg}s .2a & _% b /.k #0 _:4 ,)|t
loss ( g5}al;y1 assume
_%
 ;a
?33#
 ;b
_:
is r$uc$4 ,n{
_%
#3 .k  ;a~2"
      ?33333#
       ;b~2"
_:
_% #3b~2 .k a~2 _:
  ,s _% a~2 _: is a multiple ( #c4 ,? c
only happ5 if .2a is a multiple ( #c1 s
_% a .k #3k _: = "s 9teg} .2;k4 ,!n we h
_% #3b~2 .k #9k~2 _:
_% b~2 .k #3k~2 _:
  ,s _% b~2 _: is a multiple ( #c1 mak+
.2;b a multiple ( #c z well4 ,b ?
3tradicts |r assump;n t
_%
 ;a
?33#
 ;b
_:
is 9 l{e/ t}ms4
  ,"!=e1 _% >3} _: is irra;nal4
#b4e4aa4h 4 ,solu;n 43

a4
7777777777777777777777777777777777777777
,pro( 4
    "<? is a direct pro(">3 ,assume t
  .2a is ev5 .2;b is a multiple ( ?ree4
  ,!n "! exi/ 9teg}s .2;k & .2;l s* t
  _% a .k #2k _: & _% b .k #3l _:4 ,!n
  _% ab .k (2k)(3l) .k #6kl _:4 ,?us
  _% ab _: is a multiple ( six4
;b4 ,! 3v}se is 8,if _% ab _: is a
  multiple ( six1 !n .2a is ev5 & .2;b
  is a multiple ( ?ree40
    ,? is false4 ,= example1 _% ab .k
  #6 _: ": _% a .k #6 _: & _% b .k
  #1 _:4
#b4e4aa4i 4 ,solu;n 43
  ,we w prove ! 3trapositive3 if .2;n is
ev51 !n _% #5n _: is ev54
7777777777777777777777777777777777777777
,pro( 4
  ,let .2;n 2 an >bitr>y 9teg}1 &
suppose .2;n is ev54 ,!n _% n .k #2k _:
= "s 9teg} .2;k4 ,?us _% #5n .k #5*2k .k
#10k .k #2(5k) _:4 ,s9ce _% #5k _: is an
9teg}1 we see t _% #5n _: m/ 2 ev54 ,?
completes ! pro(4
#b4e4aa4aj 4 ,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  8_% $o _:0 ,assume t _% x .k y _:1 &
3sid}3
_%
 (x+y)~2"    .k  (x+x)~2"
?33333333#      ?33333333#
    #4              #4

.k  (2x)~2"
   ?3333333#
      #4

.k x~2"

.k xy
_:
,? %{s t if _% x .k y _: !n
_%
xy .k  (x+y)~2"
      ?33333333#
          #4
_:
4
  8_% ${33 _:0 ,assume t
_%
 (x+y)~2"  .k xy
?33333333#
    #4
_:
,!n3
_%
 (x+y)~2"     .k xy
?33333333#
    #4

(x+y)~2"      .k #4xy

x~2"+2xy+y~2" .k #4xy

x~2"-2xy+y~2" .k #0

(x-y)~2"      .k #0

x             .k y
_:
,? %{s t if
_%
xy .k  (x+y)~2"
      ?33333333#
          #4
_:
1 !n _% x .k y _:4
#b4e4aa4aa 4 ,solu;n 43
  ,we give a pro( by 3tradic;n4
7777777777777777777777777777777777777777
,pro( 4
  ,suppose1 3tr>y to /ipula;n t _% log
(7) _: is ra;nal4 ,!n
_%
log (7) .k  ;a
           ?33#
            ;b
_:
) .2a & _% b /.k #0 _: 9teg}s4 ,by
prop}ties ( log>i?ms1 ? implies
_%
#7 .k #10~ ;a
          ?33#
           ;b
_:
  ,equival5tly1
_% #7~b .k #10~a _:
  ,b ? is impossible z any p{} ( #g w 2
odd :ile any p{} ( #aj w 2 ev54  ,"!=e1
_% log (7) _: is irra;nal4
#b4e4aa4ab 4 ,solu;n 43

a4 ,assume1 to ! 3tr>y t _% p $o q _: is
  false1 t is1 we assume t _% p $o q _:
  or _% p`%q _:4
;b4 ,"!=e1 _% p $o q _: is true by
  3tradic;n4
#b4e4aa4ac 4 ,h9t 43
  ,try a pro( by 3tradic;n4
,solu;n 43
  ,! nega;n ( ! /ate;t is _% a~2"+b~2 .k
c~2 _: & bo? .2a & .2;b >e odd4
7777777777777777777777777777777777777777
,pro( 4
  ,assume t .2a & .2;b >e bo? odd & t
_% a~2"+b~2 .k c~2 _:4 ,!n "! exi/
9teg}s .2;k & .2;l s* t _% a .k #2k+1 _:
& _% b .k #2k+1 _:4
  ,f/1 we obs}ve t
_%
a~2"+b~2"                 .k (2k+1)~2"+-
(2l+1)~2"
.k #4k~2"+4k+1+4l~2"+4l+1
.k #4k~2"+4k+4l~2"+4l+2
_:
s t _% c~2 _: & h;e .2;c is ev54  ,let
_% c .k #2m _: ": .2;m is "s 9teg}4 ,!n3
_%
c~2"    .k a~2"+b~2"
(2k)~2" .k #4k~2"+4k+4l~2"+4l+2
#4k~2"  .k #4(k~2"+k+l~2"+l)+2
_:
,? is a 3tradic;n z we h a multiple (
f|r 2+ equal to "s?+ : is n a multiple (
f|r4  ,?us1 |r orig9al assump;n 0
9correct & "!=e if _% a~2"+b~2 .k
c~2 _:1 we 3clude t "o ( .2a or .2;b is
ev54
#b4e4aa4ad 4 ,solu;n 43
7777777777777777777777777777777777777777
  ,pro( 4
  ,assume1 to ! 3tr>y1 t "! is an 9teg}
solu;n1 _% (a, b) _:1 to ! equa;n _% x~2
.k #4y+3 _: ,we'll split ? 9to f|r
cases3
  ,case #a3 .2;x is odd & .2;y is ev54
,!n "! exi/ 9teg}s .2;k & .2;l s* t _% x
.k #2k+1 _: & _% y .k #2l _:4 ,plu7+ ?
9to ! equa;n1 we h3
_%
x~2"          .k #4y+3
(2k+1)~2"     .k #4(2l)+3
#4k~2"+4k+1   .k #8l+3
#4k~2"+4k-8l  .k #2
#4(k~2"+k-2l) .k #2
_:
,? is n possible1 z #b is n a multiple (
#d4
  ,case #b3 .2;x is ev5 & .2;y is odd4
,!n "! exi/ 9teg}s .2;k & .2;l s* t _% x
.k #2k _: & _% y .k #2l+1 _:4 ,plu7+ ?
9to ! equa;n1 we h3
_%
x~2"        .k #4y+3
(2k)~2"     .k #4(2l+1)+3
#4k~2"      .k #8l+4+3
#4k~2"-8l   .k #7
#4(k~2"-2l) .k #7
_:
,? is n possible1 z #g is n a multiple (
#d4
  ,case #c3 .2;x & .2;y >e bo? ev54 ,!n
"! exi/ 9teg}s .2;k & .2;l s* t _% x .k
#2k _: & _% y .k #2l _:4 ,plu7+ ? 9to !
equa;n1 we h3
_%
x~2"        .k #4y+3
(2k)~2"     .k #4(2l)+3
#4k~2"      .k #8l+3
#4k~2"-8l   .k #3
#4(k~2"-2l) .k #3
_:
,? is n possible1 z #c is n a multiple (
#d4
  ,case #d3 .2;x & .2;y >e bo? odd4 ,!n
"! exi/ 9teg}s .2;k & .2;l s* t _% x .k
#2k _: & _% y .k #2l _:4 ,plu7+ ? 9to !
equa;n1 we h3
_%
x~2"          .k #4y+3
(2k+1)~2"     .k #4(2l+1)+3
#4k~2"+4k+1   .k #8l+4+3
#4k~2"+4k-8l  .k #6
#4(k~2"+k-2l) .k #6
_:
,? is al n possible1 z #f is n a
multiple ( #d4
,s9ce we've exhau/$ e possible comb9a;n
( 9teg} solu;ns1 we 3clude t "! is no
9teg} solu;n to ! equa;n _% x~2 .k
#4y+3 _:4
#b4f  ,*apt} ,review ,ex}cises #b4f4a 4
,solu;n 43
.2;p2 .2;q2 .2;r2 _% p $o (q`%r) _:4
;,,,t2 ;t2 ;t2 ;t4,'
;,,,t2 ;t2 ;f2 ;t4,'
;,,,t2 ;f2 ;t2 ;t4,'
;,,,t2 ;f2 ;f2 ;t4,'
;,,,f2 ;t2 ;t2 ;t4,'
;,,,f2 ;t2 ;f2 ;f4,'
;,,,f2 ;f2 ;t2 ;f4,'
;,,,f2 ;f2 ;f2 ;f4,'
#b4f4b 4 ,solu;n 43
  ,pet} is n tall & ,rob}t is n sk9ny4
,y m/ 2 9 r{ #f 9 ! tru? table abv4
#b4f4c 4 ,solu;n 43
  ,yes4 ,to see ?1 make a tru? table =
ea* /ate;t & comp>e4
#b4f4d 4 ,solu;n 43
  ,make a tru? table t 9cludes all ?ree
/ate;ts 9 ! >gu;t3
.2;p2 .2;q2 .2;r2 _% p $o q _:2 _% p $o
  r _:2 _% p $o (q`%r) _:4
;,,,t2 ;t2 ;t2 ;t2 ;t2 ;t4,'
;,,,t2 ;t2 ;f2 ;t2 ;f2 ;f4,'
;,,,t2 ;f2 ;t2 ;f2 ;t2 ;f4,'
;,,,t2 ;f2 ;f2 ;f2 ;f2 ;f4,'
;,,,f2 ;t2 ;t2 ;t2 ;t2 ;t4,'
;,,,f2 ;t2 ;f2 ;t2 ;t2 ;t4,'
;,,,f2 ;f2 ;t2 ;t2 ;t2 ;t4,'
;,,,f2 ;f2 ;f2 ;t2 ;t2 ;t4,'
  ,notice t 9 e r{ = : bo? _% p $o q _:
& _% p $o r _: is true1 s is _% p $o
(q`%r) _:4 ,"!=e1 :5"e ! premises ( !
>gu;t >e true1 s is ! 3clu.n4 ,9 o!r
~ws1 ! d$uc;n rule is valid4
#b4f4e 4 ,solu;n 43

a4 ,nega;n3 ,! p{} goes (f & ! food does
  n spoil4
    ,3v}se3 ,if ! food spoils1 !n ! p{}
  w5t (f4
    ,3trapositive3 ,if ! food does n
  spoil1 !n ! p{} did n g (f4
;b4 ,nega;n3 ,! door is clos$ & ! li<t
  is on4
    ,3v}se3 ,if ! li<t is (f !n ! door
  is clos$4
    ,3trapositive3 ,if ! li<t is on !n !
  door is op54
;c4 ,nega;n3 _% `=x(x "k #1`%x~2" .1:
  #1) _:
    ,3v}se3 _% `&x(x~2 "k #1 $o x "k
  #1) _:
    ,3trapositive3 _% `&x(x~2 .1: #1 $o
  x .1: #1) _:4
;d4 ,nega;n3 ,"! is a natural numb} .2;n
  : is prime b n solit>y4
    ,3v}se3 ,= all natural numb}s .2;n1
  if .2;n is solit>y1 !n .2;n is prime4
    ,3trapositive3 ,= all natural numb}s
  .2;n1 if .2;n is n solit>y !n .2;n is
  n prime4
;e4 ,nega;n3 ,"! is a func;n : is
  di6}5tiable & n 3t9u|s4
    ,3v}se3 ,= all func;ns .2;f1 if .2;f
  is 3t9u|s !n .2;f is di6}5tiable4
    ,3trapositive3 ,= all func;ns .2;f1
  if .2;f is n 3t9u|s !n .2;f is n
  di6}5tiable4
;f4 ,nega;n3 ,"! >e 9teg}s .2a & .2;b =
  : _% a*b _: is ev5 b .2a or .2;b is
  odd4
    ,3v}se3 ,= all 9teg}s .2a & .2;b1 if
  .2a & .2;b >e ev5 !n _% ab _: is ev54
    ,3trapositive3 ,= all 9teg}s .2a &
  .2;b1 if .2a or .2;b is odd1 !n
  _% ab _: is odd4
;g4 ,nega;n3 ,"! >e 9teg}s .2;x & .2;y
  s* t = e 9teg} .2;n1 _% x .1 #0 _: &
  _% nx "k: y _:4
    ,3v}se3 ,= e 9teg} .2;x & e 9teg}
  .2;y "! is an 9teg} .2;n s* t if _% nx
  .1 y _: !n _% x .1 #0 _:4
    ,3trapositive3 ,= e 9teg} .2;x & e
  9teg} .2;y "! is an 9teg} .2;n s* t if
  _% nx "k: y _: !n _% x "k: #0 _:4
;h4 ,nega;n3 ,"! >e r1l numb}s .2;x &
  .2;y s* t _% xy .k #0 _: b _% x /.k
  #0 _: & _% y /.k #0 _:4
    ,3v}se3 ,= all r1l numb}s .2;x &
  .2;y1 if _% x .k #0 _: or _% y .k
  #0 _: !n _% xy .k #0 _:
    ,3trapositive3 ,= all r1l numb}s
  .2;x & .2;y1 if _% x /.k #0 _: & _% y
  /.k #0 _: !n _% xy /.k #0 _:4
i4 ,nega;n3 ,"! is at l1/ "o /ud5t 9
  ,ma? #bbh :o does n "u/& implica;ns b
  w / pass ! exam4
    ,3v}se3 ,= e /ud5t 9 ,ma? #bbh1 if
  !y fail ! exam1 !n !y did n "u/&
  implica;ns4
    ,3trapositive3 ,= e /ud5t 9 ,ma?
  #bbh1 if !y pass ! exam1 !n !y "u/ood
  implica;ns4
#b4f4f 4 ,solu;n 43

a4 ,! /ate;t is true4 ,if .2;n is an ev5
  9teg} less ?an or equal to #g1 !n !
  only way x cd n 2 negative is if .2;n
  0 equal to #j1 #b1 #d1 or #f4
;b4 ,"! is an 9teg} .2;n s* t .2;n is
  ev5 & _% n "k: #7 _: b .2;n is n
  negative & _% n /`e .(0, 2, 4, 6.) _:4
  ,? is false1 s9ce ! orig9al /ate;t is
  true4
;c4 ,= all 9teg}s .2;n1 if .2;n is n
  negative & _% n /`e .(0, 2, 4, 6.) _:
  !n .2;n is odd or _% n .1 #7 _:4 ,? is
  true1 s9ce ! 3trapositive is equival5t
  to ! orig9al /ate;t "<: is true">4
;d4 ,= all 9teg}s .2;n1 if .2;n is
  negative or _% n `e .(0, 2, 4, 6.) _:
  !n .2;n is ev5 & _% n "k: #7 _:4 ,? is
  false4 _% n .k -#3 _: is a
  c.t}example4
#b4f4g 4 ,solu;n 43

a4 ,= any numb} .2;x1 if x is ! case t
  add+ any numb} to .2;x gives t numb}
  back1 !n multiply+ any numb} by .2;x w
  give #j4 ,? is true "<( ! 9teg}s or !
  r1ls">4 ,! 8if0 "p only holds if _% x
  .k #0 _:1 & 9 t case1 any?+ "ts .2;x w
  2 #j4
;b4 ,! 3v}se 9 ~ws is ?3 = any numb}
  .2;x1 if "ey?+ "ts .2;x is z}o1 !n
  "ey?+ add$ to .2;x gives xf4 ,or 9
  symbols3 _% `&x(`&z(x*z .k #0) $o
  `&y(x+y .k y)) _:4 ,! 3v}se is true3 !
  only numb} : :5 multipli$ by any o!r
  numb} gives #j is _% x .k #0 _:4 ,& if
  _% x .k #0 _:1 !n _% x+y .k y _:4
;c4 ,! 3trapositive 9 ~ws is3 = any
  numb} .2;x1 if "! is "s numb} : :5
  multipli$ by .2;x does n give z}o1 !n
  "! is "s numb} : :5 add$ to .2;x does
  n give t numb}4 ,9 symbols3
  _% `&x(`=z(x*z /.k #0) $o `=y(x+y /.k
  y)) _:4 ,we "k ! 3trapositive m/ 2
  true 2c ! orig9al implica;n is true4
;d4 ,! nega;n3 "! is a numb} .2;x s* t
  any numb} add$ to .2;x gives ! numb}
  back ag1 b "! is a numb} y c multiply
  .2;x by & n get #j4 ,9 symbols3
  _% `=x(`&y(x+y .k y)`%`=z(x*z /.k
  #0)) _:4 ,( c|rse s9ce ! orig9al
  implica;n is true1 ! nega;n is false4
#b4f4h 4 ,solu;n 43

a4 ,if y h lo/ wei<t1 !n y ex}cis$4
;b4 ,if y ex}cise1 !n y w lose wei<t4
;c4 ,if y >e ,am}ican1 !n y >e
  patriotic4
;d4 ,if y >e patriotic1 !n y >e
  ,am}ican4
;e4 ,if a numb} is ra;nal1 !n x is r1l4
;f4 ,if a numb} is n ev51 !n x is prime4
  "<,or ! 3trapositive3 if a numb} is n
  prime1 !n x is ev54">
;g4 ,if ! ,broncos don't w9 ! ,sup}
  ,b{l1 !n !y didn't play 9 ! ,sup}
  ,b{l4 ,alt}natively1 if ! ,broncos
  play 9 ! ,sup} ,b{l1 !n !y w w9 !
  ,sup} ,b{l4
#b4f4i 4 ,solu;n 43

a4 _% (p`+q)`%(r`+(p`%r)) _:4
;b4 _% `&x`&y`&z(z .k x+y`%`&w(x-y /.k
  w)) _:4
#b4f4aj 4 ,solu;n 43

a4 ,direct pro(4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is odd4 ,s _% n .k #2k+1 _: = "s 9teg}
  .2;k4 ,!n
  _% #7n .k #7(2k+1) .k #14k+7 .k
  #2(7k+3)+1. _:
    ,s9ce _% #7k+3 _: is an 9teg}1 we
  see t _% #7n _: is odd4
;b4 ,! 3v}se is3 = all 9teg}s .2;n1 if
  _% #7n _: is odd1 !n .2;n is odd4 ,we
  w prove ? by 3trapositive4
7777777777777777777777777777777777777777
,pro( 4
    ,let .2;n 2 an 9teg}4 ,assume .2;n
  is n odd4 ,!n _% n .k #2k _: = "s
  9teg} .2;k4 ,s _% #7n .k #14k .k
  #2(7k) _: : is to say _% #7n _: is
  ev54 ,"!=e _% #7n _: is n odd4
#c  ,"s ,classic ,numb} ,!ory
#c4a  ,divisibil;y & ,3gru;es
#c4a4c  ,ex}cises #c4a4c4a 4 ,h9t 43
  ,if _% m|(b-a) _:1 h{ c we write t
_% m|(a-b) _:;8
#c4a4c4b 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,assume t _% a, b, c _: >e 9teg}s )
_% a /.k #0 _: & _% c /.k #0 _: s* t
_% ac|bc _:4 ,!n "! exi/s an 9teg} .2;m
s* _% bc .k acm _:
  ,s9ce _% c /.k #0 _:1 we c divide bo?
sides ( ! equa;n by .2;c1 yiel$+ !
equal;y _% b .k am _:4 ,?us _% a|b _:4
#c4a4c4c 4 ,solu;n 43

a4 _% #17 .k #9*1+8 _:
;b4 _% #1234 .k #23*53+15 _:
;c4 _% #0 .k #13*0+0 _:
;d4 _% #8 .k #1*8+0 _:
#c4a4c4d 4 ,solu;n 43

a4 ,s9ce _% #37-3 .k #34 _: is n
  divisible by #g1 we 3clude _% #37 /_l
  #3(mod #7) _:
;b4 ,s9ce _% #66-3 .k #63 _: is
  divisible by #g1 we 3clude _% #66 _l
  #3(mod #7) _:
;c4 ,s9ce _% -#17-3 .k -#20 _: is n
  divisible by #g1 we 3clude _% -#17 /_l
  #3(mod #7) _:
;d4 ,s9ce _% -#67-3 .k -#70 _: is
  divisible by #g1 we 3clude _% -#67 _l
  #3(mod #7) _:
;e4 ,s9ce _% #80-3 .k #77 _: is
  divisible by #g1 we 3clude _% #80 _l
  #3(mod #7) _:
#c4a4c4e 4 ,solu;n 43
  ,~! numb}s >e _% -#1, -#26, -#51,
-#76, #24, #49, #74, #99, _: all numb}s
t >e ( ! =m _% -#1+25*k _: = 9teg}s
.2;k4
#c4a4c4f 4 ,solu;n 43

a4 #aj
;b4 #h
;c4 #j
;d4 #f
;e4 #j
#c4a4c4g 4 ,solu;n 43

a4 ,"o possible c.t}example is _% a .k
  #2, b .k #4, c .k #4, andm .k #6 _:4
  ,c}ta9ly _% #2*3 _l #4*3(mod #6) _: b
  _% #2 /_l #4(mod #6) _:4
;b4 ,"o possible c.t}example "h is _% a
  .k #2, b .k #7, c .k #7, b .k #2, m .k
  #5 _:4 ,!n we c see _% #2 _l #7(mod
  #5) _: satifies bo? "ps ( ! hypo!sis1
  b _% #2~7 _l #3(mod #5) _: :ile
  _% #7~2 _l #4(mod #5) _:4
#c4b  ,prime ,numb}s ,ex}cises #c4b4a 4
,solu;n 43

a4 _% #39 .k #3*13 _:
;b4 _% #125 .k #5~3 _:
;c4 _% #101 _: is prime - trial divide
  by #b1 #c1 #e1 #g
;d4 _% #143 .k #11*13 _:
;e4 _% #289 .k #17~2 _:
;f4 _% #899 .k #29*31 _:
#c4b4b 4 ,solu;n 43
  ,recall _% #10&  .k #10*9*8*7*'''
*2*1 _:4 ,s we c d ! foll{+3
_%
#10&-
     .k #10*9*8*7*6*5*4cdot"3*2*1
.k (2*5)*3~2"*2~3"*7*(2*3)*5*2~2"cdot"3-
*2*1
.k #7~1"*5~2"*3~4"*2~8-

_:
#c4b4c 4 ,h9t 43
  ,prove ! 3trapositive by cases4
,solu;n 43
  ,? "q is ( ! =m 8if .2;n is a prime
numb} grt} ?an ?ree1 !n ei _% n .k
#6k+1 _: or _% n .k #6k-1 _: = "s 9teg}
.2;k04
7777777777777777777777777777777777777777
,pro( 4
  "<by 3traposi;n">4 ,assume t .2;n is n
a numb} ( ! =m _% n .k #6k+1 _: or _% n
.k #6k-1 _: = "s 9teg} .2;k4 ,? gives u
f|r total cases3
  ,case #a3 ,assume _% n .k #6k _: = "s
9teg} .2;k4 ,!n .2;n is n a prime numb}1
s9ce .2;n is divisible by bo? #b & #c4
  ,case #b3 ,assume _% n .k #6k+2 .k
#2(3k+1) _: = "s 9teg} .2;k4 ,!n .2;n is
divisible by #b & is h;e n prime4
  ,case #c3 assume _% n .k #6k+3 .k
#3(2k+1) _: = "s 9teg} .2;k4 !n .2;n is
divisible by #c & is h;e n prime4
  ,case #d3 assume _% n .k #6k+4 .k
#2(3k+2) _: = "s 9teg} .2;k4 !n .2;n is
divisible by #b & is h;e n prime4
  ,?us if .2;n is n ( ! =m _% n .k
#6k+1 _: or _% n .k #6k-1 _: = "s 9teg}
.2;k1 .2;n is n prime4 ,by 3traposi;n1
if .2;n is a prime grt} ?an ?ree !n .2;n
is ( ! =m ei _% n .k #6k+1 _: or _% n .k
#6k-1 _: = "s 9teg} .2;k4
#c4c  ,,gcd,'s & ,! ,euclid1n ,algori?m
,ex}cises #c4c4a 4 ,solu;n 43

a4 _% #12 .k #36(-#1)+48( _:#a">
;b4 _% #1 .k #21(69)+724( _:-#b">
;c4 _% #1 .k #60(-#21)+97( _:#ac">
;d4 _% #1 .k #5(-#5)+26(1) _:
#c4c4b 4 ,solu;n 43
  _% gcd (412, 32) .k #4 _:4 ,we c "r x
z ! l9e> comb9a;n3 _% #4 .k
#412(-#1)+32(13) _:
#c4c4c 4 ,solu;n 43
  _% gcd (780, 150) .k #30 _:4 ,we c "r
! gcd z ! l9e> comb9a;n _% #30 .k
#780(1)+150(-#5) _:
#c4c4d 4 ,solu;n 43
  _% gcd (70, 98, 108) .k #2 _:
#c4d  ,multiplicative ,9v}ses ,ex}cises
#c4d4a 4 ,solu;n 43

a4 _% x _l #1(mod #8) _:
;b4 _% x _l #20(mod #22) _:
;c4 _% x _l #18(mod #26) _:
#c4d4b 4 ,solu;n 43
  ,"h1 s9ce ! coe6ici5t ( .2;x isn't
relatively prime to ! modulus "! >e ei
multiple answ}s p} modulus or no solu;n4

a4 ,ea* ( _% x _l #2(mod #9) _:1 _% x _l
  #5(mod #9) _:1 & _% x _l #8(mod #9) _:
  satisfy ! giv5 equa;n4 ,we c summ>ize
  ? z _% x _l #2(mod #3) _:
;b4 ,"! is no solu;n to ? equal;y4 ,no
  multiple ( #d w "e h a rema9d} ( #c
  modulo #h4
#c4d4c 4 ,solu;n 43

a4 ,s9ce _% gcd (3, 26) .k #1 _:1 "! is
  a unique 9v}se4 ,us+ ! ,euclid1n
  ,algori?m we f9d t _% #3~-1 _l #9(mod
  #26) _:4 ,do+ ! algebra3
  _%
  #3x       .k #19(mod #26)
  (3~-1")3x .k (3~-1")19(mod #26)
  x         _l (9)19(mod #26)
  x         _l #171(mod #26)
  x         _l #15(mod #26)
  _:
  is ! unique solu;n4
;b4 ,"h _% gcd (13, 26) .k #2 _: s "! is
  no unique solu;n4 ,9/1d1 "! >e ei no
  solu;ns or two solu;ns6 ,b s9ce ! gcd
  doesn't divide _% #7 _:1 "! >e 9 fact
  no solu;ns to ? 3gru;e4
;c4 ,s9ce _% gcd (8, 426) .k #2 _:4 ,l !
  previ|s "q "! >e ei no solu;ns or two
  solu;ns4 ,? "t s9ce ! gcd does divide
  #af1 we w h two solu;ns6  ,! f/ is
  obvi|sly _% x .k #2 _:1 & ! second w
  be1 apply+ ,note #c4d4ab3
  _%
  x       .k #2+ #426
                ?3333#
                  #2
  
  .k #215
  _:
;d4 ,? "t ! modulus is #dbe1 s we h
  _% gcd (425, 8) .k #1 _: m1n+ a unique
  solu;n exi/s ! sy/em4  ,! ,euclid1n
  algori?m f9ds t _% #8~-1 .k -#53(mod
  #425) _:1 & solv+ ! expres.n gives3
  _%
  #8x       .k #16(mod #426)
  (8~-1")8x .k (8~-1")16(mod #425)
  x         _l (-#53)16(mod #425)
  x         _l -#848(mod #425)
  x         _l #2(mod #425)
  _:
  444 : actually is bo? obvi|s &
  hil>i|s4 ,x %{s t ev5 if we don't
  notice ! obvi|s solu;n1 ! me?od w give
  u ! correct result6
;e4 ,? "t1 z 2f1 _% gcd (8, 426) .k
  #2 _:1 s "! >e ei z}o or two solu;ns4
  ,b s9ce "! ! gcd doesn't divide
  _% #23 _:1 "! is no solu;n to !
  3gru;e4
#c4d4d 4 ,solu;n 43

a4 ,to h an 9v}se modulo .2;n1 a numb}
  .2a m/ 2 relatively prime to .2;n
;b4 ,to h ! prop}ty t e numb} has an
  9v}se modulo .2;n1 ! numb} .2;n m/ 2
  prime
;c4 ,n a solu;n1 b a h9t - take ea*
  example & ex}cise t _h multiple
  solu;ns & subtract ! solu;ns4 ,:at d y
  notice8
#c4e  ,modul> expon5tia;n ,ex}cises
#c4e4a 4 ,solu;n 43
  ,"h >e ! num}ic answ}s - b 2 sure y c
d ! process6

a4 #ha
;b4 #dcf
;c4 #bb
#c4f  ,applica;n3 ,5cryp;n
#c4f4a  ,basic ,ciph} ,examples
,ex}cises #c4f4a4a 4 ,solu;n 43
  8,i c alw tru/ y1 ,brutus40
#c4f4a4b 4 ,solu;n 43
  ,remov+ spaces f ! ~ws & capitaliz+
"ey?+3 8,,nyzaxmoorn04 ,! 9teg} values
>e #ac1 #bd1 #be1 #j1 #bc1 #ab1 #ad1
#ad1 #ag1 #ac4
#c4f4a4c 4 ,solu;n 43
  8,awe"s04
#d  ,sequ;es1 ,recurr;e1 & ,9duc;n
#d4a  ,sequ;es & ,s}ies ,ex}cises #d4a4a
4 ,solu;n 43

a4 _% .(4, 5, 7, 11, 19.) _:
;b4 _% .(0, 1, 8, 81, 1024.) _:
;c4 _% .(0, 1, 2, 3, 4.) _:
;d4 _% .(2, 12, 72, 432, 2592.) _:
;e4 _% .(1, 2, 5, 11, 26.) _:
#d4a4b 4 ,solu;n 43

a4 ,yes
;b4 ,no
;c4 ,no
;d4 ,yes
#d4a4c 4 ,solu;n 43

a4 _% a;n .k #2*3~n _:
;b4
  _%
  a;n .k  ;n~2"+n+2
         ?333333333#
             #2
  _:
;c4 _% a;n .k n& _:
#d4a4d 4 ,solu;n 43

a4 #aecc
;b4 #eaj
;c4 #h
;d4 #eaj
;e4 #chbe
#d4a4e 4 ,solu;n 43
  ,? "o's a lot ( fun1 s let's d x 9 a
lot ( detail4 ,? is approa* ,blaise
,pascal us$ to 4cov} ! =mula 9 8 #afed
.7,trait~/e du triangle.'
.1>i?m~/etique.'4
  ,let _% a;n .k (n+1)~3 _:4 ,!n f
example #d4a4ad1 we h t3
_%
".,s%j .k #1<n}(j+1)~3"-j~3"-
                  .k a;n"-a0-

".,s%j .k #1<n}(j+1)~3"-j~3"-
                  .k (n+1)~3"-(0+1)~3"-

".,s%j .k #1<n}j~3"+3j~2"+3j+1-j~3"-
                  .k n~3"+3n~2"+3n+1-1-

".,s%j .k #1<n}3j~2"+3j+1-
                  .k n~3"+3n~2"+3n-

".,s%j .k #1<n}3j~2"+".,s%j .k #1<n}3j+-
".,s%j .k #1<n}1  .k n~3"+3n~2"+3n-

#3".,s%j .k #1<n}j~2"+3".,s%j .k #1<n}j-
+".,s%j .k #1<n}1 .k n~3"+3n~2"+3n-

#3".,s%j .k #1<n}j~2"-
                  .k n~3"+3n~2"+3n-3".,-
s%j .k #1<n}j-".,s%j .k #1<n}1
_:
  ,we h f example #d4a4ae t
_%
".,s%j .k #1<n}j .k  ;n(n+1)
                    ?3333333#
                       #2
_:
& if we add _% #1 _: a total ( .2;n "ts1
we h _% ".,s%j .k #1<n}1 .k n _:4 ,plu7+
~! in1 we f9d3
_%
#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+3n--
3".,s%j .k #1<n}j-".,s%j .k #1<n}1
-

#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+3n--
3( ;n(n+1) )-n
-
  ?3333333#
-
     #2
-

#3".,s%j .k #1<n}j~2" .k n~3"+3n~2"+2n--
3( ;n~2"+n )
-
  ?3333333#
-
     #2
-

#3".,s%j .k #1<n}j~2" .k  #2n~3" + #6n~-
2" + #4n - #3n~2" - #3n
                         ?333333# ?3333-
33# ?333# ?333333# ?333#
                            #2       #2-
     #2      #2     #2
-

#3".,s%j .k #1<n}j~2" .k  #2n~3"+3n~2"+-
n
                         ?3333333333333-
3#
                                #2-

-

#3".,s%j .k #1<n}j~2" .k  ;n(2n+1)(n+1)-

                         ?3333333333333-
#
                               #2-

-

".,s%j .k #1<n}j~2"   .k  ;n(2n+1)(n+1)-

                         ?3333333333333-
#
                               #6-

_:
: is exactly ! =mula y le>n$ 9 calculus6
#d4a4f 4 ,solu;n 43
  ,not+ t ? is a geometric s}ies )
common ratio #b & f/ t}m #a1 let _% r .k
#2, a .k #1 _: 9 ! geometric s}ies
=mula3
_%
".,s%k .k #0<n}2~k" .k  #1-2~n+1"
                       ?333333333#
                          #1-2

.k #2~n+1"-1
_:
,? is :y a b9>y numb} : is all #a's is
alw "o less ?an ! next p{} ( #b1 e4g4
_% #1111;two .k #15;ten _:
#d4b  ,solv+ ,recurr;e ,rela;ns
#d4b4d  ,ex}cises #d4b4d4a 4 ,solu;n 43
  _% a;n .k a;n-1"+2a;n-2"+a;n-4 _:
#d4b4d4b 4 ,solu;n 43
  _% a;n .k #3+2~n+1 _:4  ,we %d use
telescop+ or it}a;n "h4  ,= example1
telescop+ gives
_%
a1-a0       .k #2~1"
a2-a1       .k #2~2"
a3-a2       .k #2~3"
'''         '''
a;n"-a;n-1" .k #2~n
_:
: 8telescopes0 to _% a;n"-a0 .k
#2~n+1"-2 _:4  ,sub/itut+ _% a0 .k #5 _:
& solv+ = _% a;n _: completes ! solu;n4
#d4b4d4c 4 ,solu;n 43
  ,we claim _% a;n .k #4~n _: "ws4 ,plug
x in3 _% #4~n .k
#3(4~n-1")+4(4~n-2") _:4 ,? "ws - j
simplify ! "r-h& side4
#d4b4d4d 4 ,solu;n 43
  ,by ! ,"*i/ic ,root ,te*nique4 _% a;n
.k #4~n"+(-1)~n _:4
#d4b4d4e 4 ,solu;n 43
_%
a;n .k  #13 (4)~n"+ #12 (-1)~n
       ?333#       ?333#
        #5          #5
_:
#d4b4d4f 4 ,solu;n 43
  ,! recurr;e is _% a;n .k
#3a;n-1"+4a;n-2 _:4 ,! solu;n ) ! giv5
9itial 3di;ns is
_%
a;n .k  #4~n+1" + (-1)~n"
       ?3333333# ?3333333#
          #5        #5
_:
#d4b4d4g 4 ,solu;n 43
  _% a;n .k #3(8)~n"+2(-5)~n _:
#d4b4d4h 4 ,solu;n 43
  _% a;n .k #42(7)~n"-24(-3)~n _: y cd
write _% a;n .k #6(7)~n+1"+8(-3)~n+1 _:
#d4c  ,ma!matical ,9duc;n ,ex}cises
#d4c4a 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,we m/ prove t _% #1+2+2~2"+2~3+'''
+2~n .k #2~n+1"-1 _: = all _% n `e
`;,n _:4 ,?us let _% ,p(n) _: 2 ! /ate;t
_% #1+2+2~2+''' +2~n .k #2~n+1"-1 _:4
,we w prove t _% ,p(n) _: is true = all
_% n `e `;,n _:4 ,f/ we e/abli% ! base
case1 _% ,p(0) _:1 : claims t _% #1 .k
#2~0+1"-1 _:4 ,s9ce _% #2~1"-1 .k #2-1
.k #1 _:1 we see t _% ,p(0) _: is true4
,n{ = ! 9ductive case4 ,assume t
_% ,p(k) _: is true = an >bitr>y _% k `e
`;,n _:4 ,t is1 _% #1+2+2~2+''' +2~k .k
#2~k+1"-1 _:4 ,we m/ %{ t _% ,p(k+1) _:
is true "<i4e41 t _% #1+2+2~2+''' +2~k+1
.k #2~k+2"-1 _:">4 ,to d ?1 we />t ) !
left-h& side ( _% ,p(k+1) _: & "w to !
"r-h& side3
_%
#1+2+2~2+''' +2~k"+2~k+1 .k #2~k+1"-1+2-
~k+1" by inductive hypothesis
.k                           #2*2~k+1"--
1
.k                           #2~k+2"-1-

_:
  ,?us _% ,p(k+1) _: is true s by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
#d4c4b 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
_% #1+3+5+''' +(2n-1) .k n~2 _:4 ,we w
prove t _% ,p(n) _: is true = all _% n
.1: #1 _:4 ,f/ ! base case1 _% ,p(1) _:4
,we h _% #1 .k #1~2 _: : is true1 s
_% ,p(1) _: is e/abli%$4 ,n{ ! 9ductive
case4 ,assume t _% ,p(k) _: is true = "s
fix$ >bitr>y _% k .1: #1 _:4 ,t is1
_% #1+3+5+''' +(2k-1) .k k~2 _:4 ,we w
n{ prove t _% ,p(k+1) _: is al true
"<i4e41 t _% #1+3+5+''' +(2k+1) .k
(k+1)~2 _:">4 ,we />t ) ! left-h& side (
_% ,p(k+1) _: & "w to ! "r-h& side3
_%
#1+3+5+''' +(2k-1)+(2k+1) .k k~2"+(2k+1-
) by ind. hyp.
.k (k+1)~2"               by factoring
_:
  ,?us _% ,p(k+1) _: holds1 s by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n .1:
#1 _:4
#d4c4c 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t _% #2~n "k
n& _:4 ,we w %{ _% ,p(n) _: is true =
all _% n .1: #4 _:4 ,f/1 we *eck ! base
case & see t yes1 _% #2~4 "k #4& _: "<z
_% #16 "k #24 _:"> s _% ,p(4) _: is
true4 ,n{ = ! 9ductive case4 ,assume
_% ,p(k) _: is true = an >bitr>y _% k
.1: #4 _:4 ,t is1 _% #2~k "k k& _:4 ,n{
3sid} _% ,p(k+1) _:3 _% #2~k+1 "k
(k+1)& _:4 ,to prove ?1 we />t ) ! left
side & "w to ! "r side4
_%
#2~k+1"       .k #2*2~k"
"k #2*k&     by the inductive hypothesis
"k (k+1)*k&   since k+1 .1 #2
.k (k+1)&
_:
  ,"!=e _% #2~k+1 "k (k+1)& _: s we h
e/abli%$ _% ,p(k+1) _:4 ,?us by !
pr9ciple ( ma!matical 9duc;n _% ,p(n) _:
is true = all _% n .1: #4 _:4
#d4c4d 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8
_%
#1~2"+2~2"+3~2+."."."+n~2" .k  ;n(n+1)(-
2n+1)
                              ?33333333-
33333#
                                    #6-

_:
04 ,= ! base case1 we %{ t _% ,p(1) _:
is true4 ,t is3
_%
,p(1)_3.k1~2 .k  #1(1+1)(2*1+1)
                ?33333333333333#
                       #6
_:
: is true4
  ,= ! 9ductive /ep1 assume t
_% ,p(k) _: is true = "s 9teg} _% k .1:
#1 _:1 t is
_%
#1~2"+2~2"+3~2+."."."+k~2" .k  ;k(k+1)(-
2k+1)
                              ?33333333-
33333#
                                    #6-

_:
& 3sid} ! /ate;t3
_%
#1~2"+2~2"+3~2+''' +k~2"+(k+1)~2" .k  ;-
k(k+1)(2k+1) +(k+1)~2"
                                     ?3-
333333333333#
-
    #6
-

.k  ;k(k+1)(2k+1)  #6(k+1)~2"
   ?3333333333333#?3333333333#
         #6            #6
-

.k  (k+1)`(k(2k+1)+6(k+1)`)
   ?33333333333333333333333#
              #6
-

.k  (k+1)`(2k~2"+k+6k+6`)
   ?333333333333333333333#
             #6
-

.k  (k+1)`(2k~2"+7k+6`)
   ?3333333333333333333#
            #6
-

.k  (k+1)`((2k+3)(k+2)`)
   ?33333333333333333333#
             #6
-

.k  (k+1)(2(k+1)+1)((k+1)+1)
   ?333333333333333333333333#
               #6
_:
#d4c4e 4 ,solu;n 43
  ,! only problem is t we n"e e/abli%$ !
base case4 ,( c|rse1 :5 _% n .k #0 _:1
_% #0+3 /.k #0+7 _:4
#d4c4f 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t t _% n+3
"k n+7 _:4 ,we w prove t _% ,p(n) _: is
true = all _% n `e `;,n _:4 ,f/1 note t
! base case holds3 _% #0+3 "k #0+7 _:4
,n{ assume = 9duc;n t _% ,p(k) _: is
true4 ,t is1 _% k+3 "k k+7 _:4 ,we m/ %{
t _% ,p(k+1) _: is true4 ,n{ s9ce _% k+3
"k k+7 _:1 add #a to bo? sides4 ,? gives
_% k+3+1 "k k+7+1 _:4 ,regr|p+
_% (k+1)+3 "k (k+1)+7 _:4 ,b ? is simply
_% ,p(k+1) _:4 ,?us by ! pr9ciple (
ma!matical 9duc;n _% ,p(n) _: is true =
all _% n `e `;,n _:4
#d4c4g 4 ,solu;n 43
  ,! problem "h is t :ile _% ,p(0) _: is
true1 & :ile _% ,p(k) $o ,p(k+1) _: =
.1"s values ( .2;k1 "! is at l1/ "o
value ( .2;k "<"nly _% k .k #99 _:"> :5
t implica;n fails4 ,= a valid pro( by
9duc;n1 _% ,p(k) $o ,p(k+1) _: m/ 2 true
= all values ( .2;k grt} ?an or equal to
! base case4
#d4c4h 4 ,h9t 43
  ,r ?an give a solu;n1 "h's j a h9t4
,:at happ5s if  .2;n is ev58
#d4c4i 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% n~2"+n _: is ev540
  ,basis /ep3 :5 _% n .k #0 _: we h
_% #0~0"+0 .k #0 _: : is a ev54
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #0 _:1 t is1
_% k~2"+k _: is ev51 & let's 3sid} !
foll{+3
_%
(k+1)~2"+(k+1) .k k~2"+2k+1+k+1
.k k~2"+3k+2
.k k~2"+k+2k+2
_:
n{ _% k~2"+k .k #2l _: = "s 9teg} .2;l
by 9ductive hypo!sis1 s we h3
_%
(k+1)~2"+(k+1) .k k~2"+k+2k+2
.k #2l+2k+2
.k #2(l+k+1)
_:
& ?us _% (k+1)~2"+(k+1) _: is ev54
  ,"!=e1 by ma? 9duc;n1 _% n~2"+n _: is
ev5 = all natural numb}s
4
#d4c4aj 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8:5 .2;n p
%ake h&s ) ea* o!r1 "! >e a total (
_%
 ;n(n-1)
?3333333#
   #2
_:
h&%akes40
  ,base case3 ,:5 _% n .k #2 _:1 "! w 2
"o h&%ake1 &
_%
 #2(2-1)  .k #1
?3333333#
   #2
_:
4  ,?us _% ,p(2) _: is true4
  ,9ductive case3 ,assume _% ,p(k) _: is
true = >bitr>y _% k .1: #2 _: "<t !
numb} ( h&%akes am;g .2;k p is
_%
 ;k(k-1)
?3333333#
   #2
_:
4  ,:at happ5s if a _% k+1 _:/ p}son %{s
up8  ,h{ _m .1new h&%akes take place8
,! new p}son m/ %ake h&s ) "ey"o "!1 :
is .2;k new  h&%akes4  ,s ! total is n{
_%
 ;k(k-1) +k .k  (k+1)k
?3333333#      ?333333#
   #2             #2
_:
1 z ne$$4
  ,"!=e1 by ! pr9ciple ( ma!matical
9duc;n1 _% ,p(n) _: is true = all _% n
.1: #2 _:4
#d4c4aa 4 ,solu;n 43
  ,! idea "h is t if we take ! log>i?m (
_% a~n _:1 we c 9cr1se .2;n by #a if we
multiply by ano!r .2a "<9side !
log>i?m">4 ,? results 9 add+ #a m _% log
(a) _: to ! total4
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t _% log
(a~n") .k nlog (a) _:4 ,! base case1
_% ,p(2) _: is true1 2c _% log (a~2") .k
log (a*a) .k log (a)+log (a) .k #2log
(a) _:1 by ! product rule = log>i?ms4
,n{ assume1 = 9duc;n1 t _% ,p(k) _: is
true4 ,t is1 _% log (a~k") .k klog
(a) _:4 ,3sid} _% log (a~k+1") _:4 ,we h
_% log (a~k+1") .k log (a~k"*a) .k log
(a~k")+log (a) .k klog (a)+log (a) _:
) ! la/ equal;y due to ! 9ductive
hypo!sis4 ,b ? simplifies to _% (k+1)log
(a) _:1 e/abli%+ _% ,p(k+1) _:4 ,"!=e by
! pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n .1:
#2 _:4
#d4c4ab 4 ,h9t 43
  ,y >e all{$ to assume ! base case4 ,=
! 9ductive case1 gr|p all b ! la/ func;n
tgr z "o sum ( func;ns1 !n apply ! usual
sum ( d}ivatives rule1 & !n ! 9ductive
hypo!sis4
#d4c4ac 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% ,f0+,f1+,f2+''' +,f;n .k
,f;n+2"-1 _:40
  ,basis /ep3 if _% n .k #0 _: !n _% ,f0
.k #0 _: :ile _% ,f;n+2"-1 .k #1-1 .k
#0 _: s ! basis /ep is true4
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #0 _:4 ,t
is1 _% ,f0+,f1+,f2+''' +,f;k .k
,f;k+2"-1 _:4 ,n{ 3sid}
_%
,f0+,f1+,f2+ ''' ,f;k"+,f;k+1" .k (,f;k-
+2"-1)+,f;k+1" by ind. hyp.
.k ,f;k+2"+,f;k+1"-1
.k ,f;k+3"-1                   by recur-
sive def.
_:
?us _% ,p(k+1) _: is true4
  ,"!=e1 by ma? 9duc;n1
_% ,f0+,f1+,f2+''' +,f;n .k ,f;n+2"-1 _:
= all natural numb}s4
#d4c4ad 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
_% ,f0+,f2+,f4+''' +,f;2n .k
,f;2n+1"-1 _:4 ,we w %{ t _% ,p(n) _: is
true = all _% n .1: #0 _:4 ,f/ ! base
case is easy 2c _% ,f0 .k #0 _: & _% ,f1
.k #1 _: s _% ,f0 .k ,f1-1 _:4 ,n{ 3sid}
! 9ductive case4 ,assume _% ,p(k) _: is
true1 t is1 assume _% ,f0+,f2+,f4+'''
+,f;2k .k ,f;2k+1"-1 _:4 ,to e/abli%
_% ,p(k+1) _: we "w f left to "r3
_%
,f0+,f2+''' +,f;2k"+,f;2k+2" .k ,f;2k+1-
"-1+,f;2k+2" by ind. hyp.
.k ,f;2k+1"+,f;2k+2"-1
.k ,f;2k+3"-1                by recursi-
ve def.
_:
  ,"!=e _% ,f0+,f2+,f4+''' +,f;2k+2 .k
,f;2k+3"-1 _:1 : is to say _% ,p(k+1) _:
holds4 ,"!=e by ! pr9ciple ( ma!matical
9duc;n1 _% ,p(n) _: is true = all _% n
.1: #0 _:4
#d4c4ae 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t t .2;n is
ei a ,fibona3i numb} ( ! sum ( 4t9ct
,fibona3i numb}s
  ,basis /ep3 ,= _% n .k #0 _:1 we h t
_% #0 .k ,f0 _: is a ,fibona3i numb}4
  ,9ductive /ep3 ,assume t "! is an
9teg} _% k .1: #0 _: s* t _% ,p(m) _: is
true = all _% #0 "k: m "k: k _:4 ,t is1
.2;m is ei a ,fibona3i numb} or ! sum (
4t9ct ,fibona3i numb}s4 ,n{ let's 3sid}
! next numb}1 _% k+1 _:3
  ,case #a3 ,if _% k+1 _: is a ,fibona3i
numb}1 !n we're d"o4
  ,case #b3 ,if _% k+1 _: is n a
,fibona3i numb}1 !n let _% ,f;m _: 2 !
l>ge/ ,fibona3i numb} less ?an
_% k+1 _:4 ,s9ce _% k+1-,f;m "k: k _: !n
we h t _% k+1-,f;m _: is ! sum ( 4t9ct
,fibona3i numb}s1 by 9ductive hypo!sis4
  ,add+ _% ,f;m _: to ? sum gives u
_% k+1-,f;m"+,f;m .k k+1 _: : !n xf a
sum ( 4t9ct ,fibona3i numb}s4
  ,?us1 by 9duc;n1 e natural numb} is ei
a ,fibona3i numb} ( ! sum ( 4t9ct
,fibona3i numb}s4
#d4c4af 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t
8_% ,f1+,f3+,f5+''' +,f;2n-1 .k
,f;2n _:0
  ,basis /ep3 ,if _% n .k #1 _: !n
_% ,f1 .k #1 _: & _% ,f;2*1 .k #1 _: s t
_% ,p(1) _: is true4
  ,9ductive /ep3 ,assume t _% ,p(k) _:
is true = "s 9teg} _% k .1: #1 _:4 ,t
is1 _% ,f1+,f3+,f5+''' +,f;2k-1 .k
,f;2k _: & 3sid}3
_%
,f1+,f3+,f5+''' +,f;2k-1"+,f;2(k+1)-1"-
 .k ,f1+,f3+,f5+''' +,f;2k-1"+,f;2k+1"
.k ,f;2k"+,f;2k+1"-
by ind. hyp.
.k ,f;2k+2"-
by rec. def.
.k ,f;2(k+1)"
_:
,& ?us _% ,p(k+1) _: is true4
  ,"!=e1 by ma? 9duc;n1
_% ,f1+,f3+,f5+''' +,f;2n-1 .k ,f;2n _:
= all 9teg}s _% n .1: #1 _:4
#d4c4ag 4 ,h9t 43
  _% ,f;k+1"(,f;k"+,f;k+1") .k
,f;k+1",f;k+2 _:
#d4c4ah 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8"! is a
/rictly 9cr1s+ sequ;e _% a1, a2, ''',
a;n _: ) _% a;n "k #100 _:40 ,we w prove
_% ,p(n) _: is true = all _% n .1:
#1 _:4 ,f/ we e/abli% ! base case3
_% ,p(1) _: says "! is a s+le numb}
_% a1 _: ) _% a1 "k #100 _:4 ,? is true
,- take _% a1 .k #0 _:4 ,n{ = ! 9ductive
/ep1 assume _% ,p(k) _: is true4 ,t is
"! exi/s a /rictly 9cr1s+ sequ;e _% a1,
a2, a3, ''', a;k _: ) _% a;k "k #100 _:4
,n{ 3sid} ? sequ;e1 plus "o m t}m1
_% a;k+1 _: : is grt} ?an _% a;k _: b
less ?an _% #100 _:4 ,s* a numb} exi/s1
= example1 ! av}age 2t _% a;k _: & #ajj4
,s !n _% ,p(k+1) _: is true1 s we h %{n
t _% ,p(k) $o ,p(k+1) _:4 ,?us by !
pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
#d4c4ai 4 ,h9t 43
  "<,alt}native idea to ! 2l pro("> ,9 !
9ductive /ep add & subtract _% #7~k _:4
,t is1 y'll h _% #7*7~k"-1-7~k"+7~k _:4
,n{ algebra4
,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,let _% ,p(n) _: 2 ! /ate;t 8#f
divides _% #7~n"-1 _:40 ,we w %{
_% ,p(n) _: is true = all _% n `e
`;,n _:4 ,f/ we e/abli% ! base case1
_% ,p(0) _:4 ,s9ce _% #7~0"-1 .k #0 _:1
& _% #0 _: is a multiple ( #f1
_% ,p(0) _: is true4 ,n{ = ! 9ductive
case4 ,assume _% ,p(k) _: holds = an
>bitr>y _% k `e `;,n _:4 ,t is1 #f
divides _% #7~k"-1 _:1 or 9 o!r ~ws1
_% #7~k"-1 .k #6j _: = "s 9teg} .2;j4
,n{ 3sid} _% #7~k+1"-1 _:3
_%
#7~k+1"-1       .k #7~k+1"-7+6-
                 by cleverness_3-#1 .k-
-#7+6
.k #7(7~k"-1)+6 factor out a 7 from the-
 first two terms
.k #7(6j)+6     by the inductive hypoth-
esis
.k #6(7j+1)     factor out a 6-

_:
  ,"!=e #f divides _% #7~k+1"-1 _:1 or 9
o!r ~ws1 _% ,p(k+1) _: is true4 ,"!=e by
! pr9ciple ( ma!matical 9duc;n1
_% ,p(n) _: is true = all _% n `e
`;,n _:4
#e  ,c.t+ ,te*niques
#e4a  ,! ,multiplicative & ,additive
,pr9ciples ,ex}cises #e4a4a 4 ,solu;n 43
  ,"! >e #bee |tfits4 ,use !
multiplicative pr9ciple4
#e4a4b 4 ,solu;n 43

a4 #h ties4  ,use ! additive pr9ciple4
;b4 #ae ties4 ,use ! multiplicative
  pr9ciple
;c4 _% #5*(4+3)+7 .k #42 _: |tfits4
#e4a4c 4 ,solu;n 43

a4 ,= example1 #af is ! numb} ( *oices y
  h if y want to wat* "o movie1 ei a
  com$y or horror flick4
;b4 ,= example1 #fc is ! numb} ( *oices
  y h if y w wat* two movies1 f/ a com$y
  & !n a horror4
#e4a4d 4 ,solu;n 43

a4 ,to maximize ! numb} ( ele;ts 9
  common 2t .2,a & .2;,b1 make _% ,a _"k
  ,b _:4  ,? wd give _% |,a.%,b| .k
  #10 _:4
;b4 .2,a & .2;,b mi<t h no ele;ts 9
  common1 giv+ _% |,a.%,b| .k #0 _:4
;c4 _% #15 "k: |,a.+,b| "k: #25 _:4  ,9
  fact1 :5 _% |,a.%,b| .k #0 _: !n
  _% |,a.+,b| .k #25 _: & :5 _% |,a.%,b|
  .k #10 _: !n _% |,a.+,b| .k #15 _:4
#e4a4e 4 ,solu;n 43
  _% |,a.+,b|+|,a.%,b| .k #13 _:4  ,use
,,pie3 we "k _% |,a.+,b| .k
#8+5-|,a.%,b| _:4
#e4a4g 4 ,h9t 43
  ,to f9d | h{ _m numb}s >e divisible by
#f & #g1 = example1 take _% #500_/42 _:
& r.d d{n4
#e4a4i 4 ,solu;n 43

a4 _% #8~5 .k #32768 _: ~ws1 s9ce y
  select f #h lrs #e "ts4
;b4 _% #8*7*6*5*4 .k #6720 _: ~ws4 ,af
  select+ a lr1 y h few} lrs to select =
  ! next "o4
;c4 _% #8*8 .k #64 _: ~ws3 y ne$ to
  select ! #dth & #eth lrs4
;d4 _% #64+64-0 .k #128 _: ~ws4 ,"! >e
  #fd ~ws : />t ) 8aha0 & ano!r #fd ~ws
  t 5d ) 8bah40 ,p}h we ov} c.t$ ! ~ws t
  bo? />t ) 8aha0 & 5d ) 8bah01 b s9ce !
  ~ws >e only #e lrs l;g1 "! >e no s*
  ~ws4
;e4 _% (8*7*6*5*4)-3*(5*4) .k #6660 _:
  ~ws4 ,all ! ~ws m9us ! bad "os4 ,!
  taboo ~w c 2 9 any ( ?ree posi;ns
  "</>t+ ) lr #a1 #b1 or #c"> & = ea*
  posi;n we m/ *oose ! o!r two lrs "<f !
  rema9+ #e lrs">4
#e4a4aa 4 ,solu;n 43

a4 #c socks4 ,h"o/ly1 if y don't c>e ab
  color1 ? is an >gu;t = n"e fold+
  socks4
;b4 #ad4 ,i cd h gra2$ #ab br{n socks 9
  a r{1 s 9 ? wor/-case sc5>io1 two
  black socks >e ! la/ ,i pick$4
#e4a4ab 4 ,solu;n 43
_%
`~( #677 `~) .k #18
   ?3333#
    #38
_:
  rooms4
#e4a4ad 4 ,solu;n 43
  ,"! >e a total ( f|r di6}5t rema9d}s
modulo #d4 ,ac to ! ,g5}aliz$ ,pig5hole
,pr9cipal1 if we h #e numb}s divid$ am;g
f|r di6}5t rema9d}s1
_%
`~( #5 `~) .k #2
   ?33#
    #4
_:
( !m h to h ! same rema9d}4 ,?us !y di6}
by a multiple ( f|r4
#e4b  ,comb9a;ns & ,p}muta;ns ,ex}cises
#e4b4a 4 ,solu;n 43

a4
  _%
  ,(#10,) .k #120
  ,(#3 ,)
  _:
  pizzas4  ,we m/ *oose "<9 no "picul>
  ord}"> #c | ( ! #aj topp+s4
;b4 _% #2~10 .k #1024 _: pizzas4  ,say
  yes or no to ea* topp+4
;c4 _% ,p(10, 5) .k #30240 _: ways4
  ,assign ea* ( ! #e spots 9 ! left
  column to a unique pizza topp+4
#e4b4b 4 ,solu;n 43
  ,despite xs "n1 we >e n look+ = a
comb9a;n "h4 ,! ord} 9 : ! ?ree numb}s
appe>s matt}s4 ,"! >e _% ,p(40, 3) .k
#40*39*38 _: di6}5t possibilities = !
8comb9a;n04 ,? is assum+ y _c rep1t any
( ! numb}s "<if y cd1 ! answ} wd 2
_% #40~3 _:">4
#e4b4d 4 ,solu;n 43
  ,af ! f/ lr "<a">1 we m/ re>range !
rema9+ #g lrs4 ,"! >e only two lrs "<;s
& ;e">1 s ? is r1lly j a bit-/r+ "q
"<?9k ( ;s z #a & ;e z #j">4 ,?us "!
_%
,(#7,) .k #21
,(#2,)
_:
anagrams />t+ ) 8a04
#e4b4f 4 ,solu;n 43

a4
  _%
  ,(#20,),(#16,),(#12,),(#8,),(#4,)
  ,(#4 ,),(#4 ,),(#4 ,),(#4,),(#4,)
  _:
  ways4 ,pick #d | ( #bj p to 2 9 ! f/
  f|r"s1 !n #d ( ! rema9+ #af = ! second
  f|r"s1 & s on "<use ! multiplicative
  pr9ciple to comb9e">4
;b4
  _%
  #5& ,(#15,),(#12,),(#9,),(#6,),(#3,)
      ,(#3 ,),(#3 ,),(#3,),(#3,),(#3,)
  _:
  ways4  ,f/ det}m9e ! tee "t ( ! #e
  bo>d memb}s1 !n select #c ( ! #ae non
  bo>d memb}s to golf ) ! f/ bo>d memb}1
  !n #c ( ! rema9+ #ab to golf ) !
  second1 & s on4
#e4b4g 4 ,solu;n 43

a4 _% #17~10 _: func;ns4  ,"! >e #ag
  *oices = ! image ( ea* ele;t 9 !
  doma94
;b4 _% ,p(17, 10) _: 9jective func;ns4
  ,"! >e #ag *oices = image ( ! f/ ele;t
  ( ! doma91 !n only #af *oices = !
  second1 & s on4
#e4c  ,! ,b9omial ,!orem & ,comb9atorial
,pro(s
#e4c4c  ,ex}cises #e4c4c4a 4 ,h9t 43
  ,"h >e two di6}5t ways to g ab x3

a4 ,comb9atorial pro(3 ,answ} ! "q 8,if
  a pizza place (f}s .2;n topp+s1 h{ _m
  pizzas c y build us+ any numb} (
  topp+s us+ ea* topp+ no m ?an once80
;b4 ,or1 use ! b9omial !orem & set
  appropriate values ( _% x and y _:4
#e4c4c4b 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m #b-lr ~ws />t ) .2a1 .2;b1
or .2;c & 5d ) ei .2;y or .2;z8
  ,answ} #a3 ,"! >e two ~ws t />t ) .2a1
two t />t ) .2;b1 two t />t ) .2;c1 = a
total ( _% #2+2+2 _:4
  ,answ} #b3 ,"! >e ?ree *oices = ! f/
lr & two *oices = ! second lr1 = a total
( _% #3*2 _:4
  ,s9ce ! two answ}s >e bo? answ}s to !
same "q1 !y >e equal4 ,?us _% #2+2+2 .k
#3*2 _:4
#e4c4c4c 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m subsets ( _% ,a .k .(1, 2,
3, ''', n+1.) _: 3ta9 exactly two
ele;ts8
  ,answ} #a3 ,we m/ *oose #b ele;ts f
_% n+1 _: *oices1 s "! >e
_%
,(n+1,)
,(#2 ,)
_:
subsets4
  ,answ} #b3 ,we br1k ? "q d{n 9to
cases1 bas$ on :at ! l>g} ( ! two ele;ts
9 ! subset is4 ,! l>g} ele;t c't 2 #a1
s9ce we ne$ at l1/ "o ele;t small} ?an
x4
  ,l>g} ele;t is #b3 "! is #a *oice = !
small} ele;t4
  ,l>g} ele;t is #c3 "! >e #b *oices = !
small} ele;t4
  ,l>g} ele;t is #d3 "! >e #c *oices = !
small} ele;t4
  ,& s on4 ,:5 ! l>g} ele;t is
_% n+1 _:1 "! >e .2;n *oices = ! small}
ele;t4 ,s9ce ea* two ele;t subset m/ 2 9
exactly "o ( ~! cases1 ! total numb} (
two ele;t subsets is _% #1+2+3+'''
+n _:4
  ,answ} #a & answ} #b >e bo? correct
answ}s to ! same "q1 s !y m/ 2 equal4
,"!=e1
_%
#1+2+3+''' +n .k ,(n+1,)
                 ,(#2 ,)
_:
#e4c4c4d 4 ,solu;n 43

a4 ,%e has
  _%
  ,(#15,)
  ,(#6 ,)
  _:
  ways to select ! #f bridesmaids1 & !n
  = ea* way1 has #f *oices = ! maid (
  honor4  ,?us %e has
  _%
  ,(#15,)6
  ,(#6 ,)
  _:
  *oices4
;b4 ,%e has #ae *oices = :o w 2 h} maid
  ( honor4  ,!n %e ne$s to select #e ( !
  rema9+ #ad frs to 2 bridesmaids1 : %e
  c d 9
  _%
  ,(#14,)
  ,(#5 ,)
  _:
  ways4  ,?us %e has
  _%
  #15,(#14,)
     ,(#5 ,)
  _:
  *oices4
;c4 ,we h answ}$ ! "q "<h{ _m w$d+ "pies
  c ! bride *oose f"> 9 two ways4  ,! f/
  way gives ! left-h& side ( ! id5t;y &
  ! second way gives ! "r-h& side ( !
  id5t;y4  ,"!=e ! id5t;y holds4
#e4c4c4e 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,y h a l>ge 3ta9} fill$ ) p+-p;g
balls1 all ) a di6}5t numb} on !m4 ,y m/
select .2;k ( ! balls1 putt+ two ( !m 9
a j> & ! o!rs 9 a box4 ,h{ _m ways c y d
?8
  ,answ} #a3 ,f/ select #b ( ! .2;n
balls to put 9 ! j>4 ,!n select
_% k-2 _: ( ! rema9+ _% n-2 _: balls to
put 9 ! box4 ,! f/ task c 2 complet$ 9
_%
,(n ,)
,(#2,)
_:
di6}5t ways1 ! second task 9
_%
,(n-2,)
,(k-2,)
_:
ways4 ,?us "! >e
_%
,(n ,),(n-2,)
,(#2,),(k-2,)
_:
ways to select ! balls4
  ,answ} #b3 ,f/ select .2;k balls f !
.2;n 9 ! 3ta9}4 ,!n pick #b ( ! .2;k
balls y pick$ to put 9 ! j>1 plac+ !
rema9+ _% k-2 _: 9 ! box4 ,! f/ task c 2
complet$ 9
_%
,(n,)
,(k,)
_:
ways1 ! second task 9
_%
,(k ,)
,(#2,)
_:
ways4 ,?us "! >e
_%
,(n,),(k ,)
,(k,),(#2,)
_:
ways to select ! balls4
  ,s9ce bo? answ}s c.t ! same ?+1 !y m/
2 equal & ! id5t;y is e/abli%$4
#e4c4c4f 4 ,solu;n 43
  ,! ~w 3ta9s #i lrs3 #c 8r0s1 #b 8a0s &
#b 8e0s1 al;g ) an 8;n0 & a 8;g04 ,we cd
f/ select ! posi;ns = ! 8r0s 9
_%
,(#9,)
,(#3,)
_:
ways1 !n ! 8a0s 9
_%
,(#6,)
,(#2,)
_:
ways1 ! 8e0s 9
_%
,(#4,)
,(#2,)
_:
ways & !n select "o ( ! rema9+ two spots
to put ! 8;n0 "<plac+ ! 8;g0 9 ! la/
spot">4 ,? gives ! answ}
_%
,(#9,),(#6,),(#4,),(#2,),(#1,)."
,(#3,),(#2,),(#2,),(#1,),(#1,)
_:
  ,alt}natively1 we cd select ! posi;ns
( ! lrs 9 ! opposite ord}1 : wd give an
answ}
_%
,(#9,),(#8,),(#7,),(#5,),(#3,)."
,(#1,),(#1,),(#2,),(#2,),(#3,)
_:
  "<": ! #c 8r0s g 9 ! rema9+ #c
spots">4 ,~! two expres.ns >e equal3
_%
,(#9,),(#6,),(#4,),(#2,),(#1,) .k ,(#9,-
),(#8,),(#7,),(#5,),(#3,)."
,(#3,),(#2,),(#2,),(#1,),(#1,)    ,(#1,-
),(#1,),(#2,),(#2,),(#3,)
_:
#e4c4c4h 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m .2;k-lr ~ws c y make us+
.2;n di6}5t lrs )|t rep1t+ any lr8
  ,answ} #a3 ,"! >e .2;n *oices = ! f/
lr1 _% n-1 _: *oices = ! second lr1
_% n-2 _: *oices = ! ?ird lr1 & s on
until _% n-(k-1) _: *oices = ! .2k? lr
"<s9ce _% k-1 _: lrs h alr be5 assign$
at t po9t">4 ,! product ( ~! numb}s c 2
writt5
_%
  ;n&
?333333#
 (n-k)&
_:
: is _% ,p(n, k) _:4  ,"!=e "! >e
_% ,p(n, k) _: ~ws4
  ,answ} #b3 ,f/ pick .2;k lrs to 2 9 !
~w f ! .2;n *oices4 ,? c 2 d"o 9
_%
,(n,)
,(k,)
_:
ways4 ,n{ >range ~? lrs 9to a ~w4 ,"! >e
.2;k *oices = ! f/ lr1 _% k-1 _: *oices
= ! second1 & s on1 = a total ( _% k& _:
>range;ts ( ! .2;k lrs4 ,?us ! total
numb} ( ~ws is
_%
,(n,)k&
,(k,)
_:
4
  ,s9ce ! two answ}s >e correct answ}s
to ! same "q1 we h e/abli%$ t
_%
,p(n, k) .k ,(n,)k&
            ,(k,)
_:
4
#e4c4c4i 4 ,solu;n 43
7777777777777777777777777777777777777777
,pro( 4
  ,"q3 ,h{ _m #e-ele;t subsets >e "! ( !
set _% .(1, 2, ''', n+3.) _:4
  ,answ} #a3 ,we *oose #e | ( !
_% n+3 _: ele;ts1 s
_%
,(n+3,)
,(#5 ,)
_:
subsets4
  ,answ} #b3 ,br1k ? up 9to cases by :at
! 8middle0 "<?ird smalle/"> ele;t ( ! #e
ele;t subset is4 ,! smalle/ ? cd 2 is a
#c4 ,9 t case1 we h
_%
,(#2,)
,(#2,)
_:
*oices = ! numb}s 2l x1 &
_%
,(n ,)
,(#2,)
_:
*oices = ! numb}s abv x4 ,alt}natively1
! middle numb} cd 2 a #d4 ,9 ? case "!
>e
_%
,(#3,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(n-1,)
,(#2 ,)
_:
*oices = ! top two numb}s4 ,if ! middle
numb} is #e1 !n "! >e
_%
,(#4,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(n-2,)
,(#2 ,)
_:
*oices = ! top two numb}s4 ,an s on1 all
! way up to ! l>ge/ ! middle numb} cd
be1 : is _% n+1 _:4 ,9 t case "! >e
_%
,(n ,)
,(#2,)
_:
*oices = ! bottom two numb}s &
_%
,(#2,)
,(#2,)
_:
*oices = ! top numb}4 ,?us ! numb} ( #e
ele;t subsets is
_%
,(#2,),(n ,)+,(#3,),(n-1,)+,(#4,),(n-2,-
)+''' +,(n ,),(#2,)."
,(#2,),(#2,) ,(#2,),(#2 ,) ,(#2,),(#2 ,-
)      ,(#2,),(#2,)
_:
  ,s9ce ! two answ}s correctly answ} !
same "q1 we h
_%
,(#2,),(n ,)+,(#3,),(n-1,)+,(#4,),(n-2,-
)+''' +,(n ,),(#2,) .k ,(n+3,)."
,(#2,),(#2,) ,(#2,),(#2 ,) ,(#2,),(#2 ,-
)      ,(#2,),(#2,)    ,(#5 ,)
_:
#e4c4c4aj 4 ,solu;n 43
  ,"h's a "pial solu;n3

a4 _% (x+1)~2 .k x~2"+2x+1 _l x~2"+1(mod
  #2) _:
;b4 _% (x+1)~5 .k
  x~5"+5x~4"+10x~3"+10x~2"+5x+1 _l
  x~5"+1(mod #5) _:
,:at c 2 sd ab ea* ea* b9omial coe6ici5t
except ! f/ & ! la/8 ,:y8
#e4d  ,a surprise 3nec;n - ,c.t+
,fibona3i numb}s ,ex}cises #e4d4a 4 ,h9t
43
  ,3di;n on ! loca;n ( ! la/ squ>e4
#e4d4b 4 ,h9t 43
  ,3di;n on ! br1kabil;y ( ! _% n+1 _:/
space4
